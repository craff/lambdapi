
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME relation_2Dnatural_2Dthm_2Da5.

Set_2Eset : hol.type -> hol.type.

Number_2ENatural_2Enatural : hol.type.

Set_2Efinite : A : hol.type -> hol.term A.

Set_2EfromPredicate : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Relation_2EwellFounded : A : hol.type -> hol.term A.

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

Number_2ENatural_2EisSuc : A : hol.type -> hol.term A.

Relation_2Esubrelation : A : hol.type -> hol.term A.

Relation_2Etransitive : A : hol.type -> hol.term A.

Set_2Einfinite : A : hol.type -> hol.term A.

Set_2Eimage : A : hol.type -> hol.term A.

Set_2Euniverse : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

Set_2Esubset : A : hol.type -> hol.term A.

Set_2Einsert : A : hol.type -> hol.term A.

Unwanted_2Eid : A : hol.type -> hol.term A.

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

Relation_2Eirreflexive : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))))).

(; axiom ;)

thm_2 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not (p_1 : hol.term hol.bool => hol.imp p_1 hol.false)).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_4 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_1 s_2) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_1 x_3 y_4) (s_2 x_3 y_4))))))).

(; axiom ;)

thm_5 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_1) n_2)))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))))).

(; axiom ;)

thm_7 : hol.proof hol.true.

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_10 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_13 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_14 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) r_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) r_1)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) r_1))).

(; axiom ;)

thm_15 : hol.proof (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))).

(; axiom ;)

thm_16 : hol.proof (hol.eq hol.bool hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1))).

(; axiom ;)

thm_17 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_21 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_22 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_23 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1) (hol.eq Number_2ENatural_2Enatural m_1 n_2))))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))).

(; axiom ;)

thm_25 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)).

(; axiom ;)

thm_26 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false).

(; axiom ;)

thm_27 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))).

(; axiom ;)

thm_31 : A : hol.type -> B : hol.type -> hol.proof (hol.forall (hol.arr B hol.bool) (p_1 : hol.term (hol.arr B hol.bool) => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (p_1 (f_2 x_4)))))))).

(; axiom ;)

thm_32 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A)))).

(; axiom ;)

thm_33 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_3)) (hol.or (hol.eq A x_1 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3)))))).

(; axiom ;)

thm_34 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)).

(; axiom ;)

thm_35 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_36 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))).

(; axiom ;)

thm_37 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.true t_1) hol.true)).

(; axiom ;)

thm_38 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.true) hol.true)).

(; axiom ;)

thm_39 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.false t_1) t_1)).

(; axiom ;)

thm_40 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.false) t_1)).

(; axiom ;)

thm_41 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 t_1) t_1)).

(; axiom ;)

thm_42 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)))).

(; axiom ;)

thm_43 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))).

(; axiom ;)

thm_44 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (Set_2Einfinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))).

(; axiom ;)

thm_45 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))).

(; axiom ;)

thm_46 : hol.proof (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))).

(; axiom ;)

thm_47 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))).

(; axiom ;)

thm_48 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_49 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr A hol.bool))) (hol.forall (hol.arr A (hol.arr A hol.bool)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr A hol.bool))).

(; Theorem: |- ((= \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_50 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)).

(; Theorem: |- ((= \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_51 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => hol.TRANS (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (thm_50 A) (thm_50 A).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r)))) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r)))) ;)

(; dict ;)

def thm_52 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool (hol.forall (hol.arr A (hol.arr A hol.bool))) (hol.forall (hol.arr A (hol.arr A hol.bool))) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (thm_49 A) (thm_51 A).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))))) ;)

(; dict ;)

def thm_53 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_54 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_55 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_56 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_54 q_1 p_2) (thm_55 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_57 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_58 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_59 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_57 p_1) (thm_58 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_60 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_61 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_0 (thm_60 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_62 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_59 p_1) (thm_61 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_63 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_64 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_62 p_2) (thm_63 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_65 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_56 q_1 p_2) (thm_64 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_66 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_67 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_65 q_1 p_2) (thm_66 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_68 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_67 q_1 p_2 hyp_1 p_2.

(; Theorem: |- p ;)

(; dict ;)

def thm_69 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_70 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_71 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_69 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_70 q_1 hyp_2).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_72 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_71 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_73 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_72 p_2 q_1 hyp_1 hyp_2) (thm_70 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_74 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_73 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_75 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_74 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_76 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_68 q_1 p_2 hyp_1 (thm_75 q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x))) ;)

(; dict ;)

def thm_77 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x))) ;)

(; dict ;)

def thm_78 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (thm_53 A r_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => thm_77 A r_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_79 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_67 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_80 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_71 q_2 p_1 hyp_1 hyp_2) (thm_69 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_81 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_80 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_82 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_81 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_83 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_79 q_2 p_1 hyp_1 (thm_82 q_2 p_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))) ;)

(; dict ;)

def thm_84 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))) ;)

(; dict ;)

def thm_85 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) (thm_53 A r_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => thm_84 A r_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x))) ;)

(; dict ;)

def thm_86 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))) ;)

(; dict ;)

def thm_87 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))) ;)

(; dict ;)

def thm_88 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))) ;)

(; dict ;)

def thm_89 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (thm_87 A r_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => thm_88 A r_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) ;)

(; dict ;)

def thm_90 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) ;)

(; dict ;)

def thm_91 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) (thm_87 A r_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => thm_90 A r_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))) ;)

(; dict ;)

def thm_92 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) ;)

(; dict ;)

def thm_93 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => hyp_1.

(; Theorem: |- ((= ((= (Relation.wellFounded r)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))))) ((= (Relation.wellFounded r)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))))) ;)

(; dict ;)

def thm_94 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))).

(; Theorem: |- ((= ((= (Relation.wellFounded r)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))))) ((= (Relation.wellFounded r)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))))) ;)

(; dict ;)

def thm_95 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (thm_94 A r_1) (thm_94 A r_1).

(; Theorem: |- ((= (Relation.wellFounded r)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n)))))) ;)

(; dict ;)

def thm_96 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_1 A r_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n)))))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_97 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))) ((A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.EQ_MP (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) (thm_95 A r_1) (thm_96 A r_1)) A r_1).

(; Theorem: |- ((= (= (Data.Bool.~ P))) (= (Data.Bool.~ P))) ;)

(; dict ;)

def thm_98 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_99 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1.

(; Theorem: |- ((= ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P))) ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F))) ;)

(; dict ;)

def thm_100 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false))) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1)) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false) (thm_98 P_1) (thm_99 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_101 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ;)

(; dict ;)

def thm_102 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1 P_1 thm_2 (thm_101 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_103 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) (thm_100 P_1) (thm_102 P_1).

(; Theorem: |- ((= ((Data.Bool.==> P) Data.Bool.F)) (Data.Bool.~ P)) ;)

(; dict ;)

def thm_104 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp P_1 hol.false) (hol.not P_1)) :=
  P_1 : hol.term hol.bool => hol.SYM hol.bool (hol.not P_1) (hol.imp P_1 hol.false) (thm_103 P_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))) Data.Bool.F)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n)))))) ;)

(; dict ;)

def thm_105 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) hol.false) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (P_1 : hol.term hol.bool => thm_104 P_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_106 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_107 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_106 q_2 p_1 hyp_2) (thm_69 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_108 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_107 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_109 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_108 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_110 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_109 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_111 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_112 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_113 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_111 A P_1) (thm_112 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_114 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_115 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_3 A) (thm_114 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_116 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_113 A P_1) (thm_115 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_117 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_110 A P_1 (thm_116 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_118 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_119 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_117 A P_1 (thm_118 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_120 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_119 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_121 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_122 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_120 A Q_2 P_1 hyp_2 (thm_121 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_123 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_122 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_124 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_123 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))) Data.Bool.F)) ;)

(; dict ;)

def thm_125 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.forall (hol.arr Number_2ENatural_2Enatural A) (x_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.imp ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_1 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) x_2) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) hol.false)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_124 A Q_1 P_2) (hol.arr Number_2ENatural_2Enatural A) hol.false (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))).

(; Theorem: |- (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))) ;)

(; dict ;)

def thm_126 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hyp_1.

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_127 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_128 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_129 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural).

(; Theorem: |- ((= (\lambda m. \lambda n. ((r (s n)) (s m)) x)) \lambda n. ((r (s n)) (s x))) ;)

(; dict ;)

def thm_130 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) x_1) (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_4) (s_2 x_1))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) x_1.

(; Theorem: |- ((= y) y) ;)

(; dict ;)

def thm_131 : y_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural y_1 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural y_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) (\lambda n. ((r (s n)) (s x)) y)) ;)

(; dict ;)

def thm_132 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 y_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM Number_2ENatural_2Enatural hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2) (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) y_1 y_1 (thm_130 A x_2 s_3 r_4) (thm_131 y_1).

(; Theorem: |- ((= (\lambda n. ((r (s n)) (s x)) y)) ((r (s y)) (s x))) ;)

(; dict ;)

def thm_133 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) y_1) (r_4 (s_3 y_1) (s_3 x_2))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) y_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((r (s y)) (s x))) ;)

(; dict ;)

def thm_134 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 y_1) (r_4 (s_3 y_1) (s_3 x_2))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 y_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) y_1) (r_4 (s_3 y_1) (s_3 x_2)) (thm_132 A y_1 x_2 s_3 r_4) (thm_133 A y_1 x_2 s_3 r_4).

(; Theorem: |- ((= (Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y))) (Data.Bool./\ ((r (s y)) (s x)))) ;)

(; dict ;)

def thm_135 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 y_1)) (hol.and (r_4 (s_3 y_1) (s_3 x_2)))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 y_1) (r_4 (s_3 y_1) (s_3 x_2)) thm_128 (thm_134 A y_1 x_2 s_3 r_4).

(; Theorem: |- ((= (\lambda m. \lambda n. ((r (s n)) (s m)) y)) \lambda n. ((r (s n)) (s y))) ;)

(; dict ;)

def thm_136 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) y_1) (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_4) (s_2 y_1))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) y_1.

(; Theorem: |- ((= z) z) ;)

(; dict ;)

def thm_137 : z_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural z_1 z_1) :=
  z_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural z_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z)) (\lambda n. ((r (s n)) (s y)) z)) ;)

(; dict ;)

def thm_138 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) y_2 z_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 y_2)) z_1)) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM Number_2ENatural_2Enatural hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) y_2) (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 y_2)) z_1 z_1 (thm_136 A y_2 s_3 r_4) (thm_137 z_1).

(; Theorem: |- ((= (\lambda n. ((r (s n)) (s y)) z)) ((r (s z)) (s y))) ;)

(; dict ;)

def thm_139 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 y_2)) z_1) (r_4 (s_3 z_1) (s_3 y_2))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 y_2)) z_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z)) ((r (s z)) (s y))) ;)

(; dict ;)

def thm_140 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) y_2 z_1) (r_4 (s_3 z_1) (s_3 y_2))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) y_2 z_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 y_2)) z_1) (r_4 (s_3 z_1) (s_3 y_2)) (thm_138 A z_1 y_2 s_3 r_4) (thm_139 A z_1 y_2 s_3 r_4).

(; Theorem: |- ((= ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ;)

(; dict ;)

def thm_141 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 y_2) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) y_2 z_1)) (hol.and (r_5 (s_4 y_2) (s_4 x_3)) (r_5 (s_4 z_1) (s_4 y_2)))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool hol.bool (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 y_2)) (hol.and (r_5 (s_4 y_2) (s_4 x_3))) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) y_2 z_1) (r_5 (s_4 z_1) (s_4 y_2)) (thm_135 A y_2 x_3 s_4 r_5) (thm_140 A z_1 y_2 s_4 r_5).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z)))) (Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y))))) ;)

(; dict ;)

def thm_142 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 y_2) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) y_2 z_1))) (hol.imp (hol.and (r_5 (s_4 y_2) (s_4 x_3)) (r_5 (s_4 z_1) (s_4 y_2))))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 y_2) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) y_2 z_1)) (hol.and (r_5 (s_4 y_2) (s_4 x_3)) (r_5 (s_4 z_1) (s_4 y_2))) thm_127 (thm_141 A z_1 y_2 x_3 s_4 r_5).

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)) (\lambda n. ((r (s n)) (s x)) z)) ;)

(; dict ;)

def thm_143 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 z_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) z_1)) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM Number_2ENatural_2Enatural hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2) (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) z_1 z_1 (thm_130 A x_2 s_3 r_4) (thm_137 z_1).

(; Theorem: |- ((= (\lambda n. ((r (s n)) (s x)) z)) ((r (s z)) (s x))) ;)

(; dict ;)

def thm_144 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) z_1) (r_4 (s_3 z_1) (s_3 x_2))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) z_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)) ((r (s z)) (s x))) ;)

(; dict ;)

def thm_145 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 z_1) (r_4 (s_3 z_1) (s_3 x_2))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) x_2 z_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 x_2)) z_1) (r_4 (s_3 z_1) (s_3 x_2)) (thm_143 A z_1 x_2 s_3 r_4) (thm_144 A z_1 x_2 s_3 r_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z))) ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) ;)

(; dict ;)

def thm_146 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 y_2) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) y_2 z_1)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 z_1)) (hol.imp (hol.and (r_5 (s_4 y_2) (s_4 x_3)) (r_5 (s_4 z_1) (s_4 y_2))) (r_5 (s_4 z_1) (s_4 x_3)))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 y_2) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) y_2 z_1))) (hol.imp (hol.and (r_5 (s_4 y_2) (s_4 x_3)) (r_5 (s_4 z_1) (s_4 y_2)))) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_5 (s_4 n_7) (s_4 m_6)) x_3 z_1) (r_5 (s_4 z_1) (s_4 x_3)) (thm_142 A z_1 y_2 x_3 s_4 r_5) (thm_145 A z_1 x_3 s_4 r_5).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z))) \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) ;)

(; dict ;)

def thm_147 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 y_1) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) y_1 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 z_5)) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_1) (s_3 x_2)) (r_4 (s_3 z_5) (s_3 y_1))) (r_4 (s_3 z_5) (s_3 x_2)))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 y_1) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) y_1 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 z_5)) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_1) (s_3 x_2)) (r_4 (s_3 z_5) (s_3 y_1))) (r_4 (s_3 z_5) (s_3 x_2))) (z_5 : hol.term Number_2ENatural_2Enatural => thm_146 A z_5 y_1 x_2 s_3 r_4).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))) (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) ;)

(; dict ;)

def thm_148 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 y_1) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) y_1 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 z_5))) (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_1) (s_3 x_2)) (r_4 (s_3 z_5) (s_3 y_1))) (r_4 (s_3 z_5) (s_3 x_2))))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 y_1) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) y_1 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_7) (s_3 m_6)) x_2 z_5)) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_1) (s_3 x_2)) (r_4 (s_3 z_5) (s_3 y_1))) (r_4 (s_3 z_5) (s_3 x_2))) thm_129 (thm_147 A y_1 x_2 s_3 r_4).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))) \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) ;)

(; dict ;)

def thm_149 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 z_5))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 z_5))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (y_4 : hol.term Number_2ENatural_2Enatural => thm_148 A y_4 x_1 s_2 r_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) ;)

(; dict ;)

def thm_150 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 z_5)))) (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_7) (s_2 m_6)) x_1 z_5))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) thm_129 (thm_149 A x_1 s_2 r_3).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z))))) \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) ;)

(; dict ;)

def thm_151 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5)))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5)))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (x_3 : hol.term Number_2ENatural_2Enatural => thm_150 A x_3 s_1 r_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) ;)

(; dict ;)

def thm_152 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5)))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) thm_129 (thm_151 A s_1 r_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z))))))) (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))))) ;)

(; dict ;)

def thm_153 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) thm_128 (thm_152 A s_1 r_2).

(; Theorem: |- ((= (\lambda m. \lambda n. ((r (s n)) (s m)) n)) \lambda n_1. ((r (s n_1)) (s n))) ;)

(; dict ;)

def thm_154 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) n_1) (n__1_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n__1_4) (s_2 n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) n_1.

(; Theorem: |- ((= (Number.Natural.suc n)) (Number.Natural.suc n)) ;)

(; dict ;)

def thm_155 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1).

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n))) (\lambda n_1. ((r (s n_1)) (s n)) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_156 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) ((n__1_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n__1_4) (s_2 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM Number_2ENatural_2Enatural hol.bool ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) n_1) (n__1_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n__1_4) (s_2 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) (thm_154 A n_1 s_2 r_3) (thm_155 n_1).

(; Theorem: |- ((= (\lambda n'. ((r (s n')) (s n)) (Number.Natural.suc n))) ((r (s (Number.Natural.suc n))) (s n))) ;)

(; dict ;)

def thm_157 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((n_27_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_27_4) (s_2 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_27_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_27_4) (s_2 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1).

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n))) ((r (s (Number.Natural.suc n))) (s n))) ;)

(; dict ;)

def thm_158 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) ((n__1_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n__1_4) (s_2 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) (thm_156 A n_1 s_2 r_3) (thm_157 A n_1 s_2 r_3).

(; Theorem: |- ((= \lambda n. ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n))) \lambda n. ((r (s (Number.Natural.suc n))) (s n))) ;)

(; dict ;)

def thm_159 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => thm_158 A n_3 s_1 r_2).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n)))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))) ;)

(; dict ;)

def thm_160 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) thm_129 (thm_159 A s_1 r_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))))) (Data.Bool.! \lambda n. ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))))) ;)

(; dict ;)

def thm_161 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) (thm_153 A s_1 r_2) (thm_160 A s_1 r_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))))) (Data.Bool.! \lambda n. ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n)))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))))) ;)

(; dict ;)

def thm_162 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) thm_127 (thm_161 A s_1 r_2).

(; Theorem: |- ((= (Data.Bool.==> ((Number.Natural.< m) n))) (Data.Bool.==> ((Number.Natural.< m) n))) ;)

(; dict ;)

def thm_163 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)).

(; Theorem: |- ((= (\lambda m. \lambda n. ((r (s n)) (s m)) m)) \lambda n. ((r (s n)) (s m))) ;)

(; dict ;)

def thm_164 : A : hol.type -> m_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) ((m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) m_1) (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_4) (s_2 m_1))) :=
  A : hol.type => m_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 n_5) (s_2 m_4)) m_1.

(; Theorem: |- ((= n) n) ;)

(; dict ;)

def thm_165 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural n_1 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural n_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n)) (\lambda n. ((r (s n)) (s m)) n)) ;)

(; dict ;)

def thm_166 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) m_2 n_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 m_2)) n_1)) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM Number_2ENatural_2Enatural hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) m_2) (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 m_2)) n_1 n_1 (thm_164 A m_2 s_3 r_4) (thm_165 n_1).

(; Theorem: |- ((= (\lambda n. ((r (s n)) (s m)) n)) ((r (s n)) (s m))) ;)

(; dict ;)

def thm_167 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 m_2)) n_1) (r_4 (s_3 n_1) (s_3 m_2))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 m_2)) n_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n)) ((r (s n)) (s m))) ;)

(; dict ;)

def thm_168 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) m_2 n_1) (r_4 (s_3 n_1) (s_3 m_2))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_6) (s_3 m_5)) m_2 n_1) ((n_5 : hol.term Number_2ENatural_2Enatural => r_4 (s_3 n_5) (s_3 m_2)) n_1) (r_4 (s_3 n_1) (s_3 m_2)) (thm_166 A n_1 m_2 s_3 r_4) (thm_167 A n_1 m_2 s_3 r_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n))) ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ;)

(; dict ;)

def thm_169 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> n_3 : hol.term Number_2ENatural_2Enatural -> m_4 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_4 n_3)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3)) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4)) (thm_163 n_3 m_4) (thm_168 A n_3 m_4 s_1 r_2).

(; Theorem: |- ((= \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n))) \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ;)

(; dict ;)

def thm_170 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4)) (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => m_3 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4)) (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))) (n_4 : hol.term Number_2ENatural_2Enatural => thm_169 A s_1 r_2 n_4 m_3).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n)))) (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))))) ;)

(; dict ;)

def thm_171 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => m_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4)) (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))) thm_129 (thm_170 A s_1 r_2 m_3).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n)))) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))))) ;)

(; dict ;)

def thm_172 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))) (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))) (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))) (m_3 : hol.term Number_2ENatural_2Enatural => thm_171 A s_1 r_2 m_3).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))))) ;)

(; dict ;)

def thm_173 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))) (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))) thm_129 (thm_172 A s_1 r_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))))) (Data.Bool.! \lambda n. ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n)))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))))))) ;)

(; dict ;)

def thm_174 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) (thm_162 A s_1 r_2) (thm_173 A s_1 r_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ;)

(; dict ;)

def thm_175 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL hol.bool (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ;)

(; dict ;)

def thm_176 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS hol.bool (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (thm_175 R_1) (thm_175 R_1).

(; Theorem: |- (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ;)

(; dict ;)

def thm_177 : hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) -> hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) :=
  hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))) ;)

(; dict ;)

def thm_178 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) -> hol.proof (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) => thm_177 hyp_1 R_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_179 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_180 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) -> hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) => hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => thm_178 R_1 hyp_1 (thm_179 R_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))) ;)

(; dict ;)

def thm_181 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.imp (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => hyp_2 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) => thm_180 R_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))))) (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))))) ;)

(; dict ;)

def thm_182 : hol.proof (hol.imp (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))))) :=
  hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) => R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => thm_181 R_1 hyp_2 (thm_177 hyp_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_183 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ;)

(; dict ;)

def thm_184 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))).

(; Theorem: |- ((= \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ;)

(; dict ;)

def thm_185 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) :=
  hol.TRANS (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) thm_184 thm_184.

(; Theorem: |- ((= (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))))) (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))))) ;)

(; dict ;)

def thm_186 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))))) :=
  hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) thm_183 thm_185.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))))) ;)

(; dict ;)

def thm_187 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))))) ;)

(; dict ;)

def thm_188 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => hol.PROVE_HYP (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (thm_179 R_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => thm_187 R_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_189 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_190 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => hol.PROVE_HYP (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) (thm_179 R_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => thm_189 R_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))))) ;)

(; dict ;)

def thm_191 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_192 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => hyp_1.

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_193 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_194 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (thm_193 R_1) (thm_193 R_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))) ;)

(; dict ;)

def thm_195 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) thm_129 (thm_194 R_1).

(; Theorem: |- ((= \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))) \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))) ;)

(; dict ;)

def thm_196 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)).

(; Theorem: |- ((= \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))) \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))) ;)

(; dict ;)

def thm_197 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) (thm_196 R_1 m_2) (thm_196 R_1 m_2).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_198 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)) thm_129 (thm_197 R_1 m_2).

(; Theorem: |- ((Number.Natural.< m) n) ;)

(; dict ;)

def thm_199 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => hyp_1.

(; Theorem: |- ((= ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y)))))) ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y)))))) ;)

(; dict ;)

def thm_200 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))).

(; Theorem: |- ((= ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y)))))) ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y)))))) ;)

(; dict ;)

def thm_201 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (thm_200 B A s_1 r_2) (thm_200 B A s_1 r_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y)))))) ;)

(; dict ;)

def thm_202 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_1 s_2) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_1 x_3 y_4) (s_2 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_4 B A r_1.

(; Theorem: |- ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y))))) ;)

(; dict ;)

def thm_203 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_202 B A r_2 s_1.

(; Theorem: |- ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y))))) ;)

(; dict ;)

def thm_204 : s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) r_2 s_1) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) :=
  s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.EQ_MP (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) r_2 s_1) (hol.forall A (x_3 : hol.term A => hol.forall B (y_4 : hol.term B => hol.imp (r_2 x_3 y_4) (s_1 x_3 y_4))))) (thm_201 B A s_1 r_2) (thm_203 B A s_1 r_2)) Number_2ENatural_2Enatural Number_2ENatural_2Enatural s_1 r_2.

(; Theorem: |- ((= ((Relation.subrelation Number.Natural.isSuc) R)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.isSuc x) y)) ((R x) y))))) ;)

(; dict ;)

def thm_205 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_204 s_1 r_2) R_1 (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n))) ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n))) ;)

(; dict ;)

def thm_206 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)).

(; Theorem: |- ((= ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n))) ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n))) ;)

(; dict ;)

def thm_207 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (thm_206 n_1 m_2) (thm_206 n_1 m_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n))) ;)

(; dict ;)

def thm_208 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_1) n_2))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => thm_5 m_1.

(; Theorem: |- ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n)) ;)

(; dict ;)

def thm_209 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => thm_208 m_2 n_1.

(; Theorem: |- ((= ((Number.Natural.isSuc x) y)) ((= (Number.Natural.suc x)) y)) ;)

(; dict ;)

def thm_210 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => (n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (hol.eq hol.bool (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) (thm_207 n_1 m_2) (thm_209 n_1 m_2)) y_1 x_2.

(; Theorem: |- ((= (Data.Bool.==> ((Number.Natural.isSuc x) y))) (Data.Bool.==> ((= (Number.Natural.suc x)) y))) ;)

(; dict ;)

def thm_211 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1)) (hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) thm_127 (thm_210 y_1 x_2).

(; Theorem: |- ((= ((R x) y)) ((R x) y)) ;)

(; dict ;)

def thm_212 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (R_3 x_2 y_1) (R_3 x_2 y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL hol.bool (R_3 x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.isSuc x) y)) ((R x) y))) ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) ;)

(; dict ;)

def thm_213 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3) y_2) (R_1 x_3 y_2))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2)) (hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3) y_2)) (R_1 x_3 y_2) (R_1 x_3 y_2) (thm_211 y_2 x_3) (thm_212 y_2 x_3 R_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Number.Natural.isSuc x) y)) ((R x) y))) \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) ;)

(; dict ;)

def thm_214 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => thm_213 R_1 y_3 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.isSuc x) y)) ((R x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) ;)

(; dict ;)

def thm_215 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))) (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) thm_129 (thm_214 R_1 x_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.isSuc x) y)) ((R x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) ;)

(; dict ;)

def thm_216 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => thm_215 R_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.isSuc x) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ;)

(; dict ;)

def thm_217 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) thm_129 (thm_216 R_1).

(; Theorem: |- ((= ((Relation.subrelation Number.Natural.isSuc) R)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ;)

(; dict ;)

def thm_218 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) (thm_205 R_1) (thm_217 R_1).

(; Theorem: |- ((= (Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R))) (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))))) ;)

(; dict ;)

def thm_219 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) thm_128 (thm_218 R_1).

(; Theorem: |- ((= ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))))) ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))))) ;)

(; dict ;)

def thm_220 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))).

(; Theorem: |- ((= ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))))) ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))))) ;)

(; dict ;)

def thm_221 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (thm_220 A r_1) (thm_220 A r_1).

(; Theorem: |- ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ;)

(; dict ;)

def thm_222 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_6 A r_1.

(; Theorem: |- ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ;)

(; dict ;)

def thm_223 : r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) r_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) :=
  r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.EQ_MP (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) (thm_221 A r_1) (thm_222 A r_1)) Number_2ENatural_2Enatural r_1.

(; Theorem: |- ((= (Relation.transitive R)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) ;)

(; dict ;)

def thm_224 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_223 r_1) R_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) Data.Bool.T)) ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) Data.Bool.T)) ;)

(; dict ;)

def thm_225 : z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true)) :=
  z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) Data.Bool.T)) ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) Data.Bool.T)) ;)

(; dict ;)

def thm_226 : z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true)) :=
  z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) (thm_225 z_1 y_2 x_3 R_4) (thm_225 z_1 y_2 x_3 R_4).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_227 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_228 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_227 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_229 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_228 t_1 hyp_1) thm_7.

(; Theorem: |- t ;)

(; dict ;)

def thm_230 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_231 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_230 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_7).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_232 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_229 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_231 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) Data.Bool.T)) ;)

(; dict ;)

def thm_233 : z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true)) :=
  z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (t_1 : hol.term hol.bool => thm_232 t_1) (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))) ;)

(; dict ;)

def thm_234 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4)))) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) => thm_191 R_2 hyp_1 x_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) ;)

(; dict ;)

def thm_235 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => thm_234 x_2 R_3 hyp_1 y_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)) ;)

(; dict ;)

def thm_236 : z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_4 x_5 y_6) (R_4 y_6 z_7)) (R_4 x_5 z_7))))) -> hol.proof (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) :=
  z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_4 x_5 y_6) (R_4 y_6 z_7)) (R_4 x_5 z_7))))) => thm_235 y_2 x_3 R_4 hyp_1 z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) Data.Bool.T) ;)

(; dict ;)

def thm_237 : z_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_4 x_5 y_6) (R_4 y_6 z_7)) (R_4 x_5 z_7))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) :=
  z_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => R_4 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_4 x_5 y_6) (R_4 y_6 z_7)) (R_4 x_5 z_7))))) => hol.EQ_MP (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) (hol.eq hol.bool (hol.imp (hol.and (R_4 x_3 y_2) (R_4 y_2 z_1)) (R_4 x_3 z_1)) hol.true) (thm_233 z_1 y_2 x_3 R_4) (thm_236 z_1 y_2 x_3 R_4 hyp_1).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))) \lambda z. Data.Bool.T) ;)

(; dict ;)

def thm_238 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4)) (z_4 : hol.term Number_2ENatural_2Enatural => hol.true)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4)) (z_4 : hol.term Number_2ENatural_2Enatural => hol.true) (z_4 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4)) hol.true) (hol.eq hol.bool (hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4)) hol.true) (thm_226 z_4 y_1 x_2 R_3) (thm_237 z_4 y_1 x_2 R_3 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))) (Data.Bool.! \lambda z. Data.Bool.T)) ;)

(; dict ;)

def thm_239 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4))) (hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.true))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4)) (z_4 : hol.term Number_2ENatural_2Enatural => hol.true) thm_129 (thm_238 y_1 x_2 R_3 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_240 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda z. t)) t)) ((= (Data.Bool.! \lambda z. t)) t)) ;)

(; dict ;)

def thm_241 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda z. t)) t)) ;)

(; dict ;)

def thm_242 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1) (thm_240 A t_1) (thm_241 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_243 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_8 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda z. t)) t) ;)

(; dict ;)

def thm_244 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => t_1)) t_1) (thm_242 A t_1) (thm_243 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda z. t)) t) ;)

(; dict ;)

def thm_245 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (z_2 : hol.term Number_2ENatural_2Enatural => t_1)) t_1) :=
  t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_244 A t_1) Number_2ENatural_2Enatural t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda z. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_246 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (z_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_245 t_1) hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))) Data.Bool.T) ;)

(; dict ;)

def thm_247 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4))) hol.true) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_2 y_1) (R_3 y_1 z_4)) (R_3 x_2 z_4))) (hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true (thm_239 y_1 x_2 R_3 hyp_1) thm_246.

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))) \lambda y. Data.Bool.T) ;)

(; dict ;)

def thm_248 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4))) (y_3 : hol.term Number_2ENatural_2Enatural => hol.true)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4))) (y_3 : hol.term Number_2ENatural_2Enatural => hol.true) (y_3 : hol.term Number_2ENatural_2Enatural => thm_247 y_3 x_1 R_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))))) (Data.Bool.! \lambda y. Data.Bool.T)) ;)

(; dict ;)

def thm_249 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4)))) (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.true))) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4))) (y_3 : hol.term Number_2ENatural_2Enatural => hol.true) thm_129 (thm_248 x_1 R_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_250 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_251 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_240 A t_1) (thm_250 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_252 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_251 A t_1) (thm_243 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_253 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_2 : hol.term Number_2ENatural_2Enatural => t_1)) t_1) :=
  t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_252 A t_1) Number_2ENatural_2Enatural t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_254 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_253 t_1) hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))))) Data.Bool.T) ;)

(; dict ;)

def thm_255 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4)))) hol.true) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) => hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_1 y_3) (R_2 y_3 z_4)) (R_2 x_1 z_4)))) (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true (thm_249 x_1 R_2 hyp_1) thm_254.

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z))))) \lambda x. Data.Bool.T) ;)

(; dict ;)

def thm_256 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4)))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.true)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4)))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.true) (x_2 : hol.term Number_2ENatural_2Enatural => thm_255 x_2 R_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda x. Data.Bool.T)) ;)

(; dict ;)

def thm_257 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.true))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4)))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.true) thm_129 (thm_256 R_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_258 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => t_1)) t_1) :=
  t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_243 A t_1) Number_2ENatural_2Enatural t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_259 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_258 t_1) hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) Data.Bool.T) ;)

(; dict ;)

def thm_260 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) hol.true) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true (thm_257 R_1 hyp_1) thm_259.

(; Theorem: |- ((= (Relation.transitive R)) Data.Bool.T) ;)

(; dict ;)

def thm_261 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1) hol.true) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.TRANS hol.bool (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) hol.true (thm_224 R_1) (thm_260 R_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) Data.Bool.T)) ;)

(; dict ;)

def thm_262 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) hol.true)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.APP_THM hol.bool hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1) hol.true (thm_219 R_1) (thm_261 R_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_263 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_264 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_263 t_1) (thm_263 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_265 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_266 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_267 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_266 thm_266.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_268 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_265 thm_267.

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_269 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_270 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_269 t_1) (thm_269 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_271 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_272 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_65 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_273 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_274 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_273 x_2 q_3 p_1 hyp_2 (thm_69 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_275 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_274 p_2 x_3 q_1 hyp_1 hyp_3 (thm_70 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_276 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_275 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_277 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_276 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_278 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_272 q_1 p_2) (thm_277 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_279 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_278 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_280 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_281 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_270 t_1) (thm_271 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_280 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_282 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_10 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_283 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_284 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_263 t_1) (thm_282 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_283 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_285 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_286 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_285 t_1) (thm_285 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_287 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_288 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_289 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_286 t_1) (thm_287 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_288 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_290 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_291 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_290 t_1) (thm_290 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_292 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_12 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_293 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_294 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_291 t_1) (thm_292 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_293 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_295 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_296 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_295 t_1) (thm_295 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_297 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_13 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_298 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_294 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_296 t_1) (thm_297 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_299 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_289 t_1) (thm_298 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_300 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_284 t_1) (thm_299 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_301 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_281 t_1) (thm_300 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_302 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_301 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_303 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_304 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_268 thm_302 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_303 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_305 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_306 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_304 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) => thm_305 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) Data.Bool.T)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ;)

(; dict ;)

def thm_307 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) hol.true) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_264 t_1) (thm_306 t_1)) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))).

(; Theorem: |- ((= ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ;)

(; dict ;)

def thm_308 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.TRANS hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) hol.true) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) (thm_262 R_1 hyp_1) (thm_307 R_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R)))) (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))))) ;)

(; dict ;)

def thm_309 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) thm_127 (thm_308 R_1 hyp_1).

(; Theorem: |- ((= ((Relation.subrelation Number.Natural.<) R)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ;)

(; dict ;)

def thm_310 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_204 s_1 r_2) R_1 (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Relation.subrelation Number.Natural.<) R))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)))))) ;)

(; dict ;)

def thm_311 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1)) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) (thm_309 R_1 hyp_1) (thm_310 R_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Relation.subrelation Number.Natural.<) R)))) (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))))) ;)

(; dict ;)

def thm_312 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1))) (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1)) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))))) thm_127 (thm_311 R_1 hyp_1).

(; Theorem: |- ((= ((R m) n)) ((R m) n)) ;)

(; dict ;)

def thm_313 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (R_3 m_2 n_1) (R_3 m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL hol.bool (R_3 m_2 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Relation.subrelation Number.Natural.<) R))) ((R m) n))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)))))) ((R m) n))) ;)

(; dict ;)

def thm_314 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_3)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3)) (R_3 m_2 n_1)) (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5))))) (R_3 m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_3)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3))) (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))))) (R_3 m_2 n_1) (R_3 m_2 n_1) (thm_312 R_3 hyp_1) (thm_313 n_1 m_2 R_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)))))) ((R m) n))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Relation.subrelation Number.Natural.<) R))) ((R m) n))) ;)

(; dict ;)

def thm_315 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5))))) (R_3 m_2 n_1)) (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_3)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3)) (R_3 m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hol.SYM hol.bool (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_3)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3)) (R_3 m_2 n_1)) (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5))))) (R_3 m_2 n_1)) (thm_314 n_1 m_2 R_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ;)

(; dict ;)

def thm_316 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ;)

(; dict ;)

def thm_317 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (thm_316 r_1 q_2 p_3) (thm_316 r_1 q_2 p_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r)) ;)

(; dict ;)

def thm_318 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) -> hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => hyp_1.

(; Theorem: |- ((Data.Bool./\ p) ((Data.Bool.==> q) r)) ;)

(; dict ;)

def thm_319 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof (hol.and p_3 (hol.imp q_2 r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) r) ;)

(; dict ;)

def thm_320 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hyp_2 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) -> hol.proof (hol.imp (hol.imp p_3 q_2) r_1) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_2 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => thm_318 r_1 q_2 p_3 hyp_2 (thm_319 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r)) ;)

(; dict ;)

def thm_321 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof (hol.imp (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_2 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => thm_320 r_1 q_2 p_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ;)

(; dict ;)

def thm_322 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => hyp_2 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => thm_321 r_1 q_2 p_3 hyp_2 (thm_318 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) r) ;)

(; dict ;)

def thm_323 : p_1 : hol.term hol.bool -> r_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) -> hol.proof (hol.imp q_3 r_2) :=
  p_1 : hol.term hol.bool => r_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) p_1 (hol.imp q_3 r_2) hyp_1.

(; Theorem: |- ((Data.Bool.==> q) r) ;)

(; dict ;)

def thm_324 : p_1 : hol.term hol.bool -> r_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) -> hol.proof (hol.imp q_3 r_2) :=
  p_1 : hol.term hol.bool => r_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) => hol.PROVE_HYP (hol.and p_1 (hol.imp q_3 r_2)) (hol.imp q_3 r_2) (thm_319 r_2 q_3 p_1 hyp_1) (hyp_2 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) => thm_323 p_1 r_2 q_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_325 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 q_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_326 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof p_3 :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.imp q_2 r_1) p_3 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_327 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof p_3 :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hol.PROVE_HYP (hol.and p_3 (hol.imp q_2 r_1)) p_3 (thm_319 r_1 q_2 p_3 hyp_1) (hyp_2 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => thm_326 r_1 q_2 p_3 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_328 : r_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 (hol.imp q_3 r_1)) -> hyp_2 : hol.proof (hol.imp p_2 q_3) -> hol.proof q_3 :=
  r_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 (hol.imp q_3 r_1)) => hyp_2 : hol.proof (hol.imp p_2 q_3) => thm_325 q_3 p_2 hyp_2 (thm_327 r_1 q_3 p_2 hyp_1).

(; Theorem: |- r ;)

(; dict ;)

def thm_329 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> r_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 (hol.imp q_1 r_3)) -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hol.proof r_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 (hol.imp q_1 r_3)) => hyp_2 : hol.proof (hol.imp p_2 q_1) => thm_324 p_2 r_3 q_1 hyp_1 (thm_328 r_3 p_2 q_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) r) ;)

(; dict ;)

def thm_330 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof (hol.imp (hol.imp p_3 q_2) r_1) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_2 : hol.proof (hol.imp p_3 q_2) => thm_329 q_2 p_3 r_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r)) ;)

(; dict ;)

def thm_331 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => thm_330 r_1 q_2 p_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n)))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)))))) ((R m) n))) ;)

(; dict ;)

def thm_332 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1))) (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5))))) (R_3 m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (thm_317 r_1 q_2 p_3) (thm_322 r_1 q_2 p_3 (thm_331 r_1 q_2 p_3))) (R_3 m_2 n_1) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) ;)

(; dict ;)

def thm_333 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) ;)

(; dict ;)

def thm_334 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (thm_333 R_1) (thm_333 R_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ;)

(; dict ;)

def thm_335 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) thm_129 (thm_334 R_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) ;)

(; dict ;)

def thm_336 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) ;)

(; dict ;)

def thm_337 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (thm_336 R_1 x_2) (thm_336 R_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) ;)

(; dict ;)

def thm_338 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)) thm_129 (thm_337 R_1 x_2).

(; Theorem: |- ((= (= (\lambda _11335. ((R x) _11335) y))) (= (\lambda _11335. ((R x) _11335) y))) ;)

(; dict ;)

def thm_339 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1)) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1)).

(; Theorem: |- ((= (\lambda _11335. ((R x) _11335) (Number.Natural.suc x))) ((R x) (Number.Natural.suc x))) ;)

(; dict ;)

def thm_340 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool ((__11335_3 : hol.term Number_2ENatural_2Enatural => R_2 x_1 __11335_3) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1))) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (__11335_3 : hol.term Number_2ENatural_2Enatural => R_2 x_1 __11335_3) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1).

(; Theorem: |- ((= ((= (\lambda _11335. ((R x) _11335) y)) (\lambda _11335. ((R x) _11335) (Number.Natural.suc x)))) ((= (\lambda _11335. ((R x) _11335) y)) ((R x) (Number.Natural.suc x)))) ;)

(; dict ;)

def thm_341 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1)) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1)) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (thm_339 y_1 x_2 R_3) (thm_340 x_2 R_3).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_342 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= (\lambda _11335. ((R x) _11335) y)) ((R x) y)) ;)

(; dict ;)

def thm_343 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) (R_3 x_2 y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1.

(; Theorem: |- ((= (= (\lambda _11335. ((R x) _11335) y))) (= ((R x) y))) ;)

(; dict ;)

def thm_344 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1)) (hol.eq hol.bool (R_3 x_2 y_1))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) (R_3 x_2 y_1) thm_342 (thm_343 y_1 x_2 R_3).

(; Theorem: |- ((= ((R x) (Number.Natural.suc x))) ((R x) (Number.Natural.suc x))) ;)

(; dict ;)

def thm_345 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1))) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL hol.bool (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)).

(; Theorem: |- ((= ((= (\lambda _11335. ((R x) _11335) y)) ((R x) (Number.Natural.suc x)))) ((= ((R x) y)) ((R x) (Number.Natural.suc x)))) ;)

(; dict ;)

def thm_346 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (hol.eq hol.bool (R_3 x_2 y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1)) (hol.eq hol.bool (R_3 x_2 y_1)) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (thm_344 y_1 x_2 R_3) (thm_345 x_2 R_3).

(; Theorem: |- ((= ((= (\lambda _11335. ((R x) _11335) y)) (\lambda _11335. ((R x) _11335) (Number.Natural.suc x)))) ((= ((R x) y)) ((R x) (Number.Natural.suc x)))) ;)

(; dict ;)

def thm_347 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (hol.eq hol.bool (R_3 x_2 y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (hol.eq hol.bool (R_3 x_2 y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (thm_341 y_1 x_2 R_3) (thm_346 y_1 x_2 R_3).

(; Theorem: |- ((= \lambda _11335. ((R x) _11335)) \lambda _11335. ((R x) _11335)) ;)

(; dict ;)

def thm_348 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (__11335_3 : hol.term Number_2ENatural_2Enatural => R_2 x_1 __11335_3) (__11335_3 : hol.term Number_2ENatural_2Enatural => R_2 x_1 __11335_3)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (__11335_3 : hol.term Number_2ENatural_2Enatural => R_2 x_1 __11335_3).

(; Theorem: |- ((= (Number.Natural.suc x)) y) ;)

(; dict ;)

def thm_349 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) => hyp_1.

(; Theorem: |- ((= y) (Number.Natural.suc x)) ;)

(; dict ;)

def thm_350 : x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1) y_2) -> hol.proof (hol.eq Number_2ENatural_2Enatural y_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1) y_2) => hol.SYM Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1) y_2 (thm_349 y_2 x_1 hyp_1).

(; Theorem: |- ((= (\lambda _11335. ((R x) _11335) y)) (\lambda _11335. ((R x) _11335) (Number.Natural.suc x))) ;)

(; dict ;)

def thm_351 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) -> hol.proof (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) (thm_348 x_2 R_3) (thm_350 x_2 y_1 hyp_1).

(; Theorem: |- ((= ((R x) y)) ((R x) (Number.Natural.suc x))) ;)

(; dict ;)

def thm_352 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) -> hol.proof (hol.eq hol.bool (R_3 x_2 y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) => hol.EQ_MP (hol.eq hol.bool ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) y_1) ((__11335_4 : hol.term Number_2ENatural_2Enatural => R_3 x_2 __11335_4) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (hol.eq hol.bool (R_3 x_2 y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (thm_347 y_1 x_2 R_3) (thm_351 y_1 x_2 R_3 hyp_1).

(; Theorem: |- ((= ((R x) (Number.Natural.suc x))) ((R x) y)) ;)

(; dict ;)

def thm_353 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) -> hol.proof (hol.eq hol.bool (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (R_3 x_2 y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) => hol.SYM hol.bool (R_3 x_2 y_1) (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (thm_352 y_1 x_2 R_3 hyp_1).

(; Theorem: |- ((= ((R n) (Number.Natural.suc n))) ((R n) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_354 : n_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.REFL hol.bool (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)).

(; Theorem: |- ((= ((R n) (Number.Natural.suc n))) ((R n) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_355 : n_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.eq hol.bool (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.TRANS hol.bool (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (thm_354 n_1 R_2) (thm_354 n_1 R_2).

(; Theorem: |- ((R n) (Number.Natural.suc n)) ;)

(; dict ;)

def thm_356 : n_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) -> hol.proof (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => thm_192 R_2 hyp_1 n_1.

(; Theorem: |- ((R x) (Number.Natural.suc x)) ;)

(; dict ;)

def thm_357 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) -> hol.proof (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => (n_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => hol.EQ_MP (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (R_2 n_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (thm_355 n_1 R_2) (thm_356 n_1 R_2 hyp_1)) x_1 R_2 hyp_1.

(; Theorem: |- ((R x) (Number.Natural.suc x)) ;)

(; dict ;)

def thm_358 : x_1 : hol.term Number_2ENatural_2Enatural -> R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) -> hol.proof (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) (R_2 x_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (thm_192 R_2 hyp_1) (hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => thm_357 x_1 R_2 hyp_2).

(; Theorem: |- ((R x) y) ;)

(; dict ;)

def thm_359 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hyp_2 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) -> hol.proof (R_3 x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_2 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_1) => hol.EQ_MP (R_3 x_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (R_3 x_2 y_1) (thm_353 y_1 x_2 R_3 hyp_2) (thm_358 x_2 R_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)) ;)

(; dict ;)

def thm_360 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_1 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3) y_2) (R_1 x_3 y_2)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_1 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_2 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3) y_2) => thm_359 y_2 x_3 R_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))) ;)

(; dict ;)

def thm_361 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_1 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_1 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => y_3 : hol.term Number_2ENatural_2Enatural => thm_360 R_1 y_3 x_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y)))) ;)

(; dict ;)

def thm_362 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => x_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2) y_3) (R_1 x_2 y_3))) (thm_338 R_1 x_2) (thm_361 R_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n)))) ;)

(; dict ;)

def thm_363 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n)))) ;)

(; dict ;)

def thm_364 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)))) (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (thm_335 R_3) (thm_362 R_3 hyp_1)) (hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) => thm_363 n_1 m_2 R_3 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))) ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))) ;)

(; dict ;)

def thm_365 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))) ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))) ;)

(; dict ;)

def thm_366 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (thm_365 R_1 y_2 x_3) (thm_365 R_1 y_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)))) ;)

(; dict ;)

def thm_367 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))) ;)

(; dict ;)

def thm_368 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_4) (R_1 x_3 y_4)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_4) (R_1 x_3 y_4)))) => thm_367 R_1 hyp_1 x_2.

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)) ;)

(; dict ;)

def thm_369 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_1 x_4 y_5)))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_1 x_4 y_5)))) => thm_368 R_1 x_3 hyp_1 y_2.

(; Theorem: |- ((Number.Natural.< x) y) ;)

(; dict ;)

def thm_370 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) => hyp_1.

(; Theorem: |- ((R x) y) ;)

(; dict ;)

def thm_371 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) -> hol.proof (R_3 x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) => thm_369 R_3 y_1 x_2 hyp_1 (thm_370 y_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R x) y)) ;)

(; dict ;)

def thm_372 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 x_2 y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) => thm_371 y_1 x_2 R_3 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ;)

(; dict ;)

def thm_373 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) (R_1 x_2 y_3)))) => x_2 : hol.term Number_2ENatural_2Enatural => y_3 : hol.term Number_2ENatural_2Enatural => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_3) => thm_372 y_3 x_2 R_1 hyp_2 (thm_367 R_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)) ;)

(; dict ;)

def thm_374 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_1 x_4 y_5)))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (R_1 m_3 n_2)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_1 x_4 y_5)))) => (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_1 x_4 y_5)))) => hol.EQ_MP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_3 y_2) (R_1 x_3 y_2)) (thm_366 R_1 y_2 x_3) (thm_373 R_1 (thm_367 R_1 hyp_1) x_3 y_2)) R_1 n_2 m_3 hyp_1.

(; Theorem: |- ((R m) n) ;)

(; dict ;)

def thm_375 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (R_3 m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => thm_374 R_3 n_1 m_2 hyp_1 (thm_199 n_1 m_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n)) ;)

(; dict ;)

def thm_376 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) => thm_375 n_1 m_2 R_3 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y))))) ((R m) n))) ;)

(; dict ;)

def thm_377 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => hol.EQ_MP (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5)))) (R_3 m_2 n_1))) (thm_364 n_1 m_2 R_3 hyp_1) (thm_376 n_1 m_2 R_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (Number.Natural.suc x)) y)) ((R x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< x) y)) ((R x) y)))))) ((R m) n)) ;)

(; dict ;)

def thm_378 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5))))) (R_3 m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => thm_332 n_1 m_2 R_3 (thm_377 n_1 m_2 R_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Relation.subrelation Number.Natural.<) R))) ((R m) n)) ;)

(; dict ;)

def thm_379 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_3)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3)) (R_3 m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => hol.EQ_MP (hol.imp (hol.imp (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_4) y_5) (R_3 x_4 y_5)))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_5) (R_3 x_4 y_5))))) (R_3 m_2 n_1)) (hol.imp (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_3)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_3)) (R_3 m_2 n_1)) (thm_315 n_1 m_2 R_3 hyp_1) (thm_378 n_1 m_2 R_3 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) R)) (Relation.transitive R))) ((Relation.subrelation Number.Natural.<) R)) ;)

(; dict ;)

def thm_380 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1) (Relation_2Etransitive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) R_1)) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) R_1)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_14 R_1.

(; Theorem: |- ((R m) n) ;)

(; dict ;)

def thm_381 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (R_3 m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => thm_379 n_1 m_2 R_3 hyp_1 hyp_2 hyp_3 (thm_380 R_3).

(; Theorem: |- ((R m) n) ;)

(; dict ;)

def thm_382 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) -> hol.proof (R_3 m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => R_3 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_3 x_4 y_5) (R_3 y_5 z_6)) (R_3 x_4 z_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_3 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => hol.PROVE_HYP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (R_3 m_2 n_1) (thm_199 n_1 m_2 hyp_3) (hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) => thm_381 n_1 m_2 R_3 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)) ;)

(; dict ;)

def thm_383 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_4 y_5) (R_1 y_5 z_6)) (R_1 x_4 z_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_1 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (R_1 m_3 n_2)) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_4 y_5) (R_1 y_5 z_6)) (R_1 x_4 z_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => R_1 n_4 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4))) => hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) => thm_382 n_2 m_3 R_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))) ;)

(; dict ;)

def thm_384 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_3 y_4) (R_1 y_4 z_5)) (R_1 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_1 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_3 y_4) (R_1 y_4 z_5)) (R_1 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_1 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))) => n_3 : hol.term Number_2ENatural_2Enatural => thm_383 R_1 n_3 m_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_385 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => m_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))) (thm_198 R_1 m_2) (thm_384 R_1 m_2 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_386 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (thm_192 R_1 hyp_2) (hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (thm_195 R_1) (thm_385 R_1 hyp_1 hyp_3)).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_387 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (thm_191 R_1 hyp_1) (hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => thm_386 R_1 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_388 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (thm_190 R_1 hyp_2) (hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))) => thm_387 R_1 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))) ;)

(; dict ;)

def thm_389 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))) (thm_188 R_1 hyp_1) (hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) => thm_388 R_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n))))) ;)

(; dict ;)

def thm_390 : R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) => thm_389 R_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda R. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((R x) y)) ((R y) z))) ((R x) z)))))) (Data.Bool.! \lambda n. ((R n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((R m) n)))))) ;)

(; dict ;)

def thm_391 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3)))))) :=
  R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_390 R_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((\lambda m. \lambda n. ((r (s n)) (s m)) x) y)) ((\lambda m. \lambda n. ((r (s n)) (s m)) y) z))) ((\lambda m. \lambda n. ((r (s n)) (s m)) x) z)))))) (Data.Bool.! \lambda n. ((\lambda m. \lambda n. ((r (s n)) (s m)) n) (Number.Natural.suc n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((\lambda m. \lambda n. ((r (s n)) (s m)) m) n))))) ;)

(; dict ;)

def thm_392 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => (R_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.EQ_MP (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_1 x_2 y_3) (R_1 y_3 z_4)) (R_1 x_2 z_4))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => R_1 n_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (R_1 m_2 n_3))))) (thm_176 R_1) (thm_182 (hol.EQ_MP (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (R_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (R_2 x_3 y_4) (R_2 y_4 z_5)) (R_2 x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => R_2 n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (R_2 m_3 n_4)))))) thm_186 thm_391) R_1)) (m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_4) (s_1 m_3)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))))) ;)

(; dict ;)

def thm_393 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.EQ_MP (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 y_4) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) y_4 z_5)) ((m_6 : hol.term Number_2ENatural_2Enatural => n_7 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_7) (s_1 m_6)) x_3 z_5))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => (m_4 : hol.term Number_2ENatural_2Enatural => n_5 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_5) (s_1 m_4)) n_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) ((m_5 : hol.term Number_2ENatural_2Enatural => n_6 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 n_6) (s_1 m_5)) m_3 n_4))))) (hol.imp (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))))) (thm_174 A s_1 r_2) (thm_392 A s_1 r_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))))) (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))))) ;)

(; dict ;)

def thm_394 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))).

(; Theorem: |- ((= ((= ((r (s (Number.Natural.suc n))) (s n))) Data.Bool.T)) ((= ((r (s (Number.Natural.suc n))) (s n))) Data.Bool.T)) ;)

(; dict ;)

def thm_395 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true)) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true).

(; Theorem: |- ((= ((= ((r (s (Number.Natural.suc n))) (s n))) Data.Bool.T)) ((= ((r (s (Number.Natural.suc n))) (s n))) Data.Bool.T)) ;)

(; dict ;)

def thm_396 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true)) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) (thm_395 A n_1 s_2 r_3) (thm_395 A n_1 s_2 r_3).

(; Theorem: |- ((= ((r (s (Number.Natural.suc n))) (s n))) ((= ((r (s (Number.Natural.suc n))) (s n))) Data.Bool.T)) ;)

(; dict ;)

def thm_397 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true)) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => (t_1 : hol.term hol.bool => thm_232 t_1) (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)).

(; Theorem: |- ((r (s (Number.Natural.suc n))) (s n)) ;)

(; dict ;)

def thm_398 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (s_2 n_4))) -> hol.proof (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (s_2 n_4))) => thm_126 A s_2 r_3 hyp_1 n_1.

(; Theorem: |- ((= ((r (s (Number.Natural.suc n))) (s n))) Data.Bool.T) ;)

(; dict ;)

def thm_399 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (s_2 n_4))) -> hol.proof (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (s_2 n_4))) => hol.EQ_MP (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (s_2 n_1)) hol.true) (thm_397 A n_1 s_2 r_3) (thm_398 A n_1 s_2 r_3 hyp_1).

(; Theorem: |- ((= \lambda n. ((r (s (Number.Natural.suc n))) (s n))) \lambda n. Data.Bool.T) ;)

(; dict ;)

def thm_400 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.true)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.true) (n_3 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq hol.bool (r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) hol.true) (hol.eq hol.bool (r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) hol.true) (thm_396 A n_3 s_1 r_2) (thm_399 A n_3 s_1 r_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))) (Data.Bool.! \lambda n. Data.Bool.T)) ;)

(; dict ;)

def thm_401 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.true))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)) (n_3 : hol.term Number_2ENatural_2Enatural => hol.true) thm_129 (thm_400 A s_1 r_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda n. t)) t)) ((= (Data.Bool.! \lambda n. t)) t)) ;)

(; dict ;)

def thm_402 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda n. t)) t)) ;)

(; dict ;)

def thm_403 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) (thm_240 A t_1) (thm_402 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. t)) t) ;)

(; dict ;)

def thm_404 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) (thm_403 A t_1) (thm_243 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. t)) t) ;)

(; dict ;)

def thm_405 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => t_1)) t_1) :=
  t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_404 A t_1) Number_2ENatural_2Enatural t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda n. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_406 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_405 t_1) hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))) Data.Bool.T) ;)

(; dict ;)

def thm_407 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) hol.true) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true (thm_401 A s_1 r_2 hyp_1) thm_406.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) Data.Bool.T)) ;)

(; dict ;)

def thm_408 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) hol.true)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) hol.true (thm_394 A s_1 r_2) (thm_407 A s_1 r_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) Data.Bool.T)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) ;)

(; dict ;)

def thm_409 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) hol.true) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => (t_1 : hol.term hol.bool => thm_282 t_1) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) ;)

(; dict ;)

def thm_410 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.TRANS hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) hol.true) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (thm_408 A s_1 r_2 hyp_1) (thm_409 A s_1 r_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))))) ;)

(; dict ;)

def thm_411 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.SYM hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (thm_410 A s_1 r_2 hyp_1).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) ;)

(; dict ;)

def thm_412 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) ;)

(; dict ;)

def thm_413 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (thm_412 A s_1 r_2) (thm_412 A s_1 r_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) ;)

(; dict ;)

def thm_414 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) thm_129 (thm_413 A s_1 r_2).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) ;)

(; dict ;)

def thm_415 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) ;)

(; dict ;)

def thm_416 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (thm_415 A x_1 s_2 r_3) (thm_415 A x_1 s_2 r_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) ;)

(; dict ;)

def thm_417 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1))))) (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) thm_129 (thm_416 A x_1 s_2 r_3).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) ;)

(; dict ;)

def thm_418 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1)))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) ;)

(; dict ;)

def thm_419 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1)))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) (thm_418 A x_1 y_2 s_3 r_4) (thm_418 A x_1 y_2 s_3 r_4).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) ;)

(; dict ;)

def thm_420 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1)))) (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1))) thm_129 (thm_419 A x_1 y_2 s_3 r_4).

(; Theorem: |- ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y))) ;)

(; dict ;)

def thm_421 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> y_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) -> hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => y_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) => hyp_1.

(; Theorem: |- ((r (s y)) (s x)) ;)

(; dict ;)

def thm_422 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> y_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) -> hol.proof (r_5 (s_4 y_3) (s_4 x_2)) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => y_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (r_5 (s_4 z_1) (s_4 y_3)) (r_5 (s_4 y_3) (s_4 x_2)) hyp_1.

(; Theorem: |- ((r (s y)) (s x)) ;)

(; dict ;)

def thm_423 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> y_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) -> hol.proof (r_5 (s_4 y_3) (s_4 x_2)) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => y_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) => hol.PROVE_HYP (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) (r_5 (s_4 y_3) (s_4 x_2)) (thm_421 A z_1 x_2 y_3 s_4 r_5 hyp_1) (hyp_2 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) => thm_422 A z_1 x_2 y_3 s_4 r_5 hyp_2).

(; Theorem: |- ((r (s z)) (s y)) ;)

(; dict ;)

def thm_424 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2))) -> hol.proof (r_5 (s_4 z_3) (s_4 y_2)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2)) hyp_1.

(; Theorem: |- ((r (s z)) (s y)) ;)

(; dict ;)

def thm_425 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2))) -> hol.proof (r_5 (s_4 z_3) (s_4 y_2)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2))) => hol.PROVE_HYP (hol.and (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2))) (r_5 (s_4 z_3) (s_4 y_2)) (thm_421 A z_3 x_1 y_2 s_4 r_5 hyp_1) (hyp_2 : hol.proof (hol.and (r_5 (s_4 y_2) (s_4 x_1)) (r_5 (s_4 z_3) (s_4 y_2))) => thm_424 A x_1 y_2 z_3 s_4 r_5 hyp_2).

(; Theorem: |- ((r (s y)) (s x)) ;)

(; dict ;)

def thm_426 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_4 (s_3 y_2) (s_3 x_1)) -> hol.proof (r_4 (s_3 y_2) (s_3 x_1)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_4 (s_3 y_2) (s_3 x_1)) => hyp_1.

(; Theorem: |- ((r (s z)) (s y)) ;)

(; dict ;)

def thm_427 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_4 (s_3 z_2) (s_3 y_1)) -> hol.proof (r_4 (s_3 z_2) (s_3 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_4 (s_3 z_2) (s_3 y_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z))) ;)

(; dict ;)

def thm_428 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z))) ;)

(; dict ;)

def thm_429 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (thm_428 A z_1 x_2 r_3) (thm_428 A z_1 x_2 r_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)) x_1)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z))))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z)))) ;)

(; dict ;)

def thm_430 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.forall A (x__1_4 : hol.term A => hol.imp ((y_5 : hol.term A => hol.and (r_3 x_2 y_5) (r_3 y_5 z_1)) x__1_4) (hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_3 x_5 y_6) (r_3 y_6 z_7)) (r_3 x_5 z_7))))) (r_3 x_2 z_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) (r_3 x_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_124 A Q_1 P_2) A (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) (r_3 x_2 z_1)) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1)).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))) ;)

(; dict ;)

def thm_431 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hol.proof (hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_2 x_1 y_3) (r_2 y_3 z_4)) (r_2 x_1 z_4)))) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => thm_92 A r_2 hyp_1 x_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))) ;)

(; dict ;)

def thm_432 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) -> hol.proof (hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_3 x_2 y_1) (r_3 y_1 z_4)) (r_3 x_2 z_4))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) => thm_431 A x_2 r_3 hyp_1 y_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)) ;)

(; dict ;)

def thm_433 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) -> hol.proof (hol.imp (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) (r_4 x_3 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) => thm_432 A y_2 x_3 r_4 hyp_1 z_1.

(; Theorem: |- ((Data.Bool./\ ((r x) y)) ((r y) z)) ;)

(; dict ;)

def thm_434 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) -> hol.proof (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) => hyp_1.

(; Theorem: |- ((r x) z) ;)

(; dict ;)

def thm_435 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) -> hyp_2 : hol.proof (hol.and (r_4 x_3 y_1) (r_4 y_1 z_2)) -> hol.proof (r_4 x_3 z_2) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) => hyp_2 : hol.proof (hol.and (r_4 x_3 y_1) (r_4 y_1 z_2)) => thm_433 A z_2 y_1 x_3 r_4 hyp_1 (thm_434 A z_2 y_1 x_3 r_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z)) ;)

(; dict ;)

def thm_436 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (r_4 x_3 y_1) (r_4 y_1 z_2)) -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) (r_4 x_3 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_4 x_3 y_1) (r_4 y_1 z_2)) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) => thm_435 A y_1 z_2 x_3 r_4 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z))) ;)

(; dict ;)

def thm_437 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) (hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) (r_4 x_3 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) => thm_436 A y_2 z_1 x_3 r_4 hyp_1.

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)) y)) ((Data.Bool./\ ((r x) y)) ((r y) z))) ;)

(; dict ;)

def thm_438 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) (hol.and (r_4 x_3 y_1) (r_4 y_1 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1.

(; Theorem: |- (\lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)) y) ;)

(; dict ;)

def thm_439 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) -> hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((r x) y)) ((r y) z)) ;)

(; dict ;)

def thm_440 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_1)) y_2) -> hol.proof (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_1)) y_2) => hol.EQ_MP ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_1)) y_2) (hol.and (r_4 x_3 y_2) (r_4 y_2 z_1)) (thm_438 A y_2 z_1 x_3 r_4) (thm_439 A y_2 z_1 x_3 r_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z)) ;)

(; dict ;)

def thm_441 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) (r_4 x_3 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) => thm_437 A z_2 y_1 x_3 r_4 (thm_440 A z_2 y_1 x_3 r_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)) y)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z))) ;)

(; dict ;)

def thm_442 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) (hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) (r_4 x_3 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (r_4 x_3 y_5) (r_4 y_5 z_2)) y_1) => thm_441 A y_1 z_2 x_3 r_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)) y)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z)))) ;)

(; dict ;)

def thm_443 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.imp ((y_5 : hol.term A => hol.and (r_3 x_2 y_5) (r_3 y_5 z_1)) y_4) (hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_3 x_5 y_6) (r_3 y_6 z_7)) (r_3 x_5 z_7))))) (r_3 x_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_4 : hol.term A => thm_442 A y_4 z_1 x_2 r_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z))) ;)

(; dict ;)

def thm_444 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) (r_3 x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_430 A z_1 x_2 r_3 (thm_443 A z_1 x_2 r_3).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z))) ;)

(; dict ;)

def thm_445 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ((r x) z)) ;)

(; dict ;)

def thm_446 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) (r_3 x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) => thm_444 A z_1 x_2 r_3 (thm_445 A z_1 x_2 r_3 hyp_1).

(; Theorem: |- ((r x) z) ;)

(; dict ;)

def thm_447 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) -> hol.proof (r_3 x_2 z_1) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) => thm_446 A z_1 x_2 r_3 hyp_2 (thm_92 A r_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z)) ;)

(; dict ;)

def thm_448 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) => thm_447 A z_1 x_2 r_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z))) ;)

(; dict ;)

def thm_449 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hol.proof (hol.forall A (z_3 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_2 x_1 y_4) (r_2 y_4 z_3))) (r_2 x_1 z_3))) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => z_3 : hol.term A => thm_448 A z_3 x_1 r_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z)))) ;)

(; dict ;)

def thm_450 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_1 x_2 y_4) (r_1 y_4 z_3))) (r_1 x_2 z_3)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => x_2 : hol.term A => thm_449 A x_2 r_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r x) y)) ((r y) z)))) ((r x) z))))) ;)

(; dict ;)

def thm_451 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_1 x_2 y_4) (r_1 y_4 z_3))) (r_1 x_2 z_3))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => thm_450 A r_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((r (s z)) y)) ((r y) (s x))))) ((r (s z)) (s x))) ;)

(; dict ;)

def thm_452 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (r_4 (s_3 z_2) y_5) (r_4 y_5 (s_3 x_1)))) (r_4 (s_3 z_2) (s_3 x_1))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (r_3 x_2 y_4) (r_3 y_4 z_1))) (r_3 x_2 z_1)) (thm_429 A z_1 x_2 r_3) (thm_451 A r_3 (thm_92 A r_3 hyp_1) x_2 z_1)) A z_1 x_2 r_3 hyp_1) A (s_3 x_1) (s_3 z_2) r_4 hyp_1.

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((r (s z)) y)) ((r y) (s x))) (s y))) ((Data.Bool./\ ((r (s z)) (s y))) ((r (s y)) (s x)))) ;)

(; dict ;)

def thm_453 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) (hol.and (r_5 (s_4 z_3) (s_4 y_1)) (r_5 (s_4 y_1) (s_4 x_2)))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV A hol.bool (y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((r (s z)) (s y))) ((r (s y)) (s x)))) (\lambda y. ((Data.Bool./\ ((r (s z)) y)) ((r y) (s x))) (s y))) ;)

(; dict ;)

def thm_454 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_1))) (s_4 y_2))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM hol.bool ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_1))) (s_4 y_2)) (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) (thm_453 A y_2 x_1 z_3 s_4 r_5).

(; Theorem: |- ((= ((= ((r (s z)) (s y))) Data.Bool.T)) ((= ((r (s z)) (s y))) Data.Bool.T)) ;)

(; dict ;)

def thm_455 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true).

(; Theorem: |- ((= ((= ((r (s z)) (s y))) Data.Bool.T)) ((= ((r (s z)) (s y))) Data.Bool.T)) ;)

(; dict ;)

def thm_456 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (thm_455 A y_1 z_2 s_3 r_4) (thm_455 A y_1 z_2 s_3 r_4).

(; Theorem: |- ((= ((r (s z)) (s y))) ((= ((r (s z)) (s y))) Data.Bool.T)) ;)

(; dict ;)

def thm_457 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => (t_1 : hol.term hol.bool => thm_232 t_1) (r_4 (s_3 z_2) (s_3 y_1)).

(; Theorem: |- ((= ((r (s z)) (s y))) Data.Bool.T) ;)

(; dict ;)

def thm_458 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_4 (s_3 z_2) (s_3 y_1)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_4 (s_3 z_2) (s_3 y_1)) => hol.EQ_MP (r_4 (s_3 z_2) (s_3 y_1)) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (thm_457 A y_1 z_2 s_3 r_4) (thm_427 A y_1 z_2 s_3 r_4 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((r (s z)) (s y)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_459 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> z_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_4 (s_3 z_2) (s_3 y_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (r_4 (s_3 z_2) (s_3 y_1))) (hol.and hol.true)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => z_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_4 (s_3 z_2) (s_3 y_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (r_4 (s_3 z_2) (s_3 y_1)) hol.true thm_128 (hol.EQ_MP (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 z_2) (s_3 y_1)) hol.true) (thm_456 A y_1 z_2 s_3 r_4) (thm_458 A y_1 z_2 s_3 r_4 hyp_1)).

(; Theorem: |- ((= ((= ((r (s y)) (s x))) Data.Bool.T)) ((= ((r (s y)) (s x))) Data.Bool.T)) ;)

(; dict ;)

def thm_460 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true).

(; Theorem: |- ((= ((= ((r (s y)) (s x))) Data.Bool.T)) ((= ((r (s y)) (s x))) Data.Bool.T)) ;)

(; dict ;)

def thm_461 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) (thm_460 A x_1 y_2 s_3 r_4) (thm_460 A x_1 y_2 s_3 r_4).

(; Theorem: |- ((= ((r (s y)) (s x))) ((= ((r (s y)) (s x))) Data.Bool.T)) ;)

(; dict ;)

def thm_462 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => (t_1 : hol.term hol.bool => thm_232 t_1) (r_4 (s_3 y_2) (s_3 x_1)).

(; Theorem: |- ((= ((r (s y)) (s x))) Data.Bool.T) ;)

(; dict ;)

def thm_463 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_4 (s_3 y_2) (s_3 x_1)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_4 (s_3 y_2) (s_3 x_1)) => hol.EQ_MP (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.true) (thm_462 A x_1 y_2 s_3 r_4) (thm_426 A x_1 y_2 s_3 r_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((r (s z)) (s y))) ((r (s y)) (s x)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_464 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) -> hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) -> hol.proof (hol.eq hol.bool (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) (hol.and hol.true hol.true)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) => hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) => hol.APP_THM hol.bool hol.bool (hol.and (r_5 (s_4 z_3) (s_4 y_2))) (hol.and hol.true) (r_5 (s_4 y_2) (s_4 x_1)) hol.true (thm_459 A y_2 z_3 s_4 r_5 hyp_2) (hol.EQ_MP (hol.eq hol.bool (r_5 (s_4 y_2) (s_4 x_1)) hol.true) (hol.eq hol.bool (r_5 (s_4 y_2) (s_4 x_1)) hol.true) (thm_461 A x_1 y_2 s_4 r_5) (thm_463 A x_1 y_2 s_4 r_5 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_465 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_271 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ ((r (s z)) (s y))) ((r (s y)) (s x)))) Data.Bool.T) ;)

(; dict ;)

def thm_466 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) -> hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) -> hol.proof (hol.eq hol.bool (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) hol.true) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) => hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) => hol.TRANS hol.bool (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) (hol.and hol.true hol.true) hol.true (thm_464 A x_1 y_2 z_3 s_4 r_5 hyp_1 hyp_2) thm_465.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((r (s z)) (s y))) ((r (s y)) (s x)))) ;)

(; dict ;)

def thm_467 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) -> hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) -> hol.proof (hol.eq hol.bool hol.true (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1)))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) => hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) => hol.SYM hol.bool (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) hol.true (thm_466 A x_1 y_2 z_3 s_4 r_5 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((r (s z)) (s y))) ((r (s y)) (s x))) ;)

(; dict ;)

def thm_468 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) -> hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) -> hol.proof (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_5 (s_4 y_2) (s_4 x_1)) => hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_2)) => hol.EQ_MP hol.true (hol.and (r_5 (s_4 z_3) (s_4 y_2)) (r_5 (s_4 y_2) (s_4 x_1))) (thm_467 A x_1 y_2 z_3 s_4 r_5 hyp_1 hyp_2) thm_7.

(; Theorem: |- (\lambda y. ((Data.Bool./\ ((r (s z)) y)) ((r y) (s x))) (s y)) ;)

(; dict ;)

def thm_469 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) -> hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) -> hol.proof ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => hol.EQ_MP (hol.and (r_5 (s_4 z_3) (s_4 y_1)) (r_5 (s_4 y_1) (s_4 x_2))) ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) (thm_454 A x_2 y_1 z_3 s_4 r_5) (thm_468 A x_2 y_1 z_3 s_4 r_5 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_470 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_116 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_471 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_121 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_472 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_473 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_471 A Q_3 x_1 P_2 hyp_2 (thm_472 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_474 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_473 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_475 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_474 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_476 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_470 A P_2) (thm_475 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((r (s z)) y)) ((r y) (s x)))) ;)

(; dict ;)

def thm_477 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2)))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_476 A x_1 P_2 hyp_1) A (s_4 y_1) (y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((r (s z)) y)) ((r y) (s x)))) ;)

(; dict ;)

def thm_478 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) -> hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2)))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => hyp_2 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => hol.PROVE_HYP ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2)))) (thm_469 A y_1 x_2 z_3 s_4 r_5 hyp_1 hyp_2) (hyp_3 : hol.proof ((y_6 : hol.term A => hol.and (r_5 (s_4 z_3) y_6) (r_5 y_6 (s_4 x_2))) (s_4 y_1)) => thm_477 A y_1 x_2 z_3 s_4 r_5 hyp_3).

(; Theorem: |- ((r (s z)) (s x)) ;)

(; dict ;)

def thm_479 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) -> hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) -> hyp_3 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) -> hol.proof (r_5 (s_4 z_3) (s_4 x_2)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) => hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => hyp_3 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => thm_452 A x_2 z_3 s_4 r_5 hyp_1 (thm_478 A y_1 x_2 z_3 s_4 r_5 hyp_2 hyp_3).

(; Theorem: |- ((r (s z)) (s x)) ;)

(; dict ;)

def thm_480 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) -> hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) -> hyp_3 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) -> hol.proof (r_5 (s_4 z_3) (s_4 x_2)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) => hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => hyp_3 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => hol.PROVE_HYP (r_5 (s_4 z_3) (s_4 y_1)) (r_5 (s_4 z_3) (s_4 x_2)) (thm_427 A y_1 z_3 s_4 r_5 hyp_3) (hyp_4 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => thm_479 A y_1 x_2 z_3 s_4 r_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((r (s z)) (s x)) ;)

(; dict ;)

def thm_481 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) -> hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) -> hyp_3 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) -> hol.proof (r_5 (s_4 z_3) (s_4 x_2)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) => hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => hyp_3 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => hol.PROVE_HYP (r_5 (s_4 y_1) (s_4 x_2)) (r_5 (s_4 z_3) (s_4 x_2)) (thm_426 A x_2 y_1 s_4 r_5 hyp_2) (hyp_4 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => thm_480 A y_1 x_2 z_3 s_4 r_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((r (s z)) (s x)) ;)

(; dict ;)

def thm_482 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) -> hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) -> hyp_3 : hol.proof (hol.and (r_5 (s_4 y_1) (s_4 x_2)) (r_5 (s_4 z_3) (s_4 y_1))) -> hol.proof (r_5 (s_4 z_3) (s_4 x_2)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) => hyp_2 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => hyp_3 : hol.proof (hol.and (r_5 (s_4 y_1) (s_4 x_2)) (r_5 (s_4 z_3) (s_4 y_1))) => hol.PROVE_HYP (r_5 (s_4 z_3) (s_4 y_1)) (r_5 (s_4 z_3) (s_4 x_2)) (thm_425 A x_2 y_1 z_3 s_4 r_5 hyp_3) (hyp_4 : hol.proof (r_5 (s_4 z_3) (s_4 y_1)) => thm_481 A y_1 x_2 z_3 s_4 r_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((r (s z)) (s x)) ;)

(; dict ;)

def thm_483 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> z_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) -> hyp_2 : hol.proof (hol.and (r_5 (s_4 y_1) (s_4 x_2)) (r_5 (s_4 z_3) (s_4 y_1))) -> hol.proof (r_5 (s_4 z_3) (s_4 x_2)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => z_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) => hyp_2 : hol.proof (hol.and (r_5 (s_4 y_1) (s_4 x_2)) (r_5 (s_4 z_3) (s_4 y_1))) => hol.PROVE_HYP (r_5 (s_4 y_1) (s_4 x_2)) (r_5 (s_4 z_3) (s_4 x_2)) (thm_423 A z_3 x_2 y_1 s_4 r_5 hyp_2) (hyp_3 : hol.proof (r_5 (s_4 y_1) (s_4 x_2)) => thm_482 A y_1 x_2 z_3 s_4 r_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))) ;)

(; dict ;)

def thm_484 : A : hol.type -> z_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> y_3 : hol.term Number_2ENatural_2Enatural -> s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) -> hol.proof (hol.imp (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) (r_5 (s_4 z_1) (s_4 x_2))) :=
  A : hol.type => z_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => y_3 : hol.term Number_2ENatural_2Enatural => s_4 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_5 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall A (z_8 : hol.term A => hol.imp (hol.and (r_5 x_6 y_7) (r_5 y_7 z_8)) (r_5 x_6 z_8))))) => hyp_2 : hol.proof (hol.and (r_5 (s_4 y_3) (s_4 x_2)) (r_5 (s_4 z_1) (s_4 y_3))) => thm_483 A y_3 x_2 z_1 s_4 r_5 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))) ;)

(; dict ;)

def thm_485 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 z_5) (s_3 y_2))) (r_4 (s_3 z_5) (s_3 x_1)))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall A (z_7 : hol.term A => hol.imp (hol.and (r_4 x_5 y_6) (r_4 y_6 z_7)) (r_4 x_5 z_7))))) => z_5 : hol.term Number_2ENatural_2Enatural => thm_484 A z_5 x_1 y_2 s_3 r_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))) ;)

(; dict ;)

def thm_486 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (r_3 x_4 y_5) (r_3 y_5 z_6)) (r_3 x_4 z_6))))) => y_4 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_3 (s_2 y_4) (s_2 x_1)) (r_3 (s_2 z_5) (s_2 y_4))) (r_3 (s_2 z_5) (s_2 x_1)))) (thm_420 A x_1 y_4 s_2 r_3) (thm_485 A x_1 y_4 s_2 r_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x)))))) ;)

(; dict ;)

def thm_487 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => x_3 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3))))) (thm_417 A x_3 s_1 r_2) (thm_486 A x_3 s_1 r_2 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r (s y)) (s x))) ((r (s z)) (s y)))) ((r (s z)) (s x))))))) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))) ;)

(; dict ;)

def thm_488 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) (thm_411 A s_1 r_2 hyp_2) (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (z_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (r_2 (s_1 y_4) (s_1 x_3)) (r_2 (s_1 z_5) (s_1 y_4))) (r_2 (s_1 z_5) (s_1 x_3)))))) (thm_414 A s_1 r_2) (thm_487 A s_1 r_2 hyp_1)).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))))) ;)

(; dict ;)

def thm_489 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => thm_393 A s_1 r_2 (thm_488 A s_1 r_2 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))))) ;)

(; dict ;)

def thm_490 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) (Set.infinite ((Set.image s) Set.universe)))) Data.Bool.F)) ;)

(; dict ;)

def thm_491 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.imp (hol.and (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false)) (hol.imp (hol.imp (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) hol.false)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => thm_331 r_1 q_2 p_3) hol.false (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))).

(; Theorem: |- ((= ((= (Set.infinite Set.universe)) Data.Bool.T)) ((= (Set.infinite Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_492 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true).

(; Theorem: |- ((= ((= (Set.infinite Set.universe)) Data.Bool.T)) ((= (Set.infinite Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_493 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) thm_492 thm_492.

(; Theorem: |- ((= (Set.infinite Set.universe)) ((= (Set.infinite Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_494 : hol.proof (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true)) :=
  (t_1 : hol.term hol.bool => thm_232 t_1) (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))).

(; Theorem: |- ((= (Set.infinite Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_495 : hol.proof (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) :=
  hol.EQ_MP (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) thm_494 thm_15.

(; Theorem: |- ((= (Data.Bool./\ (Set.infinite Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_496 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.and hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true thm_128 (hol.EQ_MP (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) thm_493 thm_495).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))))) ;)

(; dict ;)

def thm_497 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_498 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.and hol.true (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.and hol.true) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) thm_496 (thm_497 A s_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))))) ;)

(; dict ;)

def thm_499 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (t_1 : hol.term hol.bool => thm_271 t_1) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))))) ;)

(; dict ;)

def thm_500 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS hol.bool (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.and hol.true (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) (thm_498 A s_1) (thm_499 A s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))))) ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_501 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.SYM hol.bool (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) (thm_500 A s_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))) ;)

(; dict ;)

def thm_502 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_2 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))) ;)

(; dict ;)

def thm_503 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) (thm_502 A s_1 x_2) (thm_502 A s_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))) ;)

(; dict ;)

def thm_504 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))) (hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3)) thm_129 (thm_503 A s_1 x_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y)))) ;)

(; dict ;)

def thm_505 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> y_2 : hol.term Number_2ENatural_2Enatural -> x_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_3) (s_1 y_2)))) -> hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_3) (s_1 y_2)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => y_2 : hol.term Number_2ENatural_2Enatural => x_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_3) (s_1 y_2)))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))) ;)

(; dict ;)

def thm_506 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> y_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3)))) -> hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => y_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))) ;)

(; dict ;)

def thm_507 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> y_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3)))) -> hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => y_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3)))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) (thm_505 A s_2 y_3 x_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3)))) => thm_506 A x_1 s_2 y_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))) ;)

(; dict ;)

def thm_508 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> y_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) -> hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => y_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_1) (s_2 y_3))) => hyp_1.

(; Theorem: |- ((= (s x)) (s y)) ;)

(; dict ;)

def thm_509 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1))) -> hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1)) hyp_1.

(; Theorem: |- ((= (s x)) (s y)) ;)

(; dict ;)

def thm_510 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1))) -> hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1))) (hol.eq A (s_3 x_2) (s_3 y_1)) (thm_508 A x_2 s_3 y_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_3 x_2) (s_3 y_1))) => thm_509 A y_1 x_2 s_3 hyp_2).

(; Theorem: |- ((= (s x)) (s y)) ;)

(; dict ;)

def thm_511 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hyp_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_512 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_513 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) => thm_512 y_1 x_2 hyp_1.

(; Theorem: |- ((Number.Natural.< y) x) ;)

(; dict ;)

def thm_514 : x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_2 x_1) -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_2 x_1) :=
  x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_2 x_1) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ;)

(; dict ;)

def thm_515 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> n_3 : hol.term Number_2ENatural_2Enatural -> m_4 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ;)

(; dict ;)

def thm_516 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> n_3 : hol.term Number_2ENatural_2Enatural -> m_4 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (thm_515 A s_1 r_2 n_3 m_4) (thm_515 A s_1 r_2 n_3 m_4).

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ;)

(; dict ;)

def thm_517 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> m_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_2 (s_1 n_5) (s_1 m_4))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => m_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_2 (s_1 n_5) (s_1 m_4))))) => thm_490 A s_1 r_2 hyp_1 m_3.

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))) ;)

(; dict ;)

def thm_518 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> n_3 : hol.term Number_2ENatural_2Enatural -> m_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => thm_517 A s_1 r_2 m_4 hyp_1 n_3.

(; Theorem: |- ((r (s n)) (s m)) ;)

(; dict ;)

def thm_519 : A : hol.type -> m_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) -> hol.proof (r_4 (s_3 n_2) (s_3 m_1)) :=
  A : hol.type => m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) => thm_518 A s_3 r_4 n_2 m_1 hyp_1 (thm_199 n_2 m_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))))) ((r (s n)) (s m))) ;)

(; dict ;)

def thm_520 : A : hol.type -> m_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) (r_4 (s_3 n_2) (s_3 m_1))) :=
  A : hol.type => m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) => thm_519 A m_1 n_2 s_3 r_4 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))) ;)

(; dict ;)

def thm_521 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> n_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_2 (s_1 n_5) (s_1 m_4))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_2 (s_1 n_5) (s_1 m_4))))) => m_4 : hol.term Number_2ENatural_2Enatural => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) => thm_520 A m_4 n_3 s_1 r_2 hyp_2 (thm_490 A s_1 r_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m))))) ;)

(; dict ;)

def thm_522 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => n_3 : hol.term Number_2ENatural_2Enatural => thm_521 A s_1 r_2 n_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))))) (Data.Bool.! \lambda n. (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) ((r (s n)) (s m)))))) ;)

(; dict ;)

def thm_523 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => thm_522 A s_1 r_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< y) x)) ((r (s x)) (s y))) ;)

(; dict ;)

def thm_524 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_3 : hol.term Number_2ENatural_2Enatural -> y_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_4 x_3) (r_2 (s_1 x_3) (s_1 y_4))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_3 : hol.term Number_2ENatural_2Enatural => y_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => (A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hol.EQ_MP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (r_2 (s_1 n_3) (s_1 m_4))) (thm_516 A s_1 r_2 n_3 m_4) (thm_523 A s_1 r_2 (thm_490 A s_1 r_2 hyp_1) n_3 m_4)) A s_1 r_2 x_3 y_4 hyp_1.

(; Theorem: |- ((r (s x)) (s y)) ;)

(; dict ;)

def thm_525 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) -> hol.proof (r_4 (s_3 x_2) (s_3 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) => thm_524 A s_3 r_4 x_2 y_1 hyp_1 (thm_514 x_2 y_1 hyp_2).

(; Theorem: |- ((= r) r) ;)

(; dict ;)

def thm_526 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) r_1 r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A (hol.arr A hol.bool)) r_1.

(; Theorem: |- ((= (r (s x))) (r (s y))) ;)

(; dict ;)

def thm_527 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq (hol.arr A hol.bool) (r_4 (s_3 x_2)) (r_4 (s_3 y_1))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.APP_THM A (hol.arr A hol.bool) r_4 r_4 (s_3 x_2) (s_3 y_1) (thm_526 A r_4) (thm_511 A y_1 x_2 s_3 hyp_1).

(; Theorem: |- ((= (s y)) (s y)) ;)

(; dict ;)

def thm_528 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq A (s_2 y_1) (s_2 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL A (s_2 y_1).

(; Theorem: |- ((= ((r (s x)) (s y))) ((r (s y)) (s y))) ;)

(; dict ;)

def thm_529 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 x_2) (s_3 y_1)) (r_4 (s_3 y_1) (s_3 y_1))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.APP_THM A hol.bool (r_4 (s_3 x_2)) (r_4 (s_3 y_1)) (s_3 y_1) (s_3 y_1) (thm_527 A y_1 x_2 s_3 r_4 hyp_1) (thm_528 A y_1 s_3).

(; Theorem: |- ((= ((= ((r x) x)) Data.Bool.F)) ((= ((r x) x)) Data.Bool.F)) ;)

(; dict ;)

def thm_530 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (hol.eq hol.bool (r_2 x_1 x_1) hol.false)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (r_2 x_1 x_1) hol.false).

(; Theorem: |- ((= ((= ((r x) x)) Data.Bool.F)) ((= ((r x) x)) Data.Bool.F)) ;)

(; dict ;)

def thm_531 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (hol.eq hol.bool (r_2 x_1 x_1) hol.false)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (thm_530 A x_1 r_2) (thm_530 A x_1 r_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_532 : hyp_1 : hol.proof hol.false -> hol.proof hol.false :=
  hyp_1 : hol.proof hol.false => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. p) ;)

(; dict ;)

def thm_533 : hyp_1 : hol.proof hol.false -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) :=
  hyp_1 : hol.proof hol.false => hol.EQ_MP hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) thm_16 (thm_532 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_534 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof hol.false -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_533 hyp_1 P_1.

(; Theorem: |- ((Data.Bool.==> Data.Bool.F) P) ;)

(; dict ;)

def thm_535 : P_1 : hol.term hol.bool -> hol.proof (hol.imp hol.false P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_534 P_1 hyp_1.

(; Theorem: |- (Data.Bool.~ P) ;)

(; dict ;)

def thm_536 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.not P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> P) Data.Bool.F) ;)

(; dict ;)

def thm_537 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.imp P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.EQ_MP (hol.not P_1) (hol.imp P_1 hol.false) (thm_103 P_1) (thm_536 P_1 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_538 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_539 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.not P_1) -> hol.proof hol.false :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.not P_1) => thm_537 P_1 hyp_2 (thm_538 P_1 hyp_1).

(; Theorem: |- ((= P) Data.Bool.F) ;)

(; dict ;)

def thm_540 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.eq hol.bool P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.PROP_EXT P_1 hol.false (hyp_2 : hol.proof hol.false => thm_535 P_1 (thm_532 hyp_2)) (hyp_2 : hol.proof P_1 => thm_539 P_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ P)) ((= P) Data.Bool.F)) ;)

(; dict ;)

def thm_541 : P_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.not P_1) (hol.eq hol.bool P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => thm_540 P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((r x) x))) ((= ((r x) x)) Data.Bool.F)) ;)

(; dict ;)

def thm_542 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.not (r_2 x_1 x_1)) (hol.eq hol.bool (r_2 x_1 x_1) hol.false)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => (P_1 : hol.term hol.bool => thm_541 P_1) (r_2 x_1 x_1).

(; Theorem: |- (Data.Bool.~ ((r x) x)) ;)

(; dict ;)

def thm_543 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hol.proof (hol.not (r_2 x_1 x_1)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => thm_86 A r_2 hyp_1 x_1.

(; Theorem: |- ((= ((r x) x)) Data.Bool.F) ;)

(; dict ;)

def thm_544 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hol.proof (hol.eq hol.bool (r_2 x_1 x_1) hol.false) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => thm_542 A x_1 r_2 (thm_543 A x_1 r_2 hyp_1).

(; Theorem: |- ((= ((r (s y)) (s y))) Data.Bool.F) ;)

(; dict ;)

def thm_545 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.not (r_3 x_4 x_4))) -> hol.proof (hol.eq hol.bool (r_3 (s_2 y_1) (s_2 y_1)) hol.false) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.not (r_3 x_4 x_4))) => (A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => (A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hol.EQ_MP (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (hol.eq hol.bool (r_2 x_1 x_1) hol.false) (thm_531 A x_1 r_2) (thm_544 A x_1 r_2 hyp_1)) A x_1 r_2 hyp_1) A (s_2 y_1) r_3 hyp_1.

(; Theorem: |- ((= ((r (s x)) (s y))) Data.Bool.F) ;)

(; dict ;)

def thm_546 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 x_2) (s_3 y_1)) hol.false) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.TRANS hol.bool (r_4 (s_3 x_2) (s_3 y_1)) (r_4 (s_3 y_1) (s_3 y_1)) hol.false (thm_529 A y_1 x_2 s_3 r_4 hyp_2) (thm_545 A y_1 s_3 r_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((r (s x)) (s y)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_547 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (r_4 (s_3 x_2) (s_3 y_1))) (hol.imp hol.false)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (r_4 (s_3 x_2) (s_3 y_1)) hol.false thm_127 (thm_546 A y_1 x_2 s_3 r_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_548 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((r (s x)) (s y))) ((= x) y))) ((Data.Bool.==> Data.Bool.F) ((= x) y))) ;)

(; dict ;)

def thm_549 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.imp hol.false (hol.eq Number_2ENatural_2Enatural x_2 y_1))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.APP_THM hol.bool hol.bool (hol.imp (r_4 (s_3 x_2) (s_3 y_1))) (hol.imp hol.false) (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1) (thm_547 A y_1 x_2 s_3 r_4 hyp_1 hyp_2) (thm_548 y_1 x_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_550 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_551 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_550 t_1) (thm_550 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_552 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_553 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_552 thm_552.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_554 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_265 thm_553.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_555 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_556 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_555 t_1) (thm_555 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_557 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_17 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_558 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_559 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_556 t_1) (thm_557 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_558 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_560 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_561 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_560 t_1) (thm_560 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_562 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_563 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_564 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_561 t_1) (thm_562 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_563 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_565 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_566 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_567 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_550 t_1) (thm_565 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_566 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_568 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_569 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_568 t_1) (thm_568 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_570 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_571 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_570 thm_570.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_572 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_265 thm_571.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_573 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_232 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_574 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_20 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_575 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_573 t_1) (thm_574 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_576 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_342 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_568 t_1) (thm_575 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_577 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_578 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_576 t_1) thm_577.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_579 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_578 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_580 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_579 t_1) thm_577.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_581 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_582 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_569 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_572 thm_580 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_581 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_583 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_584 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_583 t_1) (thm_583 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_585 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_21 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_586 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_582 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_584 t_1) (thm_585 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_587 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_567 t_1) (thm_586 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_588 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_564 t_1) (thm_587 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_589 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_559 t_1) (thm_588 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_590 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_589 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_591 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_592 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_554 thm_590 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_591 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_593 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_83 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_594 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_592 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_593 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_595 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_596 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_594 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => thm_595 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((= x) y))) Data.Bool.T) ;)

(; dict ;)

def thm_597 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.eq Number_2ENatural_2Enatural x_2 y_1)) hol.true) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_551 t_1) (thm_596 t_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((r (s x)) (s y))) ((= x) y))) Data.Bool.T) ;)

(; dict ;)

def thm_598 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) hol.true) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.TRANS hol.bool (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.imp hol.false (hol.eq Number_2ENatural_2Enatural x_2 y_1)) hol.true (thm_549 A y_1 x_2 s_3 r_4 hyp_1 hyp_2) (thm_597 y_1 x_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((r (s x)) (s y))) ((= x) y))) ;)

(; dict ;)

def thm_599 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.SYM hol.bool (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) hol.true (thm_598 A y_1 x_2 s_3 r_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((r (s x)) (s y))) ((= x) y)) ;)

(; dict ;)

def thm_600 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) -> hol.proof (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_2) (s_3 y_1)) => hol.EQ_MP hol.true (hol.imp (r_4 (s_3 x_2) (s_3 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (thm_599 A y_1 x_2 s_3 r_4 hyp_1 hyp_2) thm_7.

(; Theorem: |- ((r (s x)) (s y)) ;)

(; dict ;)

def thm_601 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (r_4 (s_3 x_2) (s_3 y_1)) -> hol.proof (r_4 (s_3 x_2) (s_3 y_1)) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (r_4 (s_3 x_2) (s_3 y_1)) => hyp_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_602 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (r_2 (s_1 x_4) (s_1 y_3)) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (r_2 (s_1 x_4) (s_1 y_3)) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => thm_600 A y_3 x_4 s_1 r_2 hyp_1 hyp_3 (thm_601 A y_3 x_4 s_1 r_2 hyp_2).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_603 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) => hol.PROVE_HYP (r_2 (s_1 x_4) (s_1 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_525 A y_3 x_4 s_1 r_2 hyp_2 hyp_4) (hyp_5 : hol.proof (r_2 (s_1 x_4) (s_1 y_3)) => thm_602 A s_1 r_2 y_3 x_4 hyp_1 hyp_5 hyp_3).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_604 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) => hol.PROVE_HYP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_514 x_4 y_3 hyp_4) (hyp_5 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) => thm_603 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< y) x)) ((= x) y)) ;)

(; dict ;)

def thm_605 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_3 : hol.term Number_2ENatural_2Enatural -> y_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_3) (s_1 y_4)) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_4 x_3) (hol.eq Number_2ENatural_2Enatural x_3 y_4)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_3 : hol.term Number_2ENatural_2Enatural => y_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_3) (s_1 y_4)) => hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_4 x_3) => thm_604 A s_1 r_2 y_4 x_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.\/ ((Number.Natural.< y) x)) ((= x) y)) ;)

(; dict ;)

def thm_606 : x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_2 x_1) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) -> hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_2 x_1) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_2 x_1) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_607 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_608 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_609 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_607 Q_1 P_2) (thm_608 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_610 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_611 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_612 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_610 P_1) (thm_611 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_613 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_22 (thm_101 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_614 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_612 P_1) (thm_613 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_615 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_616 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_614 P_2) (thm_615 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_617 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_609 Q_1 P_2) (thm_616 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_618 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_619 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_617 Q_1 P_2) (thm_618 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_620 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_619 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_621 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_622 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_620 Q_3 R_2 P_1 hyp_2 (thm_621 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_623 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_624 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_622 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_623 R_3 Q_1 hyp_2).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_625 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_624 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq Number_2ENatural_2Enatural x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_626 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hol.PROVE_HYP (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1) (thm_606 x_2 y_1 hyp_3) (hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => thm_625 y_1 x_2 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_627 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) -> hyp_5 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => hyp_5 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => hol.PROVE_HYP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_605 A s_1 r_2 x_4 y_3 hyp_1 hyp_2 hyp_3) (hyp_6 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => thm_626 y_3 x_4 hyp_4 hyp_6 hyp_5).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_628 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => hol.PROVE_HYP (hol.imp (hol.eq Number_2ENatural_2Enatural x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_513 y_3 x_4) (hyp_5 : hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => thm_627 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((Number.Natural.< y) x)) ((= x) y))) ((= x) y)) ;)

(; dict ;)

def thm_629 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_3 : hol.term Number_2ENatural_2Enatural -> y_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_3) (s_1 y_4)) -> hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_4 x_3) (hol.eq Number_2ENatural_2Enatural x_3 y_4)) (hol.eq Number_2ENatural_2Enatural x_3 y_4)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_3 : hol.term Number_2ENatural_2Enatural => y_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_3) (s_1 y_4)) => hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_4 x_3) (hol.eq Number_2ENatural_2Enatural x_3 y_4)) => thm_628 A s_1 r_2 y_4 x_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< x) y)) ((r (s y)) (s x))) ;)

(; dict ;)

def thm_630 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (r_2 (s_1 y_3) (s_1 x_4))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => (A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => thm_518 A s_1 r_2 n_3 m_4 hyp_1) A s_1 r_2 y_3 x_4 hyp_1.

(; Theorem: |- ((r (s y)) (s x)) ;)

(; dict ;)

def thm_631 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) -> hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_1 y_2) -> hol.proof (r_4 (s_3 y_2) (s_3 x_1)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_4 (s_3 n_6) (s_3 m_5))))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_1 y_2) => thm_630 A s_3 r_4 y_2 x_1 hyp_1 (thm_370 y_2 x_1 hyp_2).

(; Theorem: |- ((= (r (s y))) (r (s y))) ;)

(; dict ;)

def thm_632 : A : hol.type -> y_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A hol.bool) (r_3 (s_2 y_1)) (r_3 (s_2 y_1))) :=
  A : hol.type => y_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A hol.bool) (r_3 (s_2 y_1)).

(; Theorem: |- ((= ((r (s y)) (s x))) ((r (s y)) (s y))) ;)

(; dict ;)

def thm_633 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 y_2) (s_3 y_2))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.APP_THM A hol.bool (r_4 (s_3 y_2)) (r_4 (s_3 y_2)) (s_3 x_1) (s_3 y_2) (thm_632 A y_2 s_3 r_4) (thm_511 A y_2 x_1 s_3 hyp_1).

(; Theorem: |- ((= ((r (s y)) (s x))) Data.Bool.F) ;)

(; dict ;)

def thm_634 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.eq hol.bool (r_4 (s_3 y_2) (s_3 x_1)) hol.false) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.TRANS hol.bool (r_4 (s_3 y_2) (s_3 x_1)) (r_4 (s_3 y_2) (s_3 y_2)) hol.false (thm_633 A x_1 y_2 s_3 r_4 hyp_2) (thm_545 A y_2 s_3 r_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((r (s y)) (s x)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_635 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (r_4 (s_3 y_2) (s_3 x_1))) (hol.imp hol.false)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (r_4 (s_3 y_2) (s_3 x_1)) hol.false thm_127 (thm_634 A x_1 y_2 s_3 r_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((r (s y)) (s x))) ((= x) y))) ((Data.Bool.==> Data.Bool.F) ((= x) y))) ;)

(; dict ;)

def thm_636 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.eq hol.bool (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) (hol.imp hol.false (hol.eq Number_2ENatural_2Enatural x_1 y_2))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.APP_THM hol.bool hol.bool (hol.imp (r_4 (s_3 y_2) (s_3 x_1))) (hol.imp hol.false) (hol.eq Number_2ENatural_2Enatural x_1 y_2) (hol.eq Number_2ENatural_2Enatural x_1 y_2) (thm_635 A x_1 y_2 s_3 r_4 hyp_1 hyp_2) (thm_548 y_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((r (s y)) (s x))) ((= x) y))) Data.Bool.T) ;)

(; dict ;)

def thm_637 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.eq hol.bool (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) hol.true) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.TRANS hol.bool (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) (hol.imp hol.false (hol.eq Number_2ENatural_2Enatural x_1 y_2)) hol.true (thm_636 A x_1 y_2 s_3 r_4 hyp_1 hyp_2) (thm_597 y_2 x_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((r (s y)) (s x))) ((= x) y))) ;)

(; dict ;)

def thm_638 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.SYM hol.bool (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) hol.true (thm_637 A x_1 y_2 s_3 r_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((r (s y)) (s x))) ((= x) y)) ;)

(; dict ;)

def thm_639 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> y_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) -> hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) -> hol.proof (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => y_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_4 x_5 x_5))) => hyp_2 : hol.proof (hol.eq A (s_3 x_1) (s_3 y_2)) => hol.EQ_MP hol.true (hol.imp (r_4 (s_3 y_2) (s_3 x_1)) (hol.eq Number_2ENatural_2Enatural x_1 y_2)) (thm_638 A x_1 y_2 s_3 r_4 hyp_1 hyp_2) thm_7.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_640 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (r_2 (s_1 y_3) (s_1 x_4)) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (r_2 (s_1 y_3) (s_1 x_4)) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => thm_639 A x_4 y_3 s_1 r_2 hyp_1 hyp_3 (thm_426 A x_4 y_3 s_1 r_2 hyp_2).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_641 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) => hol.PROVE_HYP (r_2 (s_1 y_3) (s_1 x_4)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_631 A x_4 y_3 s_1 r_2 hyp_2 hyp_4) (hyp_5 : hol.proof (r_2 (s_1 y_3) (s_1 x_4)) => thm_640 A s_1 r_2 y_3 x_4 hyp_1 hyp_5 hyp_3).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_642 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) => hol.PROVE_HYP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_370 y_3 x_4 hyp_4) (hyp_5 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) => thm_641 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< x) y)) ((= x) y)) ;)

(; dict ;)

def thm_643 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) => thm_642 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.\/ ((Number.Natural.< x) y)) ((Data.Bool.\/ ((Number.Natural.< y) x)) ((= x) y))) ;)

(; dict ;)

def thm_644 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) -> hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) => hyp_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_645 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_624 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_646 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) -> hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_2 y_1) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_2 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.eq Number_2ENatural_2Enatural x_2 y_1)) => hyp_3 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) => hol.PROVE_HYP (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) (hol.eq Number_2ENatural_2Enatural x_2 y_1) (thm_644 y_1 x_2 hyp_3) (hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) => thm_645 y_1 x_2 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_647 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) -> hyp_5 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3))) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => hyp_5 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3))) => hol.PROVE_HYP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_643 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3) (hyp_6 : hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => thm_646 y_3 x_4 hyp_4 hyp_6 hyp_5).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_648 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3))) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3))) => hol.PROVE_HYP (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_629 A s_1 r_2 x_4 y_3 hyp_1 hyp_2 hyp_3) (hyp_5 : hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) => thm_647 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((Number.Natural.< x) y)) ((Data.Bool.\/ ((Number.Natural.< y) x)) ((= x) y)))) ((= x) y)) ;)

(; dict ;)

def thm_649 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hol.proof (hol.imp (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3))) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hyp_4 : hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_4 y_3) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_3 x_4) (hol.eq Number_2ENatural_2Enatural x_4 y_3))) => thm_648 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.< x) n)) ((Data.Bool.\/ ((Number.Natural.< n) x)) ((= x) n)))) ;)

(; dict ;)

def thm_650 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_1 n_2) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 x_1) (hol.eq Number_2ENatural_2Enatural x_1 n_2)))) :=
  x_1 : hol.term Number_2ENatural_2Enatural => thm_23 x_1.

(; Theorem: |- ((Data.Bool.\/ ((Number.Natural.< x) y)) ((Data.Bool.\/ ((Number.Natural.< y) x)) ((= x) y))) ;)

(; dict ;)

def thm_651 : y_1 : hol.term Number_2ENatural_2Enatural -> x_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) x_2 y_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) y_1 x_2) (hol.eq Number_2ENatural_2Enatural x_2 y_1))) :=
  y_1 : hol.term Number_2ENatural_2Enatural => x_2 : hol.term Number_2ENatural_2Enatural => thm_650 x_2 y_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_652 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => thm_649 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_3 (thm_651 y_3 x_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_653 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => hol.PROVE_HYP (hol.eq A (s_1 x_4) (s_1 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_511 A y_3 x_4 s_1 hyp_3) (hyp_4 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => thm_652 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_654 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_4) (s_1 y_3))) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_4) (s_1 y_3))) => hol.PROVE_HYP (hol.eq A (s_1 x_4) (s_1 y_3)) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_510 A y_3 x_4 s_1 hyp_3) (hyp_4 : hol.proof (hol.eq A (s_1 x_4) (s_1 y_3)) => thm_653 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_655 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) -> hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_4) (s_1 y_3)))) -> hol.proof (hol.eq Number_2ENatural_2Enatural x_4 y_3) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_2 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_4) (s_1 y_3)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_4) (s_1 y_3))) (hol.eq Number_2ENatural_2Enatural x_4 y_3) (thm_507 A x_4 s_1 y_3 hyp_3) (hyp_4 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_4) (s_1 y_3))) => thm_654 A s_1 r_2 y_3 x_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)) ;)

(; dict ;)

def thm_656 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> y_3 : hol.term Number_2ENatural_2Enatural -> x_4 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_1 x_5 x_5))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_1 (s_2 n_6) (s_2 m_5))))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_4) (s_2 y_3)))) (hol.eq Number_2ENatural_2Enatural x_4 y_3)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => y_3 : hol.term Number_2ENatural_2Enatural => x_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.not (r_1 x_5 x_5))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_1 (s_2 n_6) (s_2 m_5))))) => hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_4) (s_2 y_3)))) => thm_655 A s_2 r_1 y_3 x_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))) ;)

(; dict ;)

def thm_657 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.not (r_1 x_4 x_4))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_2 n_5) (s_2 m_4))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.not (r_1 x_4 x_4))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_2 n_5) (s_2 m_4))))) => y_4 : hol.term Number_2ENatural_2Enatural => thm_656 A r_1 s_2 y_4 x_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))) ;)

(; dict ;)

def thm_658 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => x_3 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))) (hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))) (thm_504 A s_2 x_3) (thm_657 A r_1 s_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y))))) ;)

(; dict ;)

def thm_659 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4)))) (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (thm_501 A s_2) (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4)))) (thm_497 A s_2) (thm_658 A r_1 s_2 hyp_1 hyp_2)).

(; Theorem: |- ((= ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F)) ((Data.Bool./\ ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F))) ;)

(; dict ;)

def thm_660 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (hol.and (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F)) ((Data.Bool./\ ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F))) ;)

(; dict ;)

def thm_661 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (hol.and (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.PROVE_HYP (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (hol.eq hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (hol.and (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false))) (thm_659 A r_1 s_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) => thm_660 A s_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F)) (Data.Bool.~ (Set.infinite ((Set.image s) Set.universe)))) ;)

(; dict ;)

def thm_662 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (hol.not (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (t_1 : hol.term hol.bool => thm_585 t_1) (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))).

(; Theorem: |- ((= Data.Bool.~) Data.Bool.~) ;)

(; dict ;)

def thm_663 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not hol.not) :=
  hol.REFL (hol.arr hol.bool hol.bool) hol.not.

(; Theorem: |- ((= ((= (Set.infinite s)) (Data.Bool.~ (Set.finite s)))) ((= (Set.infinite s)) (Data.Bool.~ (Set.finite s)))) ;)

(; dict ;)

def thm_664 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))).

(; Theorem: |- ((= ((= (Set.infinite s)) (Data.Bool.~ (Set.finite s)))) ((= (Set.infinite s)) (Data.Bool.~ (Set.finite s)))) ;)

(; dict ;)

def thm_665 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (thm_664 A s_1) (thm_664 A s_1).

(; Theorem: |- ((= (Set.infinite s)) (Data.Bool.~ (Set.finite s))) ;)

(; dict ;)

def thm_666 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_24 A s_1.

(; Theorem: |- ((= (Set.infinite ((Set.image s) Set.universe))) (Data.Bool.~ (Set.finite ((Set.image s) Set.universe)))) ;)

(; dict ;)

def thm_667 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (hol.eq hol.bool (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) (thm_665 A s_1) (thm_666 A s_1)) A s_1) A (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))).

(; Theorem: |- ((= (Data.Bool.~ (Set.infinite ((Set.image s) Set.universe)))) (Data.Bool.~ (Data.Bool.~ (Set.finite ((Set.image s) Set.universe))))) ;)

(; dict ;)

def thm_668 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) (hol.not (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) thm_663 (thm_667 A s_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_669 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_670 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_669 t_1) (thm_669 t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_671 : hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_672 : hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hol.PROVE_HYP (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) thm_25 (hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => thm_671 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_673 : hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_674 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.PROVE_HYP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_26 (hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => thm_673 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_675 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) thm_674 thm_27.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_676 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.EQ_MP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_672 thm_675.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_677 : hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_678 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hol.PROVE_HYP (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) thm_676 (hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => thm_677 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ t))) t) ;)

(; dict ;)

def thm_679 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) :=
  t_1 : hol.term hol.bool => thm_678 t_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ (Set.finite ((Set.image s) Set.universe))))) (Set.finite ((Set.image s) Set.universe))) ;)

(; dict ;)

def thm_680 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.not (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_670 t_1) (thm_679 t_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))).

(; Theorem: |- ((= (Data.Bool.~ (Set.infinite ((Set.image s) Set.universe)))) (Set.finite ((Set.image s) Set.universe))) ;)

(; dict ;)

def thm_681 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS hol.bool (hol.not (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) (hol.not (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (thm_668 A s_1) (thm_680 A s_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F)) (Set.finite ((Set.image s) Set.universe))) ;)

(; dict ;)

def thm_682 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (hol.not (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (thm_662 A s_1) (thm_681 A s_1).

(; Theorem: |- ((= (Set.finite ((Set.image s) Set.universe))) ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F)) ;)

(; dict ;)

def thm_683 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.SYM hol.bool (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (thm_682 A s_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_684 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_685 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_684 A s_1) (thm_684 A s_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) x)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)))) ;)

(; dict ;)

def thm_686 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) x_2) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_124 A Q_1 P_2) (Set_2Eset A) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)))) ;)

(; dict ;)

def thm_687 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))) ;)

(; dict ;)

def thm_688 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => thm_687 A hyp_1 s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)) ;)

(; dict ;)

def thm_689 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => thm_688 A s_1 hyp_1 t_2.

(; Theorem: |- ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ;)

(; dict ;)

def thm_690 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) => hyp_1.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_691 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) -> hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) => thm_689 A s_2 t_1 hyp_1 (thm_690 A s_2 t_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_692 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) => hyp_2 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => thm_691 A t_1 s_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_693 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) => thm_692 A t_2 s_1 hyp_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_694 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1.

(; Theorem: |- (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t) ;)

(; dict ;)

def thm_695 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) -> hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ;)

(; dict ;)

def thm_696 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) => hol.EQ_MP ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (thm_694 A t_2 s_1) (thm_695 A t_2 s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_697 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => thm_693 A s_2 t_1 (thm_696 A s_2 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_698 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => thm_697 A t_1 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)))) ;)

(; dict ;)

def thm_699 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => thm_698 A t_2 s_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_700 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_686 A s_1 (thm_699 A s_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_701 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_702 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_700 A s_1 (thm_701 A s_1 hyp_1).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_703 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_702 A s_1 hyp_2 (thm_687 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_704 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_703 A s_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_705 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => s_1 : hol.term (Set_2Eset A) => thm_704 A s_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)))) ;)

(; dict ;)

def thm_706 : A : hol.type -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => thm_705 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_707 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => thm_706 A (thm_28 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_708 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_707 A s_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset ((Set.image s) Set.universe)) t)))) (Set.finite ((Set.image s) Set.universe))) ;)

(; dict ;)

def thm_709 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_685 A s_1) (thm_708 A s_1)) A s_1) A (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))).

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset ((Set.image s) Set.universe)) t)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_710 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset ((Set.image s) Set.universe)) t)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_711 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.SYM hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_710 A r_1 s_2).

(; Theorem: |- ((= ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_712 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_713 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_712 A s_1 x_2) (thm_712 A s_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_714 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_29 A s_1.

(; Theorem: |- ((= (Set.finite ((Set.insert x) s))) (Set.finite s)) ;)

(; dict ;)

def thm_715 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => thm_714 A s_1 x_2.

(; Theorem: |- ((= (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_716 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_713 A s_1 x_2) (thm_715 A s_1 x_2)) A s_1 x_2) A (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))).

(; Theorem: |- ((= ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) Data.Bool.T)) ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) Data.Bool.T)) ;)

(; dict ;)

def thm_717 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true).

(; Theorem: |- ((= ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) Data.Bool.T)) ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) Data.Bool.T)) ;)

(; dict ;)

def thm_718 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (thm_717 A x_1 r_2) (thm_717 A x_1 r_2).

(; Theorem: |- ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) Data.Bool.T)) ;)

(; dict ;)

def thm_719 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => (t_1 : hol.term hol.bool => thm_232 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))).

(; Theorem: |- (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))) ;)

(; dict ;)

def thm_720 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => thm_93 A r_2 hyp_1 x_1.

(; Theorem: |- ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x)))))) Data.Bool.T) ;)

(; dict ;)

def thm_721 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (thm_719 A x_1 r_2) (thm_720 A x_1 r_2 hyp_1).

(; Theorem: |- ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_722 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) hol.true) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => (A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => (A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 x_1))))) hol.true) (thm_718 A x_1 r_2) (thm_721 A x_1 r_2 hyp_1)) A x_1 r_2 hyp_1) A (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) r_2 hyp_1.

(; Theorem: |- ((= (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) Data.Bool.T) ;)

(; dict ;)

def thm_723 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) hol.true) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) hol.true (thm_716 A r_1 s_2) (thm_722 A s_2 r_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_724 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.and hol.true)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) hol.true thm_128 (thm_723 A r_1 s_2 hyp_1).

(; Theorem: |- ((= ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_725 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Data.Bool./\ Data.Bool.T) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_726 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.and hol.true (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.and hol.true) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_724 A r_1 s_2 hyp_1) (thm_725 A r_1 s_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_727 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and hol.true (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (t_1 : hol.term hol.bool => thm_271 t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_728 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.and hol.true (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_726 A r_1 s_2 hyp_1) (thm_727 A r_1 s_2).

(; Theorem: |- ((= ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_729 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hol.SYM hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_728 A r_1 s_2 hyp_1).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_730 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_731 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_730 A t_1 s_2) (thm_730 A t_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_732 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_30 A s_1.

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_733 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_732 A s_2 t_1.

(; Theorem: |- ((= ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_734 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_731 A t_1 s_2) (thm_733 A t_1 s_2)) A t_1 s_2) A (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_735 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe)))) (Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe)))) ;)

(; dict ;)

def thm_736 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))).

(; Theorem: |- ((= (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_737 : A : hol.type -> x_1 : hol.term A -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => x_1 : hol.term A => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.BETA_CONV A hol.bool (x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x))) ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_738 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_736 A s_2 x_3) (thm_737 A x_3 r_1 s_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x))) \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_739 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term A => thm_738 A r_1 s_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_740 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_735 A) (thm_739 A r_1 s_2).

(; Theorem: |- ((= (= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x))))) (= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) ;)

(; dict ;)

def thm_741 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) thm_342 (thm_740 A r_1 s_2).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) Set.universe))) (Data.Bool.==> ((Set.member x) Set.universe))) ;)

(; dict ;)

def thm_742 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) :=
  x_1 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))).

(; Theorem: |- ((= (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (s x))) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_743 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_3 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_1) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.BETA_CONV A hol.bool (x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_3 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (s x)))) ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_744 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))) (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_742 x_3) (thm_743 A x_3 r_1 s_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (s x)))) \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_745 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => thm_744 A r_1 s_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (s x))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_746 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) thm_129 (thm_745 A r_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (s x)))))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) ;)

(; dict ;)

def thm_747 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (thm_741 A r_1 s_2) (thm_746 A r_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (p y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (p y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ;)

(; dict ;)

def thm_748 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4)))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) (p x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) (p x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ;)

(; dict ;)

def thm_749 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4)))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (p y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) (p x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ;)

(; dict ;)

def thm_750 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4)))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (thm_748 A B p_1 s_2 f_3) (thm_749 A B p_1 s_2 f_3).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (p y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x))))))) ;)

(; dict ;)

def thm_751 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (p_1 (f_2 x_4))))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => thm_31 A B p_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (p y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x)))))) ;)

(; dict ;)

def thm_752 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (p_1 (f_2 x_4)))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => thm_751 B A p_1 f_2.

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (p y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x))))) ;)

(; dict ;)

def thm_753 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => thm_752 B A p_1 f_3 s_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) (p x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x))))) ;)

(; dict ;)

def thm_754 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (p_1 x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) (thm_750 A B p_1 s_2 f_3) (thm_753 A B p_1 s_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) (p x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (p (f x))))) ;)

(; dict ;)

def thm_755 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> s_2 : hol.term (Set_2Eset Number_2ENatural_2Enatural) -> f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) f_3 s_2)) (p_1 x_4))) (hol.forall Number_2ENatural_2Enatural (x_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_4 s_2) (p_1 (f_3 x_4))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => s_2 : hol.term (Set_2Eset Number_2ENatural_2Enatural) => f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => thm_754 A B p_1 s_2 f_3) Number_2ENatural_2Enatural A p_1 s_2 f_3.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) (\lambda x. ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (s x))))) ;)

(; dict ;)

def thm_756 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => s_2 : hol.term (Set_2Eset Number_2ENatural_2Enatural) => f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => thm_755 A p_1 s_2 f_3) A (x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)) s_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image s) Set.universe))) ((Set.member x) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_757 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) ((x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (s_2 x_3))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) (thm_747 A r_1 s_2) (thm_756 A r_1 s_2).

(; Theorem: |- ((= ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_758 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (thm_734 A r_1 s_2) (thm_757 A r_1 s_2).

(; Theorem: |- ((= ((= ((Set.member x) Set.universe)) Data.Bool.T)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_759 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) Set.universe)) Data.Bool.T)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_760 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_759 A x_1) (thm_759 A x_1).

(; Theorem: |- ((= ((Set.member x) Set.universe)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_761 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_232 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))).

(; Theorem: |- ((Set.member x) Set.universe) ;)

(; dict ;)

def thm_762 : A : hol.type -> x_1 : hol.term A -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) :=
  A : hol.type => x_1 : hol.term A => thm_32 A x_1.

(; Theorem: |- ((= ((Set.member x) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_763 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_761 A x_1) (thm_762 A x_1).

(; Theorem: |- ((= ((Set.member x) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_764 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true) :=
  x_1 : hol.term Number_2ENatural_2Enatural => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_760 A x_1) (thm_763 A x_1)) Number_2ENatural_2Enatural x_1.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) Set.universe))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_765 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.imp hol.true)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) hol.true thm_127 (thm_764 x_1).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_766 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_767 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_766 A s_1 y_2 x_3) (thm_766 A s_1 y_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_768 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_3)) (hol.or (hol.eq A x_1 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3))))) :=
  A : hol.type => x_1 : hol.term A => thm_33 A x_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_769 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 s_3)) (hol.or (hol.eq A x_2 y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_768 A x_2 y_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s))) ;)

(; dict ;)

def thm_770 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => thm_769 A y_2 x_3 s_1.

(; Theorem: |- ((= ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_771 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_3 x_2) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_767 A s_1 y_2 x_3) (thm_770 A s_1 y_2 x_3)) A s_1 y_2 x_3) A (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_3 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Data.Bool.==> Data.Bool.T) ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_772 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.imp hol.true (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.imp hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_765 x_3) (thm_771 A r_1 x_3 s_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_773 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.or (hol.eq A (s_3 x_2) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.or (hol.eq A (s_3 x_2) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (t_1 : hol.term hol.bool => thm_557 t_1) (hol.or (hol.eq A (s_3 x_2) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_774 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> x_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => x_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.imp hol.true (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_772 A r_1 s_2 x_3) (thm_773 A r_1 x_3 s_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_775 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => thm_774 A r_1 s_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (s x)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_776 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) thm_129 (thm_775 A r_1 s_2).

(; Theorem: |- ((= ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_777 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_758 A r_1 s_2) (thm_776 A r_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_778 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.SYM hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_777 A r_1 s_2).

(; Theorem: |- ((= (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Unwanted.id Number.Natural.zero))) ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_779 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)).

(; Theorem: |- ((= (Data.Bool./\ (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Unwanted.id Number.Natural.zero)))) (Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_780 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) thm_128 (thm_779 A r_1 s_2).

(; Theorem: |- ((= (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_781 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1) (hol.or (hol.eq A (s_3 x_1) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_1) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1.

(; Theorem: |- ((= (Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x))) (Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_782 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1)) (hol.imp (hol.or (hol.eq A (s_3 x_1) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_1) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1) (hol.or (hol.eq A (s_3 x_1) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_1) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) thm_127 (thm_781 A x_1 r_2 s_3).

(; Theorem: |- ((= (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_783 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1).

(; Theorem: |- ((= ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x)))) ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_784 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1))) (hol.imp (hol.or (hol.eq A (s_3 x_1) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_1) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_1)) (hol.imp (hol.or (hol.eq A (s_3 x_1) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_1) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_3 x_4) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_2 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_782 A x_1 r_2 s_3) (thm_783 A x_1 r_2 s_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x)))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_785 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => thm_784 A x_3 r_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_786 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) thm_129 (thm_785 A r_1 s_2).

(; Theorem: |- ((= ((Data.Bool./\ (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x)))))) ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) ;)

(; dict ;)

def thm_787 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (thm_780 A r_1 s_2) (thm_786 A r_1 s_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x))))))) (Data.Bool.==> ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))))) ;)

(; dict ;)

def thm_788 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)))))) (hol.imp (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) thm_127 (thm_787 A r_1 s_2).

(; Theorem: |- ((= \lambda x. (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_789 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => thm_781 A x_3 r_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x))) (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_790 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) thm_129 (thm_789 A r_1 s_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x)))))) (Data.Bool.! \lambda x. (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_791 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.imp (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)))))) (hol.imp (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3)) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_788 A r_1 s_2) (thm_790 A r_1 s_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_792 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (p (Number.Natural.suc x)))))) (Data.Bool.! \lambda x. (p x)))) ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (p (Number.Natural.suc x)))))) (Data.Bool.! \lambda x. (p x)))) ;)

(; dict ;)

def thm_793 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (p (Number.Natural.suc x)))))) (Data.Bool.! \lambda x. (p x)))) ;)

(; dict ;)

def thm_794 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2))) (thm_792 p_1) (thm_793 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_795 : hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) -> hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))) ;)

(; dict ;)

def thm_796 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)))) -> hol.proof (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)))) => thm_795 hyp_1 p_1.

(; Theorem: |- ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))))) ;)

(; dict ;)

def thm_797 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) -> hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. (p n)) ;)

(; dict ;)

def thm_798 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)))) -> hyp_2 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)))) => hyp_2 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) => thm_796 p_1 hyp_1 (thm_797 p_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) (Data.Bool.! \lambda n. (p n))) ;)

(; dict ;)

def thm_799 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) -> hol.proof (hol.imp (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) => hyp_2 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3))))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)))) => thm_798 p_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) ;)

(; dict ;)

def thm_800 : hol.proof (hol.imp (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))))) :=
  hyp_1 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) => p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_2 : hol.proof (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) => thm_799 p_1 hyp_2 (thm_795 hyp_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_801 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_802 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) p_1 p_1) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) p_1.

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_803 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))).

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_804 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_803 thm_803.

(; Theorem: |- ((= (= Number.Natural.zero)) (= Number.Natural.zero)) ;)

(; dict ;)

def thm_805 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)).

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) ((= (Unwanted.id n)) n)) ;)

(; dict ;)

def thm_806 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1).

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) ((= (Unwanted.id n)) n)) ;)

(; dict ;)

def thm_807 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (thm_806 n_1) (thm_806 n_1).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_808 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural).

(; Theorem: |- ((= ((= Unwanted.id) \lambda n. n)) ((= Unwanted.id) \lambda n. n)) ;)

(; dict ;)

def thm_809 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1))) :=
  hol.REFL hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)).

(; Theorem: |- ((= ((= Unwanted.id) \lambda n. n)) ((= Unwanted.id) \lambda n. n)) ;)

(; dict ;)

def thm_810 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1))) :=
  hol.TRANS hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) thm_809 thm_809.

(; Theorem: |- ((= (Unwanted.id n)) (\lambda n. n n)) ;)

(; dict ;)

def thm_811 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1 n_1 (hol.EQ_MP (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_2 : hol.term Number_2ENatural_2Enatural => n_2)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_2 : hol.term Number_2ENatural_2Enatural => n_2)) thm_810 thm_34) (thm_165 n_1).

(; Theorem: |- ((= (\lambda n. n n)) n) ;)

(; dict ;)

def thm_812 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1.

(; Theorem: |- ((= \lambda n. (\lambda n. n n)) \lambda n. n) ;)

(; dict ;)

def thm_813 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) :=
  hol.ABS_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => n_1) (n_1 : hol.term Number_2ENatural_2Enatural => thm_812 n_1).

(; Theorem: |- ((= (\lambda n. (\lambda n. n n) n)) (\lambda n. n n)) ;)

(; dict ;)

def thm_814 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1 n_1 thm_813 (thm_165 n_1).

(; Theorem: |- ((= (= (\lambda n. (\lambda n. n n) n))) (= (\lambda n. n n))) ;)

(; dict ;)

def thm_815 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) thm_808 (thm_814 n_1).

(; Theorem: |- ((= ((= (\lambda n. (\lambda n. n n) n)) (\lambda n. n n))) ((= (\lambda n. n n)) n)) ;)

(; dict ;)

def thm_816 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1 (thm_815 n_1) (thm_812 n_1).

(; Theorem: |- ((= (Unwanted.id n)) n) ;)

(; dict ;)

def thm_817 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1 (thm_811 n_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1) (thm_816 n_1) (thm_814 n_1)).

(; Theorem: |- ((= (= (Unwanted.id n))) (= n)) ;)

(; dict ;)

def thm_818 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (hol.eq Number_2ENatural_2Enatural n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1 thm_808 (thm_817 n_1).

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) ((= n) n)) ;)

(; dict ;)

def thm_819 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural n_1 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (hol.eq Number_2ENatural_2Enatural n_1) n_1 n_1 (thm_818 n_1) (thm_165 n_1).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_820 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_821 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_820 A x_1) (thm_820 A x_1).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_822 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_823 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_822 A) (thm_822 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_824 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_735 A) (thm_823 A).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_825 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_232 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_826 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_35 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_827 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_825 A x_1) (thm_826 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_828 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_820 A x_1) (thm_827 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_829 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural x_1 x_1) hol.true) :=
  x_1 : hol.term Number_2ENatural_2Enatural => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_821 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_824 A) (thm_828 A) x_1)) Number_2ENatural_2Enatural x_1.

(; Theorem: |- ((= ((= n) n)) Data.Bool.T) ;)

(; dict ;)

def thm_830 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural n_1 n_1) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term Number_2ENatural_2Enatural => thm_829 x_1) n_1.

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) Data.Bool.T) ;)

(; dict ;)

def thm_831 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural n_1 n_1) hol.true (thm_819 n_1) (thm_830 n_1).

(; Theorem: |- ((= \lambda n. ((= (Unwanted.id n)) n)) \lambda n. Data.Bool.T) ;)

(; dict ;)

def thm_832 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.true)) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.true) (n_1 : hol.term Number_2ENatural_2Enatural => thm_831 n_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n))) (Data.Bool.! \lambda n. Data.Bool.T)) ;)

(; dict ;)

def thm_833 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.true))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.true) thm_129 thm_832.

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n))) Data.Bool.T) ;)

(; dict ;)

def thm_834 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) hol.true) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true thm_833 thm_406.

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n))) ;)

(; dict ;)

def thm_835 : hol.proof (hol.eq hol.bool hol.true (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1))) :=
  hol.SYM hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) hol.true thm_834.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n)) ;)

(; dict ;)

def thm_836 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) :=
  hol.EQ_MP hol.true (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) thm_835 thm_7.

(; Theorem: |- ((= (Unwanted.id Number.Natural.zero)) Number.Natural.zero) ;)

(; dict ;)

def thm_837 : hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) :=
  (n_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (thm_807 n_1) (thm_836 n_1)) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural).

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ((= Number.Natural.zero) Number.Natural.zero)) ;)

(; dict ;)

def thm_838 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) thm_805 thm_837.

(; Theorem: |- ((= ((= Number.Natural.zero) Number.Natural.zero)) Data.Bool.T) ;)

(; dict ;)

def thm_839 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) hol.true) :=
  (x_1 : hol.term Number_2ENatural_2Enatural => thm_829 x_1) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural).

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) Data.Bool.T) ;)

(; dict ;)

def thm_840 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) hol.true) :=
  hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) hol.true thm_838 thm_839.

(; Theorem: |- ((= Data.Bool.T) ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_841 : hol.proof (hol.eq hol.bool hol.true (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.SYM hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) hol.true thm_840.

(; Theorem: |- ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero)) ;)

(; dict ;)

def thm_842 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.EQ_MP hol.true (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_841 thm_7.

(; Theorem: |- ((= (p Number.Natural.zero)) (p (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_843 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM Number_2ENatural_2Enatural hol.bool p_1 p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (thm_802 p_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_804 thm_842).

(; Theorem: |- ((= (Data.Bool./\ (p Number.Natural.zero))) (Data.Bool./\ (p (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_844 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_128 (thm_843 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))))) ;)

(; dict ;)

def thm_845 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))).

(; Theorem: |- ((= ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) ;)

(; dict ;)

def thm_846 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))) (thm_844 p_1) (thm_845 p_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))))))) (Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))))))) ;)

(; dict ;)

def thm_847 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) thm_127 (thm_846 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (p n))) ;)

(; dict ;)

def thm_848 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_849 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_847 p_1) (thm_848 p_1).

(; Theorem: |- ((= \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_850 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.ABS_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_849 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) ;)

(; dict ;)

def thm_851 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))))) :=
  hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) thm_801 thm_850.

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_852 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.EQ_MP (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) thm_851 thm_36.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))) ;)

(; dict ;)

def thm_853 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_800 thm_852 p_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (p (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (p (Number.Natural.suc x)))))) (Data.Bool.! \lambda x. (p x))) ;)

(; dict ;)

def thm_854 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.EQ_MP (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.imp (hol.and (p_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 x_2) (p_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => p_1 x_2))) (thm_794 p_1) (thm_853 p_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x)) (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) (Number.Natural.suc x)))))) (Data.Bool.! \lambda x. (\lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) x))) ;)

(; dict ;)

def thm_855 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.imp (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_854 p_1) (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_856 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.imp (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.EQ_MP (hol.imp (hol.and ((x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3) ((x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => (x_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_4) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.and (hol.eq A v_5 y_6) (r_1 y_6 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) x_3))) (hol.imp (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (thm_791 A r_1 s_2) (thm_855 A r_1 s_2).

(; Theorem: |- ((= Data.Bool.\/) Data.Bool.\/) ;)

(; dict ;)

def thm_857 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or hol.or) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or.

(; Theorem: |- ((= ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) Data.Bool.T) ;)

(; dict ;)

def thm_858 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.eq A (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) hol.true) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => x_1 : hol.term A => thm_827 A x_1) A (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))).

(; Theorem: |- ((= (Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero))))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_859 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq A (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) (hol.or hol.true)) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq A (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) hol.true thm_857 (thm_858 A s_1).

(; Theorem: |- ((= ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_860 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ Data.Bool.T) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_861 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) (hol.or hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (thm_859 A s_2) (thm_860 A r_1 s_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_862 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_863 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_862 t_1) (thm_862 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_864 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_865 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_864 thm_864.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) ;)

(; dict ;)

def thm_866 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_265 thm_865.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_867 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_37 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_868 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_869 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_862 t_1) (thm_867 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => thm_868 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_870 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_871 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_870 t_1) (thm_870 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_872 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_38 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_873 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_874 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_871 t_1) (thm_872 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => thm_873 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_875 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_876 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_875 t_1) (thm_875 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_877 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_39 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_878 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_879 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_876 t_1) (thm_877 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => thm_878 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_880 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_881 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_880 t_1) (thm_880 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.F)) t) ;)

(; dict ;)

def thm_882 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) :=
  t_1 : hol.term hol.bool => thm_40 t_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_883 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_884 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_881 t_1) (thm_882 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => thm_883 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_885 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_886 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_885 t_1) (thm_885 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) t)) t) ;)

(; dict ;)

def thm_887 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_41 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_888 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (thm_884 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_886 t_1) (thm_887 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_889 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_879 t_1) (thm_888 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_890 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (thm_874 t_1) (thm_889 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_891 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (thm_869 t_1) (thm_890 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_892 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_891 t_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_893 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_894 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) thm_866 thm_892 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => thm_893 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) Data.Bool.T) ;)

(; dict ;)

def thm_895 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) hol.true) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_863 t_1) (thm_894 t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) Data.Bool.T) ;)

(; dict ;)

def thm_896 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) hol.true) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS hol.bool (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) hol.true (thm_861 A r_1 s_2) (thm_895 A r_1 s_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_897 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool hol.true (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.SYM hol.bool (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) hol.true (thm_896 A r_1 s_2).

(; Theorem: |- ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_898 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.EQ_MP hol.true (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_897 A r_1 s_2) thm_7.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) ;)

(; dict ;)

def thm_899 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_279 p_1 q_2 hyp_1) (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))))) ;)

(; dict ;)

def thm_900 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.PROVE_HYP (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))))) (thm_898 A r_1 s_2) (hyp_1 : hol.proof (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) => thm_899 A r_1 s_2 hyp_1).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_901 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_902 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_901 A r_1 s_2) (thm_901 A r_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_903 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) thm_129 (thm_902 A r_1 s_2).

(; Theorem: |- ((= (Set.member (s (Number.Natural.suc x)))) (Set.member (s (Number.Natural.suc x)))) ;)

(; dict ;)

def thm_904 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1))).

(; Theorem: |- ((= Set.fromPredicate) Set.fromPredicate) ;)

(; dict ;)

def thm_905 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_906 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= v) y))) (Data.Bool./\ ((= v) y))) ;)

(; dict ;)

def thm_907 : A : hol.type -> y_1 : hol.term A -> v_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A v_2 y_1)) (hol.and (hol.eq A v_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => v_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A v_2 y_1)).

(; Theorem: |- ((= (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_908 : A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => r_3 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_1) (r_3 y_1 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  A : hol.type => y_1 : hol.term A => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => r_3 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y))) ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))) ;)

(; dict ;)

def thm_909 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> y_3 : hol.term A -> v_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A v_4 y_3) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_3)) (hol.and (hol.eq A v_4 y_3) (r_2 y_3 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => y_3 : hol.term A => v_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A v_4 y_3)) (hol.and (hol.eq A v_4 y_3)) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_3) (r_2 y_3 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (thm_907 A y_3 v_4) (thm_908 A y_3 s_1 r_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y))) \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))) ;)

(; dict ;)

def thm_910 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> v_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4)) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => v_3 : hol.term A => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4)) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) (y_4 : hol.term A => thm_909 A s_1 r_2 y_4 v_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))) ;)

(; dict ;)

def thm_911 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> v_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => v_3 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4)) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) (thm_906 A) (thm_910 A s_1 r_2 v_3).

(; Theorem: |- ((= \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y)))) \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))) ;)

(; dict ;)

def thm_912 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A hol.bool) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.ABS_THM A hol.bool (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))) (v_3 : hol.term A => thm_911 A s_1 r_2 v_3).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))) ;)

(; dict ;)

def thm_913 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr A hol.bool) (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) ((y_5 : hol.term A => r_2 y_5 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_4))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_2 y_4 (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))) (thm_905 A) (thm_912 A s_1 r_2).

(; Theorem: |- ((= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y)))))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_914 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))) (thm_904 A x_2 s_3) (thm_913 A s_3 r_1).

(; Theorem: |- ((= (= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y))))))) (= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_915 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5)))))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) thm_342 (thm_914 A r_1 x_2 s_3).

(; Theorem: |- ((= (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) (s (Number.Natural.suc x)))) ((r (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_916 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => r_3 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1))) (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => r_3 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)).

(; Theorem: |- ((= ((= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y)))))) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) (s (Number.Natural.suc x))))) ((= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ((r (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero))))) ;)

(; dict ;)

def thm_917 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5))))) ((y_4 : hol.term A => r_1 y_4 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (r_1 (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5)))))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) ((y_4 : hol.term A => r_1 y_4 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2))) (r_1 (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (thm_915 A r_1 x_2 s_3) (thm_916 A x_2 s_3 r_1).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_918 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_919 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (thm_918 A p_1 x_2) (thm_918 A p_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_920 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_42 A p_1.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x)) ;)

(; dict ;)

def thm_921 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_920 A p_1 x_2.

(; Theorem: |- ((= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) y)))))) (\lambda y. ((r y) (s (Unwanted.id Number.Natural.zero))) (s (Number.Natural.suc x)))) ;)

(; dict ;)

def thm_922 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5))))) ((y_4 : hol.term A => r_1 y_4 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (thm_919 A p_1 x_2) (thm_921 A p_1 x_2)) A p_1 x_2) A (y_4 : hol.term A => r_1 y_4 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)).

(; Theorem: |- ((= ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ((r (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_923 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (r_1 (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) ((y_6 : hol.term A => r_1 y_6 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) y_5))))) ((y_4 : hol.term A => r_1 y_4 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (r_1 (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) (thm_917 A r_1 x_2 s_3) (thm_922 A r_1 x_2 s_3).

(; Theorem: |- ((= ((r (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_924 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_3 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_3 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (thm_923 A r_3 x_1 s_2).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc x))) ((r (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_925 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_2 (s_1 n_5) (s_1 m_4))))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_2 (s_1 n_5) (s_1 m_4))))) => (A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => n_3 : hol.term Number_2ENatural_2Enatural => m_4 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (r_2 (s_1 n_6) (s_1 m_5))))) => thm_518 A s_1 r_2 n_3 m_4 hyp_1) A s_1 r_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) hyp_1.

(; Theorem: |- ((= ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc n))) ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_926 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)).

(; Theorem: |- ((= ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc n))) ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc n))) ;)

(; dict ;)

def thm_927 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (thm_926 n_1) (thm_926 n_1).

(; Theorem: |- ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc n)) ;)

(; dict ;)

def thm_928 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => thm_43 n_1.

(; Theorem: |- ((Number.Natural.< (Unwanted.id Number.Natural.zero)) (Number.Natural.suc x)) ;)

(; dict ;)

def thm_929 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) :=
  x_1 : hol.term Number_2ENatural_2Enatural => (n_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (thm_927 n_1) (thm_928 n_1)) x_1.

(; Theorem: |- ((r (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_930 : A : hol.type -> x_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_3 (s_2 n_5) (s_2 m_4))))) -> hol.proof (r_3 (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_1)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  A : hol.type => x_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_3 (s_2 n_5) (s_2 m_4))))) => thm_925 A s_2 r_3 x_1 hyp_1 (thm_929 x_1).

(; Theorem: |- ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))) ;)

(; dict ;)

def thm_931 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_3 n_5) (s_3 m_4))))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_3 n_5) (s_3 m_4))))) => hol.EQ_MP (r_1 (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (thm_924 A x_2 s_3 r_1) (thm_930 A x_2 s_3 r_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ((Data.Bool.\/ P) Q)) ;)

(; dict ;)

def thm_932 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (hol.or P_2 Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.SYM hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_617 Q_1 P_2).

(; Theorem: |- ((Data.Bool.==> Q) t) ;)

(; dict ;)

def thm_933 : t_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 t_1) -> hol.proof (hol.imp Q_2 t_1) :=
  t_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 t_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_934 : Q_1 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof Q_1 :=
  Q_1 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hyp_1.

(; Theorem: |- t ;)

(; dict ;)

def thm_935 : Q_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hyp_2 : hol.proof (hol.imp Q_1 t_2) -> hol.proof t_2 :=
  Q_1 : hol.term hol.bool => t_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hyp_2 : hol.proof (hol.imp Q_1 t_2) => thm_933 t_2 Q_1 hyp_2 (thm_934 Q_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) t)) t) ;)

(; dict ;)

def thm_936 : t_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_2 -> hol.proof (hol.imp (hol.imp Q_2 t_1) t_1) :=
  t_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof Q_2 => hyp_2 : hol.proof (hol.imp Q_2 t_1) => thm_935 Q_2 t_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) t)) ((Data.Bool.==> ((Data.Bool.==> Q) t)) t)) ;)

(; dict ;)

def thm_937 : Q_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof (hol.imp (hol.imp P_3 t_2) (hol.imp (hol.imp Q_1 t_2) t_2)) :=
  Q_1 : hol.term hol.bool => t_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hyp_2 : hol.proof (hol.imp P_3 t_2) => thm_936 t_2 Q_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool.==> P) t)) ((Data.Bool.==> ((Data.Bool.==> Q) t)) t))) ;)

(; dict ;)

def thm_938 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof (hol.forall hol.bool (t_3 : hol.term hol.bool => hol.imp (hol.imp P_2 t_3) (hol.imp (hol.imp Q_1 t_3) t_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => t_3 : hol.term hol.bool => thm_937 Q_1 t_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_939 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hol.EQ_MP (hol.forall hol.bool (t_3 : hol.term hol.bool => hol.imp (hol.imp P_2 t_3) (hol.imp (hol.imp Q_1 t_3) t_3))) (hol.or P_2 Q_1) (thm_932 Q_1 P_2) (thm_938 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_940 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) -> hol.proof (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => thm_939 Q_1 P_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_941 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_3 n_5) (s_3 m_4))))) -> hol.proof (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_3 n_5) (s_3 m_4))))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_931 A r_1 x_2 s_3 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) => thm_940 A r_1 x_2 s_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_942 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> x_2 : hol.term Number_2ENatural_2Enatural -> s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_3 n_5) (s_3 m_4))))) -> hol.proof (hol.imp (hol.or (hol.eq A (s_3 x_2) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_2)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => x_2 : hol.term Number_2ENatural_2Enatural => s_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (r_1 (s_3 n_5) (s_3 m_4))))) => hyp_2 : hol.proof (hol.or (hol.eq A (s_3 x_2) (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_3 x_2) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) => thm_941 A r_1 x_2 s_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))))) ;)

(; dict ;)

def thm_943 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => x_3 : hol.term Number_2ENatural_2Enatural => thm_942 A r_1 x_3 s_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.\/ ((= (s (Unwanted.id Number.Natural.zero))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Data.Bool.\/ ((= (s (Number.Natural.suc x))) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s (Number.Natural.suc x))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))))) ;)

(; dict ;)

def thm_944 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.and (hol.or (hol.eq A (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))))) (thm_900 A r_1 s_2) (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.or (hol.eq A (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) x_3)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))))) (thm_903 A r_1 s_2) (thm_943 A r_1 s_2 hyp_1)).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= (s x)) (s (Unwanted.id Number.Natural.zero)))) ((Set.member (s x)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_945 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => thm_856 A r_1 s_2 (thm_944 A r_1 s_2 hyp_1).

(; Theorem: |- ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_946 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.eq A (s_2 x_3) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (s_2 x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_778 A r_1 s_2) (thm_945 A r_1 s_2 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Set.finite ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ((Set.subset ((Set.image s) Set.universe)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero))))))))) ;)

(; dict ;)

def thm_947 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) (thm_729 A r_1 s_2 hyp_1) (thm_946 A r_1 s_2 hyp_2).

(; Theorem: |- (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset ((Set.image s) Set.universe)) t)) ((Set.insert (s (Unwanted.id Number.Natural.zero))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) (s (Unwanted.id Number.Natural.zero)))))))) ;)

(; dict ;)

def thm_948 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))))) ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (thm_711 A r_1 s_2) (thm_947 A r_1 s_2 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset ((Set.image s) Set.universe)) t))) ;)

(; dict ;)

def thm_949 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_476 A x_1 P_2 hyp_1) (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))))))) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset ((Set.image s) Set.universe)) t))) ;)

(; dict ;)

def thm_950 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.PROVE_HYP ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3))) (thm_948 A r_1 s_2 hyp_1 hyp_2) (hyp_3 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) t_3)) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 (s_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))))))) => thm_949 A r_1 s_2 hyp_3).

(; Theorem: |- (Set.finite ((Set.image s) Set.universe)) ;)

(; dict ;)

def thm_951 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => thm_709 A s_2 (thm_950 A r_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F) ;)

(; dict ;)

def thm_952 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (thm_683 A s_2) (thm_951 A r_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) ((Data.Bool.==> (Set.infinite ((Set.image s) Set.universe))) Data.Bool.F)) ;)

(; dict ;)

def thm_953 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.and (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => hol.EQ_MP (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false) (hol.and (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (hol.imp (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)))) hol.false)) (thm_661 A r_1 s_2 hyp_1 hyp_3) (thm_952 A r_1 s_2 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) (Set.infinite ((Set.image s) Set.universe)))) Data.Bool.F) ;)

(; dict ;)

def thm_954 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) -> hol.proof (hol.imp (hol.imp (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_2 x_3) (s_2 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) hol.false) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_1 x_3 x_3))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_1 y_5 x_3)))))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_1 (s_2 n_4) (s_2 m_3))))) => thm_491 A s_2 (thm_953 A r_1 s_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.infinite s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))) (Set.infinite ((Set.image f) s))))) ;)

(; dict ;)

def thm_955 : A : hol.type -> hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural A) (f_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall (Set_2Eset Number_2ENatural_2Enatural) (s_2 : hol.term (Set_2Eset Number_2ENatural_2Enatural) => hol.imp (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) s_2) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 s_2) (hol.eq A (f_1 x_3) (f_1 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) f_1 s_2))))) :=
  A : hol.type => (B : hol.type => A : hol.type => thm_44 B A) A Number_2ENatural_2Enatural.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.infinite s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (s x)) (s y))))) ((= x) y)))))) (Set.infinite ((Set.image s) s)))) ;)

(; dict ;)

def thm_956 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.forall (Set_2Eset Number_2ENatural_2Enatural) (s_2 : hol.term (Set_2Eset Number_2ENatural_2Enatural) => hol.imp (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) s_2) (hol.forall Number_2ENatural_2Enatural (x_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_4 s_2) (hol.eq A (s_1 x_3) (s_1 y_4)))) (hol.eq Number_2ENatural_2Enatural x_3 y_4))))) (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 s_2)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => thm_955 A s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.infinite Set.universe)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (s x)) (s y))))) ((= x) y)))))) (Set.infinite ((Set.image s) Set.universe))) ;)

(; dict ;)

def thm_957 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.imp (hol.and (Set_2Einfinite (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool) (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (x_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (y_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.and (Set_2Emember (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset Number_2ENatural_2Enatural) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))) (hol.eq A (s_1 x_2) (s_1 y_3)))) (hol.eq Number_2ENatural_2Enatural x_2 y_3))))) (Set_2Einfinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr Number_2ENatural_2Enatural A) (hol.arr (Set_2Eset Number_2ENatural_2Enatural) (Set_2Eset A))) s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural))))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => thm_956 A s_1 (Set_2Euniverse (Set_2Eset Number_2ENatural_2Enatural)).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_958 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) -> hol.proof hol.false :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => thm_954 A r_2 s_1 hyp_1 hyp_2 hyp_3 (thm_957 A s_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_959 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) -> hol.proof hol.false :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) hol.false (thm_490 A s_1 r_2 hyp_3) (hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => thm_958 A s_1 r_2 hyp_1 hyp_2 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_960 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof hol.false :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) hol.false (thm_489 A s_1 r_2 hyp_1 hyp_4) (hyp_5 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (r_2 (s_1 n_4) (s_1 m_3))))) => thm_959 A s_1 r_2 hyp_2 hyp_3 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_961 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) -> hol.proof hol.false :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) hol.false (thm_126 A s_1 r_2 hyp_4) (hyp_5 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => thm_960 A s_1 r_2 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))) Data.Bool.F) ;)

(; dict ;)

def thm_962 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) hol.false) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) => thm_961 A s_1 r_2 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((= (\lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))) s)) (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n)))) ;)

(; dict ;)

def thm_963 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3)))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV (hol.arr Number_2ENatural_2Enatural A) hol.bool (f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1.

(; Theorem: |- (\lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))) s) ;)

(; dict ;)

def thm_964 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) -> hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((r (s (Number.Natural.suc n))) (s n))) ;)

(; dict ;)

def thm_965 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) => hol.EQ_MP ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_2 (s_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (s_1 n_3))) (thm_963 A s_1 r_2) (thm_964 A s_1 r_2 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_966 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hyp_4 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) -> hol.proof hol.false :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_4 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) => thm_962 A s_1 r_2 hyp_1 hyp_2 hyp_3 (thm_965 A s_1 r_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))) s)) Data.Bool.F) ;)

(; dict ;)

def thm_967 : A : hol.type -> s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) -> hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) -> hol.proof (hol.imp ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) hol.false) :=
  A : hol.type => s_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (r_2 x_3 y_4) (r_2 y_4 z_5)) (r_2 x_3 z_5))))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.not (r_2 x_3 x_3))) => hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A v_4 y_5) (r_2 y_5 x_3)))))) => hyp_4 : hol.proof ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_2 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_1) => thm_966 A s_1 r_2 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (\lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_968 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural A) (s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.imp ((f_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => r_1 (f_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_3 n_4))) s_2) hol.false)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => s_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => thm_967 A s_2 r_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))) Data.Bool.F) ;)

(; dict ;)

def thm_969 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) hol.false) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => thm_125 A r_1 (thm_968 A r_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n)))) ;)

(; dict ;)

def thm_970 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_971 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) -> hol.proof hol.false :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) => thm_969 A r_1 hyp_1 hyp_2 hyp_3 (thm_970 A r_1 hyp_4).

(; Theorem: |- (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))) ;)

(; dict ;)

def thm_972 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) hol.false) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))) (thm_105 A r_1) (hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3)))) => thm_971 A r_1 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_973 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => hol.EQ_MP (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => r_1 (f_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_2 n_3))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_97 A r_1) (thm_972 A r_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_974 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => hol.PROVE_HYP (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_93 A r_1 hyp_3) (hyp_4 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => thm_973 A r_1 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_975 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => hol.PROVE_HYP (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_92 A r_1 hyp_1) (hyp_4 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => thm_974 A r_1 hyp_4 hyp_2 hyp_3).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_976 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) -> hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => hol.PROVE_HYP (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_91 A r_1 hyp_3) (hyp_4 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))) => thm_975 A r_1 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_977 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => hol.PROVE_HYP (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_89 A r_1 hyp_2) (hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) => thm_976 A r_1 hyp_3 hyp_1 hyp_2).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_978 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => hol.PROVE_HYP (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_86 A r_1 hyp_1) (hyp_3 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => thm_977 A r_1 hyp_3 hyp_2).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_979 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_85 A r_1 hyp_2) (hyp_3 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2))))))) => thm_978 A r_1 hyp_1 hyp_3).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_980 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => hol.PROVE_HYP (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (thm_78 A r_1 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) => thm_979 A r_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_981 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) => thm_980 A r_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_982 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_981 A r_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) ;)

(; thm ;)

def thm_983 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => hol.EQ_MP (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (r_1 y_4 x_2)))))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) (thm_52 A) (thm_982 A).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_984 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_985 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (thm_984 A r_1) (thm_984 A r_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) x)) ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r))))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r)))) ;)

(; dict ;)

def thm_986 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (x_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) x_2) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_124 A Q_1 P_2) (hol.arr A (hol.arr A hol.bool)) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r)))) ;)

(; dict ;)

def thm_987 : A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_988 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) => thm_987 A hyp_1 r_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_989 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) -> hol.proof (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) => thm_988 A r_2 hyp_1 s_1.

(; Theorem: |- ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) ;)

(; dict ;)

def thm_990 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) -> hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) => hyp_1.

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_991 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) -> hyp_2 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) => hyp_2 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) => thm_989 A s_1 r_2 hyp_1 (thm_990 A s_1 r_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_992 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) => hyp_2 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) => thm_991 A s_1 r_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_993 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) => thm_992 A s_1 r_2 hyp_1.

(; Theorem: |- ((= (\lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) ;)

(; dict ;)

def thm_994 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr A hol.bool)) hol.bool (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1.

(; Theorem: |- (\lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) s) ;)

(; dict ;)

def thm_995 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) -> hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) ;)

(; dict ;)

def thm_996 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) -> hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) => hol.EQ_MP ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_1)) (thm_994 A s_1 r_2) (thm_995 A s_1 r_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_997 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) => thm_993 A s_1 r_2 (thm_996 A s_1 r_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) s)) ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_998 : A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) :=
  A : hol.type => s_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_1) => thm_997 A s_1 r_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (\lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)) s)) ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r)))) ;)

(; dict ;)

def thm_999 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp ((s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) s_2) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_3 s_4) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_4)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_3)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_998 A s_2 r_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_1000 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_986 A r_1 (thm_999 A r_1).

(; Theorem: |- (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) ;)

(; dict ;)

def thm_1001 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_1002 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) => thm_1000 A r_1 (thm_1001 A r_1 hyp_1).

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_1003 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) => thm_1002 A r_1 hyp_2 (thm_987 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_1004 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_2 s_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_3)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) => thm_1003 A r_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_1005 : A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_1004 A r_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r))))) (Data.Bool.! \lambda r. ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r)))) ;)

(; dict ;)

def thm_1006 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall (hol.arr A (hol.arr A hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) => thm_1005 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r))) ;)

(; dict ;)

def thm_1007 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => thm_1006 A (thm_45 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_1008 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_1007 A r_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s)))) (Relation.wellFounded r)) ;)

(; dict ;)

def thm_1009 : r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) r_1)) :=
  r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) r_1 s_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) s_2))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (thm_985 A r_1) (thm_1008 A r_1)) Number_2ENatural_2Enatural r_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) s)) (Relation.wellFounded s)))) (Relation.wellFounded Number.Natural.isSuc)) ;)

(; dict ;)

def thm_1010 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) :=
  (r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_1009 r_1) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= (\lambda s. ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) s)) (Relation.wellFounded s)) Number.Natural.<)) ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) (Relation.wellFounded Number.Natural.<))) ;)

(; dict ;)

def thm_1011 : hol.proof (hol.eq hol.bool ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))))) :=
  hol.BETA_CONV (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) (Relation.wellFounded Number.Natural.<))) (\lambda s. ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) s)) (Relation.wellFounded s)) Number.Natural.<)) ;)

(; dict ;)

def thm_1012 : hol.proof (hol.eq hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) :=
  hol.SYM hol.bool ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) thm_1011.

(; Theorem: |- ((= ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) Data.Bool.T)) ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) Data.Bool.T)) ;)

(; dict ;)

def thm_1013 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true).

(; Theorem: |- ((= ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) Data.Bool.T)) ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) Data.Bool.T)) ;)

(; dict ;)

def thm_1014 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) thm_1013 thm_1013.

(; Theorem: |- ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) Data.Bool.T)) ;)

(; dict ;)

def thm_1015 : hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true)) :=
  (t_1 : hol.term hol.bool => thm_232 t_1) (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))).

(; Theorem: |- ((= ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) Data.Bool.T) ;)

(; dict ;)

def thm_1016 : hol.proof (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) :=
  hol.EQ_MP (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) thm_1015 thm_46.

(; Theorem: |- ((= (Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1017 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) (hol.and hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true thm_128 (hol.EQ_MP (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) thm_1014 thm_1016).

(; Theorem: |- ((= ((= (Relation.wellFounded Number.Natural.<)) Data.Bool.T)) ((= (Relation.wellFounded Number.Natural.<)) Data.Bool.T)) ;)

(; dict ;)

def thm_1018 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true).

(; Theorem: |- ((= ((= (Relation.wellFounded Number.Natural.<)) Data.Bool.T)) ((= (Relation.wellFounded Number.Natural.<)) Data.Bool.T)) ;)

(; dict ;)

def thm_1019 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) thm_1018 thm_1018.

(; Theorem: |- ((= (Relation.wellFounded Number.Natural.<)) ((= (Relation.wellFounded Number.Natural.<)) Data.Bool.T)) ;)

(; dict ;)

def thm_1020 : hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true)) :=
  (t_1 : hol.term hol.bool => thm_232 t_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))).

(; Theorem: |- ((= (Relation.wellFounded Number.Natural.<)) Data.Bool.T) ;)

(; dict ;)

def thm_1021 : hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) :=
  hol.EQ_MP (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) thm_1020 thm_47.

(; Theorem: |- ((= ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) (Relation.wellFounded Number.Natural.<))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_1022 : hol.proof (hol.eq hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) (hol.and hol.true hol.true)) :=
  hol.APP_THM hol.bool hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) (hol.and hol.true) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true thm_1017 (hol.EQ_MP (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) hol.true) thm_1019 thm_1021).

(; Theorem: |- ((= ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) (Relation.wellFounded Number.Natural.<))) Data.Bool.T) ;)

(; dict ;)

def thm_1023 : hol.proof (hol.eq hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) hol.true) :=
  hol.TRANS hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) (hol.and hol.true hol.true) hol.true thm_1022 thm_465.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) (Relation.wellFounded Number.Natural.<))) ;)

(; dict ;)

def thm_1024 : hol.proof (hol.eq hol.bool hol.true (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))))) :=
  hol.SYM hol.bool (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) hol.true thm_1023.

(; Theorem: |- ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<)) (Relation.wellFounded Number.Natural.<)) ;)

(; dict ;)

def thm_1025 : hol.proof (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) :=
  hol.EQ_MP hol.true (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) thm_1024 thm_7.

(; Theorem: |- (\lambda s. ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) s)) (Relation.wellFounded s)) Number.Natural.<) ;)

(; dict ;)

def thm_1026 : hol.proof ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) :=
  hol.EQ_MP (hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) thm_1012 thm_1025.

(; Theorem: |- (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) s)) (Relation.wellFounded s))) ;)

(; dict ;)

def thm_1027 : hyp_1 : hol.proof ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1))) :=
  hyp_1 : hol.proof ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_476 A x_1 P_2 hyp_1) (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda s. ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) s)) (Relation.wellFounded s))) ;)

(; dict ;)

def thm_1028 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1))) :=
  hol.PROVE_HYP ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) hol.bool) (s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1))) thm_1026 (hyp_1 : hol.proof ((s_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => hol.and (Relation_2Esubrelation (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool)) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) s_1) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) s_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) => thm_1027 hyp_1).

(; Theorem: |- (Relation.wellFounded Number.Natural.isSuc) ;)

(; dict ;)

def thm_1029 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) :=
  thm_1010 thm_1028.

(; Theorem: |- ((= ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r))) ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r))) ;)

(; dict ;)

def thm_1030 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r))) ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r))) ;)

(; dict ;)

def thm_1031 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (thm_1030 A r_1) (thm_1030 A r_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r))) ;)

(; dict ;)

def thm_1032 : A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r)) ;)

(; dict ;)

def thm_1033 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) => thm_1032 A hyp_1 r_1.

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_1034 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) => hyp_1.

(; Theorem: |- (Relation.irreflexive r) ;)

(; dict ;)

def thm_1035 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) -> hyp_2 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) -> hol.proof (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) => hyp_2 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) => thm_1033 A r_1 hyp_1 (thm_1034 A r_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r)))) (Relation.irreflexive r)) ;)

(; dict ;)

def thm_1036 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) => hyp_2 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_2))) => thm_1035 A r_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r)))) (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r)))) ;)

(; dict ;)

def thm_1037 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1))) => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hyp_2 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) => thm_1036 A r_1 hyp_2 (thm_1032 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r)) ;)

(; dict ;)

def thm_1038 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_1037 A (thm_48 A) r_1.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r)) ;)

(; dict ;)

def thm_1039 : r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) r_1)) :=
  r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.EQ_MP (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1) (Relation_2Eirreflexive (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) r_1)) (thm_1031 A r_1) (thm_1038 A r_1)) Number_2ENatural_2Enatural r_1.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded Number.Natural.isSuc)) (Relation.irreflexive Number.Natural.isSuc)) ;)

(; dict ;)

def thm_1040 : hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2Eirreflexive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) :=
  (r_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_1039 r_1) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- (Relation.irreflexive Number.Natural.isSuc) ;)

(; dict ;)

def thm_1041 : hol.proof (Relation_2Eirreflexive (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2EisSuc (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) :=
  thm_1040 thm_1029.
