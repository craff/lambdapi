
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dfinite_2Dthm_2Da5.

Set_2Eset : hol.type -> hol.type.

Set_2Efinite : A : hol.type -> hol.term A.

Set_2Euniverse : A : hol.type -> hol.term A.

Set_2Einsert : A : hol.type -> hol.term A.

Set_2E_7B_7D : A : hol.type -> hol.term A.

Set_2EfromPredicate : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Set_2Esubset : A : hol.type -> hol.term A.

Set_2Eimage : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

Set_2EbigUnion : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : hol.proof (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))).

(; axiom ;)

thm_2 : hol.proof hol.true.

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))))).

(; axiom ;)

thm_5 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))).

(; axiom ;)

thm_6 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_8 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_10 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_13 : hol.proof (hol.eq hol.bool hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1))).

(; axiom ;)

thm_14 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not (p_1 : hol.term hol.bool => hol.imp p_1 hol.false)).

(; axiom ;)

thm_15 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_16 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_17 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not t1_1) (hol.not t2_2)) (hol.imp t2_2 t1_1)))).

(; axiom ;)

thm_20 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))).

(; axiom ;)

thm_23 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))))).

(; axiom ;)

thm_25 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_26 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_27 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_28 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_29 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))).

(; axiom ;)

thm_31 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or t_1 (hol.not t_1))).

(; axiom ;)

thm_32 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; Theorem: |- ((= Set.finite) Set.finite) ;)

(; dict ;)

def thm_33 : hol.proof (hol.eq (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool))) :=
  hol.REFL (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool)).

(; Theorem: |- ((= ((= Set.universe) ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) ((= Set.universe) ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) ;)

(; dict ;)

def thm_34 : hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))))) :=
  hol.REFL hol.bool (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))).

(; Theorem: |- ((= ((= Set.universe) ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) ((= Set.universe) ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) ;)

(; dict ;)

def thm_35 : hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))))) :=
  hol.TRANS hol.bool (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) thm_34 thm_34.

(; Theorem: |- ((= (Set.finite Set.universe)) (Set.finite ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) ;)

(; dict ;)

def thm_36 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))))) :=
  hol.APP_THM (Set_2Eset hol.bool) hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool)) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))) thm_33 (hol.EQ_MP (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (hol.eq (Set_2Eset hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) thm_35 thm_0).

(; Theorem: |- ((= ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_37 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_38 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_37 A s_1 x_2) (thm_37 A s_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Set.finite ((Set.insert x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_39 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_1 A s_1.

(; Theorem: |- ((= (Set.finite ((Set.insert x) s))) (Set.finite s)) ;)

(; dict ;)

def thm_40 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => thm_39 A s_1 x_2.

(; Theorem: |- ((= (Set.finite ((Set.insert x) s))) (Set.finite s)) ;)

(; dict ;)

def thm_41 : s_1 : hol.term (Set_2Eset hol.bool) -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) s_1)) :=
  s_1 : hol.term (Set_2Eset hol.bool) => x_2 : hol.term hol.bool => (A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_38 A s_1 x_2) (thm_40 A s_1 x_2)) hol.bool s_1 x_2.

(; Theorem: |- ((= (Set.finite ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) (Set.finite ((Set.insert Data.Bool.F) Set.{}))) ;)

(; dict ;)

def thm_42 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) :=
  (s_1 : hol.term (Set_2Eset hol.bool) => x_2 : hol.term hol.bool => thm_41 s_1 x_2) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))) hol.true.

(; Theorem: |- ((= (Set.finite ((Set.insert Data.Bool.F) Set.{}))) (Set.finite Set.{})) ;)

(; dict ;)

def thm_43 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2E_7B_7D (Set_2Eset hol.bool)))) :=
  (s_1 : hol.term (Set_2Eset hol.bool) => x_2 : hol.term hol.bool => thm_41 s_1 x_2) (Set_2E_7B_7D (Set_2Eset hol.bool)) hol.false.

(; Theorem: |- ((= ((= (Set.finite Set.{})) Data.Bool.T)) ((= (Set.finite Set.{})) Data.Bool.T)) ;)

(; dict ;)

def thm_44 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true)) :=
  A : hol.type => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true).

(; Theorem: |- ((= ((= (Set.finite Set.{})) Data.Bool.T)) ((= (Set.finite Set.{})) Data.Bool.T)) ;)

(; dict ;)

def thm_45 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true)) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (thm_44 A) (thm_44 A).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_46 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_47 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_46 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_48 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_47 t_1 hyp_1) thm_2.

(; Theorem: |- t ;)

(; dict ;)

def thm_49 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_50 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_49 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_2).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_51 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_48 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_50 t_1 hyp_1).

(; Theorem: |- ((= (Set.finite Set.{})) ((= (Set.finite Set.{})) Data.Bool.T)) ;)

(; dict ;)

def thm_52 : A : hol.type -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true)) :=
  A : hol.type => (t_1 : hol.term hol.bool => thm_51 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= (Set.finite Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_53 : A : hol.type -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) :=
  A : hol.type => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (thm_52 A) (thm_3 A).

(; Theorem: |- ((= (Set.finite Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_54 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2E_7B_7D (Set_2Eset hol.bool))) hol.true) :=
  (A : hol.type => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (thm_45 A) (thm_53 A)) hol.bool.

(; Theorem: |- ((= (Set.finite ((Set.insert Data.Bool.F) Set.{}))) Data.Bool.T) ;)

(; dict ;)

def thm_55 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))) hol.true) :=
  hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2E_7B_7D (Set_2Eset hol.bool))) hol.true thm_43 thm_54.

(; Theorem: |- ((= (Set.finite ((Set.insert Data.Bool.T) ((Set.insert Data.Bool.F) Set.{})))) Data.Bool.T) ;)

(; dict ;)

def thm_56 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) hol.true) :=
  hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool)))) hol.true thm_42 thm_55.

(; Theorem: |- ((= (Set.finite Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_57 : hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) hol.true) :=
  hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.true (Set_2Einsert (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) (Set_2Eset hol.bool))) hol.false (Set_2E_7B_7D (Set_2Eset hol.bool))))) hol.true thm_36 thm_56.

(; Theorem: |- ((= Data.Bool.T) (Set.finite Set.universe)) ;)

(; dict ;)

def thm_58 : hol.proof (hol.eq hol.bool hol.true (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) :=
  hol.SYM hol.bool (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) hol.true thm_57.

(; Theorem: |- (Set.finite Set.universe) ;)

(; dict ;)

def thm_59 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) :=
  hol.EQ_MP hol.true (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) thm_58 thm_2.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_60 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) ;)

(; dict ;)

def thm_61 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) ;)

(; dict ;)

def thm_62 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) :=
  A : hol.type => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (thm_61 A) (thm_61 A).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))))) ;)

(; dict ;)

def thm_63 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) (thm_60 A) (thm_62 A).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_64 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_1.

(; Theorem: |- ((= Set.finite) Set.finite) ;)

(; dict ;)

def thm_65 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) ;)

(; dict ;)

def thm_66 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) ;)

(; dict ;)

def thm_67 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (thm_66 A s_1) (thm_66 A s_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F))))))))) ;)

(; dict ;)

def thm_68 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_4 A s_1.

(; Theorem: |- ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))) (Set.finite ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) ;)

(; dict ;)

def thm_69 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.APP_THM (Set_2Eset (Set_2Eset A)) hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))) (thm_65 A) ((A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (thm_67 A s_1) (thm_68 A s_1)) A s_1).

(; Theorem: |- ((= (Set.finite ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))) ;)

(; dict ;)

def thm_70 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.SYM hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (thm_69 A s_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_71 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_72 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (thm_71 B A f_1 s_2) (thm_71 B A f_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))))) ;)

(; dict ;)

def thm_73 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_74 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))) => thm_73 B A hyp_1 f_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_75 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) => thm_74 B A f_1 hyp_1 s_2.

(; Theorem: |- (Set.finite ((Set.image f) s)) ;)

(; dict ;)

def thm_76 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_75 B A f_2 s_1 hyp_1 (thm_64 A s_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))))) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_77 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.imp (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_2 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) => thm_76 A B s_1 f_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))))) ;)

(; dict ;)

def thm_78 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_77 B A s_2 f_1 hyp_2 (thm_73 B A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_79 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_78 B A (thm_5 B A) f_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_80 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_79 B A f_1 s_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_81 : A : hol.type -> f_1 : hol.term (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) -> s_2 : hol.term (Set_2Eset (hol.arr A hol.bool)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A hol.bool)) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) f_1 s_2))) :=
  A : hol.type => f_1 : hol.term (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) => s_2 : hol.term (Set_2Eset (hol.arr A hol.bool)) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (thm_72 B A f_1 s_2) (thm_80 B A f_1 s_2)) (Set_2Eset A) (hol.arr A hol.bool) f_1 s_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F))))))))) (Set.finite ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))))) ;)

(; dict ;)

def thm_82 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A hol.bool)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => f_1 : hol.term (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) => s_2 : hol.term (Set_2Eset (hol.arr A hol.bool)) => thm_81 A f_1 s_2) A (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_83 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) d)))))))))) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) d)))))))))) ;)

(; dict ;)

def thm_84 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1))))))))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1))))))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) d)))))))))) ;)

(; dict ;)

def thm_85 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1))))))))) (thm_83 B A d_1 t_2 s_3) (thm_84 B A d_1 t_2 s_3).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_86 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) -> hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_87 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hyp_1 : hol.proof (hol.forall B (d_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_2)))))))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hyp_1 : hol.proof (hol.forall B (d_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_2)))))))))))) => thm_86 A B hyp_1 d_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_88 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (d_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_5)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_3)))))))))))) -> hol.proof (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (d_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_5)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_3)))))))))))) => thm_87 B A d_1 hyp_1 s_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ;)

(; dict ;)

def thm_89 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (d_4 : hol.term B => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_6 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_6)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_4)))))))))))) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (d_4 : hol.term B => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_6 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_6)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_4)))))))))))) => thm_88 A B d_1 s_3 hyp_1 t_2.

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_90 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hyp_1.

(; Theorem: |- (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_91 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (d_4 : hol.term B => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_6 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_6)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_4)))))))))))) -> hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (d_4 : hol.term B => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_6 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_6)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_4)))))))))))) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) => thm_89 B A d_1 t_2 s_3 hyp_1 (thm_90 B A t_2 s_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ;)

(; dict ;)

def thm_92 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) -> hol.proof (hol.imp (hol.forall B (d_4 : hol.term B => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_6 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_6)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_4)))))))))))) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) => hyp_2 : hol.proof (hol.forall B (d_4 : hol.term B => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_6 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_6)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_4)))))))))))) => thm_91 B A d_1 t_2 s_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_93 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (d_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_5)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_3)))))))))))) -> hol.proof (hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3)))))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (d_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_5)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_3)))))))))))) => d_3 : hol.term B => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => thm_92 A B d_3 t_1 s_2 hyp_2 (thm_86 A B hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_94 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (d_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_2)))))))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3))))))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (d_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_2)))))))))))) => s_2 : hol.term (Set_2Eset A) => thm_93 A B t_1 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. (Data.Bool.! \lambda s. (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_95 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) -> hol.proof (hol.forall (Set_2Eset B) (t_1 : hol.term (Set_2Eset B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3)))))))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) => t_1 : hol.term (Set_2Eset B) => thm_94 B A t_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.! \lambda t. (Data.Bool.! \lambda s. (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_96 : A : hol.type -> B : hol.type -> hol.proof (hol.imp (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) (hol.forall (Set_2Eset B) (t_1 : hol.term (Set_2Eset B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3))))))))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_1)))))))))))) => thm_95 A B hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. (Data.Bool.! \lambda s. (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_97 : A : hol.type -> B : hol.type -> hol.proof (hol.forall (Set_2Eset B) (t_1 : hol.term (Set_2Eset B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3)))))))))))) :=
  A : hol.type => B : hol.type => thm_96 A B (thm_6 A B).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_98 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3))))))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => thm_97 A B t_1.

(; Theorem: |- (Data.Bool.! \lambda d. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_99 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.forall B (d_3 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (f_5 x_6) d_3)))))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => thm_98 B A t_1 s_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ;)

(; dict ;)

def thm_100 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => thm_99 A B t_2 s_3 d_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) d))))))))) ;)

(; dict ;)

def thm_101 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (p_5 x_6) d_1))))))))) (thm_85 B A d_1 t_2 s_3) (thm_100 B A d_1 t_2 s_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) d))))))))) ;)

(; dict ;)

def thm_102 : A : hol.type -> d_1 : hol.term hol.bool -> t_2 : hol.term (Set_2Eset hol.bool) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A hol.bool)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_4 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_5 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_4 p_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq hol.bool (p_5 x_6) d_1))))))))) :=
  A : hol.type => d_1 : hol.term hol.bool => t_2 : hol.term (Set_2Eset hol.bool) => s_3 : hol.term (Set_2Eset A) => (B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => thm_101 B A d_1 t_2 s_3) hol.bool A d_1 t_2 s_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite Set.universe))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F))))))))) ;)

(; dict ;)

def thm_103 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A hol.bool)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => d_1 : hol.term hol.bool => t_2 : hol.term (Set_2Eset hol.bool) => s_3 : hol.term (Set_2Eset A) => thm_102 A d_1 t_2 s_3) A hol.false (Set_2Euniverse (Set_2Eset hol.bool)) s_1.

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_104 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_105 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_106 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_105 A s_1) (thm_105 A s_1).

(; Theorem: |- ((= (Set.finite s)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_107 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_51 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1).

(; Theorem: |- ((= (Set.finite s)) Data.Bool.T) ;)

(; dict ;)

def thm_108 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_107 A s_1) (thm_64 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_109 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true thm_104 (hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_106 A s_1) (thm_108 A s_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite Set.universe))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_110 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) (hol.and hol.true hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.and hol.true) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))) hol.true (thm_109 A s_1 hyp_1) thm_57.

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_111 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_112 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_111 t_1) (thm_111 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_113 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_114 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_115 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_114 thm_114.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_116 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_113 thm_115.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_117 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_118 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_119 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_120 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_118 q_1 p_2) (thm_119 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_121 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_122 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_123 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_121 p_1) (thm_122 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_124 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_125 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_8 (thm_124 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_126 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_123 p_1) (thm_125 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_127 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_128 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_126 p_2) (thm_127 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_129 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_120 q_1 p_2) (thm_128 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_130 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_131 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_129 q_1 p_2) (thm_130 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_132 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_131 q_1 p_2 hyp_1 q_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_133 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_134 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_135 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_133 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_134 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_136 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_135 q_2 p_1 hyp_1 hyp_2) (thm_133 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_137 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_136 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_138 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_137 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_139 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_132 q_2 p_1 hyp_1 (thm_138 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_140 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_129 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_141 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_142 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_141 x_2 q_3 p_1 hyp_2 (thm_133 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_143 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_142 p_2 x_3 q_1 hyp_1 hyp_3 (thm_134 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_144 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_143 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_145 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_144 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_146 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_140 q_1 p_2) (thm_145 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_147 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_139 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_146 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_148 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_149 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_111 t_1) (thm_117 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_148 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_150 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_151 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_150 t_1) (thm_150 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_152 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_153 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_154 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_151 t_1) (thm_152 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_153 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_155 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_156 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_155 t_1) (thm_155 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_157 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_10 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_158 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_159 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_156 t_1) (thm_157 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_158 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_160 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_161 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_160 t_1) (thm_160 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_162 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_163 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_164 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_161 t_1) (thm_162 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_163 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_165 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_166 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_165 t_1) (thm_165 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_167 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_12 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_168 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_164 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_166 t_1) (thm_167 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_169 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_159 t_1) (thm_168 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_170 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_154 t_1) (thm_169 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_171 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_149 t_1) (thm_170 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_172 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_171 t_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_173 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_131 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_174 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_135 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_175 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_174 p_2 q_1 hyp_1 hyp_2) (thm_134 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_176 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_175 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_177 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_176 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_178 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_173 q_1 p_2 hyp_1 (thm_177 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_179 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_178 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_180 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_116 thm_172 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_179 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_181 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_112 t_1) (thm_180 t_1)) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite Set.universe))) Data.Bool.T) ;)

(; dict ;)

def thm_182 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) (hol.and hol.true hol.true) hol.true (thm_110 A s_1 hyp_1) thm_181.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ (Set.finite s)) (Set.finite Set.universe))) ;)

(; dict ;)

def thm_183 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.SYM hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) hol.true (thm_182 A s_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite Set.universe)) ;)

(; dict ;)

def thm_184 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.EQ_MP hol.true (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset hol.bool) hol.bool) (Set_2Euniverse (Set_2Eset hol.bool)))) (thm_183 A s_1 hyp_1) thm_2.

(; Theorem: |- (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F)))))))) ;)

(; dict ;)

def thm_185 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (hol.arr A hol.bool)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_103 A s_1 (thm_184 A s_1 hyp_1).

(; Theorem: |- (Set.finite ((Set.image \lambda p. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda p. ((Data.Bool./\ ((= v) p)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (p x)) Set.universe)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (p x)) Data.Bool.F))))))))) ;)

(; dict ;)

def thm_186 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_82 A s_1 (thm_185 A s_1 hyp_1).

(; Theorem: |- (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ;)

(; dict ;)

def thm_187 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Eimage (hol.arr (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (hol.arr (Set_2Eset (hol.arr A hol.bool)) (Set_2Eset (Set_2Eset A)))) (p_2 : hol.term (hol.arr A hol.bool) => Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) (Set_2Eset (hol.arr A hol.bool))) (v_2 : hol.term (hol.arr A hol.bool) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (p_3 : hol.term (hol.arr A hol.bool) => hol.and (hol.eq (hol.arr A hol.bool) v_2 p_3) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr hol.bool (hol.arr (Set_2Eset hol.bool) hol.bool)) (p_3 x_4) (Set_2Euniverse (Set_2Eset hol.bool))))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (hol.eq hol.bool (p_3 x_4) hol.false))))))))) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))) (thm_70 A s_1) (thm_186 A s_1 hyp_1).

(; Theorem: |- (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ;)

(; dict ;)

def thm_188 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))) (thm_64 A s_1 hyp_1) (hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_187 A s_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))) ;)

(; dict ;)

def thm_189 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_188 A s_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) ;)

(; dict ;)

def thm_190 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_189 A s_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) ;)

(; thm ;)

def thm_191 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) :=
  A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1))))))) (thm_63 A) (thm_190 A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_192 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool) (hol.forall (Set_2Eset (Set_2Eset A))) (hol.forall (Set_2Eset (Set_2Eset A)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool) (hol.forall (Set_2Eset (Set_2Eset A))).

(; Theorem: |- ((= \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_193 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))).

(; Theorem: |- ((= \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_194 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => hol.TRANS (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (thm_193 A) (thm_193 A).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))))) (Data.Bool.! \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))))) ;)

(; dict ;)

def thm_195 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool (hol.forall (Set_2Eset (Set_2Eset A))) (hol.forall (Set_2Eset (Set_2Eset A))) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (thm_192 A) (thm_194 A).

(; Theorem: |- ((= (= (Set.finite (Set.bigUnion s)))) (= (Set.finite (Set.bigUnion s)))) ;)

(; dict ;)

def thm_196 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.F)) ((= (Set.finite s)) Data.Bool.F)) ;)

(; dict ;)

def thm_197 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.F)) ((= (Set.finite s)) Data.Bool.F)) ;)

(; dict ;)

def thm_198 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (thm_197 A s_1) (thm_197 A s_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_199 : hyp_1 : hol.proof hol.false -> hol.proof hol.false :=
  hyp_1 : hol.proof hol.false => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. p) ;)

(; dict ;)

def thm_200 : hyp_1 : hol.proof hol.false -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) :=
  hyp_1 : hol.proof hol.false => hol.EQ_MP hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) thm_13 (thm_199 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_201 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof hol.false -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_200 hyp_1 P_1.

(; Theorem: |- ((Data.Bool.==> Data.Bool.F) P) ;)

(; dict ;)

def thm_202 : P_1 : hol.term hol.bool -> hol.proof (hol.imp hol.false P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_201 P_1 hyp_1.

(; Theorem: |- ((= (= (Data.Bool.~ P))) (= (Data.Bool.~ P))) ;)

(; dict ;)

def thm_203 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_204 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1.

(; Theorem: |- ((= ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P))) ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F))) ;)

(; dict ;)

def thm_205 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false))) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1)) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false) (thm_203 P_1) (thm_204 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_206 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ;)

(; dict ;)

def thm_207 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1 P_1 thm_14 (thm_206 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_208 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) (thm_205 P_1) (thm_207 P_1).

(; Theorem: |- (Data.Bool.~ P) ;)

(; dict ;)

def thm_209 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.not P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> P) Data.Bool.F) ;)

(; dict ;)

def thm_210 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.imp P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.EQ_MP (hol.not P_1) (hol.imp P_1 hol.false) ((P_1 : hol.term hol.bool => thm_208 P_1) P_1) (thm_209 P_1 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_211 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_212 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.not P_1) -> hol.proof hol.false :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.not P_1) => thm_210 P_1 hyp_2 (thm_211 P_1 hyp_1).

(; Theorem: |- ((= P) Data.Bool.F) ;)

(; dict ;)

def thm_213 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.eq hol.bool P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.PROP_EXT P_1 hol.false (hyp_2 : hol.proof hol.false => thm_202 P_1 (thm_199 hyp_2)) (hyp_2 : hol.proof P_1 => thm_212 P_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ P)) ((= P) Data.Bool.F)) ;)

(; dict ;)

def thm_214 : P_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.not P_1) (hol.eq hol.bool P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => thm_213 P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Set.finite s))) ((= (Set.finite s)) Data.Bool.F)) ;)

(; dict ;)

def thm_215 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (P_1 : hol.term hol.bool => thm_214 P_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1).

(; Theorem: |- (Data.Bool.~ (Set.finite s)) ;)

(; dict ;)

def thm_216 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hyp_1.

(; Theorem: |- ((= (Set.finite s)) Data.Bool.F) ;)

(; dict ;)

def thm_217 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => thm_215 A s_1 (thm_216 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite s))) (Data.Bool./\ Data.Bool.F)) ;)

(; dict ;)

def thm_218 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.and hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false thm_104 (hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.false) (thm_198 A s_1) (thm_217 A s_1 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))) ;)

(; dict ;)

def thm_219 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL hol.bool (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_220 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.and hol.false (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.and hol.false) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (thm_218 A s_1 hyp_1) (thm_219 A s_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) Data.Bool.F) ;)

(; dict ;)

def thm_221 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t_1 : hol.term hol.bool => thm_157 t_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) Data.Bool.F) ;)

(; dict ;)

def thm_222 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.and hol.false (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) hol.false (thm_220 A s_1 hyp_1) (thm_221 A s_1).

(; Theorem: |- ((= ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) Data.Bool.F)) ;)

(; dict ;)

def thm_223 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) hol.false (thm_196 A s_1) (thm_222 A s_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_224 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_225 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_224 t_1) (thm_224 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_226 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_227 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_226 thm_226.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_228 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_113 thm_227.

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_229 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_230 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_229 t_1) (thm_229 t_1).

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_231 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_15 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_232 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_233 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_230 t_1) (thm_231 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_232 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_234 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_235 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_234 t_1) (thm_234 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_236 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_16 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_237 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_238 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_235 t_1) (thm_236 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_237 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_239 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_240 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_239 t_1) (thm_239 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_241 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_17 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_242 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_243 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_240 t_1) (thm_241 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_242 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_244 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_245 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_243 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_224 t_1) (thm_244 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_246 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_238 t_1) (thm_245 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_247 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_233 t_1) (thm_246 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_248 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_247 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_249 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_139 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_250 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_228 thm_248 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_249 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_251 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_139 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_252 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_250 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => thm_251 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_253 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_139 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_254 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_252 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => thm_253 t_1 hyp_1).

(; Theorem: |- ((= ((= (Set.finite (Set.bigUnion s))) Data.Bool.F)) (Data.Bool.~ (Set.finite (Set.bigUnion s)))) ;)

(; dict ;)

def thm_255 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) hol.false) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_225 t_1) (thm_254 t_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)).

(; Theorem: |- ((= ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) (Data.Bool.~ (Set.finite (Set.bigUnion s)))) ;)

(; dict ;)

def thm_256 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) hol.false) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (thm_223 A s_1 hyp_1) (thm_255 A s_1).

(; Theorem: |- ((= (Data.Bool.~ (Set.finite (Set.bigUnion s)))) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_257 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.SYM hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (thm_256 A s_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1))) ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1))) ;)

(; dict ;)

def thm_258 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1))) ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1))) ;)

(; dict ;)

def thm_259 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (thm_258 t2_1 t1_2) (thm_258 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1))) ;)

(; dict ;)

def thm_260 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not t1_1) (hol.not t2_2)) (hol.imp t2_2 t1_1))) :=
  t1_1 : hol.term hol.bool => thm_19 t1_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1)) ;)

(; dict ;)

def thm_261 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_260 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Set.finite s))) (Data.Bool.~ (Set.finite (Set.bigUnion s))))) ((Data.Bool.==> (Set.finite (Set.bigUnion s))) (Set.finite s))) ;)

(; dict ;)

def thm_262 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (hol.eq hol.bool (hol.imp (hol.not t1_2) (hol.not t2_1)) (hol.imp t2_1 t1_2)) (thm_259 t2_1 t1_2) (thm_261 t2_1 t1_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite (Set.bigUnion s))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.~ (Set.finite s))) (Data.Bool.~ (Set.finite (Set.bigUnion s))))) ;)

(; dict ;)

def thm_263 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.SYM hol.bool (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (thm_262 A s_1).

(; Theorem: |- (Set.finite (Set.bigUnion s)) ;)

(; dict ;)

def thm_264 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_265 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_266 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_265 A s_1) (thm_265 A s_1).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_267 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_268 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_267 q_2 p_1 hyp_2) (thm_133 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_269 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_268 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_270 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_269 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_271 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_270 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_272 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_273 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_274 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_272 A P_1) (thm_273 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_275 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_276 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_20 A) (thm_275 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_277 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_274 A P_1) (thm_276 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_278 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_271 A P_1 (thm_277 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_279 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_280 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_278 A P_1 (thm_279 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_281 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_280 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_282 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_283 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_281 A Q_2 P_1 hyp_2 (thm_282 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_284 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_283 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_285 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_284 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) x)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)))) ;)

(; dict ;)

def thm_286 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) x_2) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_285 A Q_1 P_2) (Set_2Eset A) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)))) ;)

(; dict ;)

def thm_287 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))) ;)

(; dict ;)

def thm_288 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => thm_287 A hyp_1 s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)) ;)

(; dict ;)

def thm_289 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => thm_288 A s_1 hyp_1 t_2.

(; Theorem: |- ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ;)

(; dict ;)

def thm_290 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) => hyp_1.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_291 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) -> hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) => thm_289 A s_2 t_1 hyp_1 (thm_290 A s_2 t_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_292 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) => hyp_2 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => thm_291 A t_1 s_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_293 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) => thm_292 A t_2 s_1 hyp_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_294 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1.

(; Theorem: |- (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t) ;)

(; dict ;)

def thm_295 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) -> hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ;)

(; dict ;)

def thm_296 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) => hol.EQ_MP ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (thm_294 A t_2 s_1) (thm_295 A t_2 s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_297 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => thm_293 A s_2 t_1 (thm_296 A s_2 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_298 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => thm_297 A t_1 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)))) ;)

(; dict ;)

def thm_299 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => thm_298 A t_2 s_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_300 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_286 A s_1 (thm_299 A s_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_301 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_302 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_300 A s_1 (thm_301 A s_1 hyp_1).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_303 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_302 A s_1 hyp_2 (thm_287 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_304 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_303 A s_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_305 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => s_1 : hol.term (Set_2Eset A) => thm_304 A s_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)))) ;)

(; dict ;)

def thm_306 : A : hol.type -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => thm_305 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_307 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => thm_306 A (thm_21 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_308 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_307 A s_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_309 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_266 A s_1) (thm_308 A s_1)) (Set_2Eset A) s_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Data.Bool./\ (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) ;)

(; dict ;)

def thm_310 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.BETA_CONV (Set_2Eset (Set_2Eset A)) hol.bool (t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ;)

(; dict ;)

def thm_311 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.SYM hol.bool ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) (thm_310 A s_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite (Set.bigUnion s))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ;)

(; dict ;)

def thm_312 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_189 A s_1) A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1).

(; Theorem: |- (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))) ;)

(; dict ;)

def thm_313 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => thm_312 A s_1 (thm_264 A s_1 hyp_1).

(; Theorem: |- ((= ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Data.Bool./\ (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) ;)

(; dict ;)

def thm_314 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) hyp_1.

(; Theorem: |- ((= ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Data.Bool./\ (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) ;)

(; dict ;)

def thm_315 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) (thm_313 A s_1 hyp_1) (hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) => thm_314 A s_1 hyp_2).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_316 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_317 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_316 A t_1 s_2) (thm_316 A t_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_318 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_22 A s_1.

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_319 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_318 A s_2 t_1.

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_320 : A : hol.type -> t_1 : hol.term (Set_2Eset (Set_2Eset A)) -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_2 t_1) (hol.forall (Set_2Eset A) (x_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset (Set_2Eset A)) => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_317 A t_1 s_2) (thm_319 A t_1 s_2)) (Set_2Eset A) t_1 s_2.

(; Theorem: |- ((= ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))))) ;)

(; dict ;)

def thm_321 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (A : hol.type => t_1 : hol.term (Set_2Eset (Set_2Eset A)) => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => thm_320 A t_1 s_2) A (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) s_1.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) s))) (Data.Bool.==> ((Set.member x) s))) ;)

(; dict ;)

def thm_322 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1)) (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_323 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= (Set.member x)) (Set.member x)) ;)

(; dict ;)

def thm_324 : A : hol.type -> x_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_1)) :=
  A : hol.type => x_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_1).

(; Theorem: |- ((= Set.fromPredicate) Set.fromPredicate) ;)

(; dict ;)

def thm_325 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A)))) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A)))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_326 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= v) t))) (Data.Bool./\ ((= v) t))) ;)

(; dict ;)

def thm_327 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> v_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (Set_2Eset A) v_2 t_1)) (hol.and (hol.eq (Set_2Eset A) v_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => v_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (Set_2Eset A) v_2 t_1)).

(; Theorem: |- ((= (\lambda t. ((Set.subset t) (Set.bigUnion s)) t)) ((Set.subset t) (Set.bigUnion s))) ;)

(; dict ;)

def thm_328 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_2)) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_1 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_2))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_2)) t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t))) ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))) ;)

(; dict ;)

def thm_329 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (Set_2Eset A) v_3 t_2) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_2)) (hol.and (hol.eq (Set_2Eset A) v_3 t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (Set_2Eset A) v_3 t_2)) (hol.and (hol.eq (Set_2Eset A) v_3 t_2)) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (thm_327 A t_2 v_3) (thm_328 A t_2 s_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t))) \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))) ;)

(; dict ;)

def thm_330 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> v_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3)) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => v_2 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3)) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (t_3 : hol.term (Set_2Eset A) => thm_329 A s_1 t_3 v_2).

(; Theorem: |- ((= (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))) ;)

(; dict ;)

def thm_331 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> v_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => v_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3)) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (thm_326 A) (thm_330 A s_1 v_2).

(; Theorem: |- ((= \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t)))) \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))) ;)

(; dict ;)

def thm_332 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.ABS_THM (Set_2Eset A) hol.bool (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (v_2 : hol.term (Set_2Eset A) => thm_331 A s_1 v_2).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))) ;)

(; dict ;)

def thm_333 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3)))) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A)))) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A)))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) ((t_4 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_3))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (thm_325 A) (thm_332 A s_1).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t)))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ;)

(; dict ;)

def thm_334 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4))))) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.APP_THM (Set_2Eset (Set_2Eset A)) hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4)))) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) (thm_324 A x_2) (thm_333 A s_1).

(; Theorem: |- ((= (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t))))))) (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) ;)

(; dict ;)

def thm_335 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4)))))) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4))))) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) thm_323 (thm_334 A s_1 x_2).

(; Theorem: |- ((= (\lambda t. ((Set.subset t) (Set.bigUnion s)) x)) ((Set.subset x) (Set.bigUnion s))) ;)

(; dict ;)

def thm_336 : A : hol.type -> x_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_2)) x_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_2))) :=
  A : hol.type => x_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_2)) x_1.

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t)))))) (\lambda t. ((Set.subset t) (Set.bigUnion s)) x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset x) (Set.bigUnion s)))) ;)

(; dict ;)

def thm_337 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4))))) ((t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4)))))) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) ((t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) x_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (thm_335 A s_1 x_2) (thm_336 A x_2 s_1).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_338 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (p t)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (p t)))))) (p x))) ;)

(; dict ;)

def thm_339 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (p t)))))) (p x))) ;)

(; dict ;)

def thm_340 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2)) (thm_338 A p_1 x_2) (thm_339 A p_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_341 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_23 A p_1.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x)) ;)

(; dict ;)

def thm_342 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_341 A p_1 x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (p t)))))) (p x)) ;)

(; dict ;)

def thm_343 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (t_4 : hol.term A => hol.and (hol.eq A v_3 t_4) (p_1 t_4))))) (p_1 x_2)) (thm_340 A p_1 x_2) (thm_342 A p_1 x_2).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (p t)))))) (p x)) ;)

(; dict ;)

def thm_344 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (p_1 t_4))))) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => x_2 : hol.term (Set_2Eset A) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_343 A p_1 x_2) (Set_2Eset A) p_1 x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) (\lambda t. ((Set.subset t) (Set.bigUnion s)) t)))))) (\lambda t. ((Set.subset t) (Set.bigUnion s)) x)) ;)

(; dict ;)

def thm_345 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4))))) ((t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) x_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => (A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => x_2 : hol.term (Set_2Eset A) => thm_344 A p_1 x_2) A (t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset x) (Set.bigUnion s))) ;)

(; dict ;)

def thm_346 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) ((t_5 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_5 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) t_4))))) ((t_3 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (thm_337 A s_1 x_2) (thm_345 A s_1 x_2).

(; Theorem: |- ((= ((Set.subset x) (Set.bigUnion s))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) ((Set.member x) (Set.bigUnion s))))) ;)

(; dict ;)

def thm_347 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_319 A t_1 s_2) A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1) x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) ((Set.member x) (Set.bigUnion s))))) ;)

(; dict ;)

def thm_348 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (thm_346 A s_1 x_2) (thm_347 A s_1 x_2).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_349 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) x))) (Data.Bool.==> ((Set.member x) x))) ;)

(; dict ;)

def thm_350 : A : hol.type -> x_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 x_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 x_1))) :=
  A : hol.type => x_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 x_1)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.bigUnion s))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ((= ((Set.member x) (Set.bigUnion s))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_351 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))).

(; Theorem: |- ((= ((= ((Set.member x) (Set.bigUnion s))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ((= ((Set.member x) (Set.bigUnion s))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_352 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (thm_351 A s_1 x_2) (thm_351 A s_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.bigUnion s))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_353 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => thm_24 A s_1.

(; Theorem: |- ((= ((Set.member x) (Set.bigUnion s))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_354 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term A => thm_353 A s_1 x_2.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) x)) ((Set.member x) (Set.bigUnion s)))) ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_355 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))) (thm_350 A x_2 x_3) ((A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_3)))) (thm_352 A s_1 x_2) (thm_354 A s_1 x_2)) A s_1 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) x)) ((Set.member x) (Set.bigUnion s)))) \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_356 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (x_3 : hol.term A => thm_355 A s_1 x_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) ((Set.member x) (Set.bigUnion s))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_357 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (thm_349 A) (thm_356 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_358 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) (thm_348 A s_1 x_2) (thm_357 A s_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_359 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => x_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1)) (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1)) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) (thm_322 A s_1 x_2) (thm_358 A s_1 x_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_360 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.ABS_THM (Set_2Eset A) hol.bool (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (x_2 : hol.term (Set_2Eset A) => thm_359 A s_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_361 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (thm_60 A) (thm_360 A s_1).

(; Theorem: |- ((= ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_362 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.TRANS hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_3 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_3 t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (thm_321 A s_1) (thm_361 A s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))))) ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ;)

(; dict ;)

def thm_363 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.SYM hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (thm_362 A s_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_364 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_365 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_366 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (thm_364 A s_1) (thm_365 A s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_367 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) (thm_60 A) (thm_366 A s_1).

(; Theorem: |- ((Set.member t) s) ;)

(; dict ;)

def thm_368 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) -> hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => hyp_1.

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_369 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_370 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (thm_369 A s_1 t_2) (thm_369 A s_1 t_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_371 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) (thm_349 A) (thm_370 A s_1 t_2).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_372 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hyp_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)) t)) ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_373 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Set_2Eset A)) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) (\lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)) t)) ;)

(; dict ;)

def thm_374 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> t_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_4)) t_3)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => t_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_4)) t_3) (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) (thm_373 A t_3 x_1 s_2).

(; Theorem: |- ((= ((= ((Set.member t) s)) Data.Bool.T)) ((= ((Set.member t) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_375 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member t) s)) Data.Bool.T)) ((= ((Set.member t) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_376 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (thm_375 A s_1 t_2) (thm_375 A s_1 t_2).

(; Theorem: |- ((= ((Set.member t) s)) ((= ((Set.member t) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_377 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_51 t_1) (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1).

(; Theorem: |- ((= ((Set.member t) s)) Data.Bool.T) ;)

(; dict ;)

def thm_378 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (thm_377 A s_1 t_2) (thm_368 A s_1 t_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member t) s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_379 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true thm_104 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) hol.true) (thm_376 A s_1 t_2) (thm_378 A s_1 t_2 hyp_1)).

(; Theorem: |- ((= ((= ((Set.member x) t)) Data.Bool.T)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_380 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) t)) Data.Bool.T)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_381 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (thm_380 A t_1 x_2) (thm_380 A t_1 x_2).

(; Theorem: |- ((= ((Set.member x) t)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_382 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_51 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1).

(; Theorem: |- ((= ((Set.member x) t)) Data.Bool.T) ;)

(; dict ;)

def thm_383 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (thm_382 A t_1 x_2) (thm_372 A t_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_384 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> t_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) (hol.and hol.true hol.true)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => t_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2)) (hol.and hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) hol.true (thm_379 A s_2 t_3 hyp_2) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) hol.true) (thm_381 A t_3 x_1) (thm_383 A t_3 x_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) Data.Bool.T) ;)

(; dict ;)

def thm_385 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> t_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) hol.true) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => t_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) (hol.and hol.true hol.true) hol.true (thm_384 A x_1 s_2 t_3 hyp_1 hyp_2) thm_181.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_386 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> t_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) -> hol.proof (hol.eq hol.bool hol.true (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3))) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => t_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) => hol.SYM hol.bool (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) hol.true (thm_385 A x_1 s_2 t_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)) ;)

(; dict ;)

def thm_387 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset (Set_2Eset A)) -> t_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset (Set_2Eset A)) => t_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) => hol.EQ_MP hol.true (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 t_3)) (thm_386 A x_1 s_2 t_3 hyp_1 hyp_2) thm_2.

(; Theorem: |- (\lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)) t) ;)

(; dict ;)

def thm_388 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) -> hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) (thm_374 A x_2 s_3 t_1) (thm_387 A x_2 s_3 t_1 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_389 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_277 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_390 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_282 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_391 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_392 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_390 A Q_3 x_1 P_2 hyp_2 (thm_391 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_393 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_392 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_394 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_393 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_395 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_389 A P_2) (thm_394 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_396 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_395 A x_1 P_2 hyp_1) (Set_2Eset A) t_1 (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_397 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) => hol.PROVE_HYP ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4))) (thm_388 A t_1 x_2 s_3 hyp_1 hyp_2) (hyp_3 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4)) t_1) => thm_396 A t_1 x_2 s_3 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_398 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_1 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_4))) (thm_372 A t_1 x_2 hyp_1) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => thm_397 A t_1 x_2 s_3 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_399 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) => thm_398 A t_2 x_3 s_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_400 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => x_3 : hol.term A => thm_399 A s_1 t_2 x_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_401 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) (thm_368 A s_1 t_2 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))) (thm_371 A s_1 t_2) (thm_400 A s_1 t_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> ((Set.member t) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_402 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) => thm_401 A s_1 t_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_403 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => t_2 : hol.term (Set_2Eset A) => thm_402 A s_1 t_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_404 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.EQ_MP (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (thm_367 A s_1) (thm_403 A s_1).

(; Theorem: |- ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))) ;)

(; dict ;)

def thm_405 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.EQ_MP (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) x_2 s_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_4))))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (thm_363 A s_1) (thm_404 A s_1).

(; Theorem: |- ((Data.Bool./\ (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ((Set.subset s) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s))))))) ;)

(; dict ;)

def thm_406 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => hol.EQ_MP (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) (thm_315 A s_1 hyp_1) (thm_405 A s_1).

(; Theorem: |- (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) (Set.bigUnion s)))))) ;)

(; dict ;)

def thm_407 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => hol.EQ_MP (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))))) ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (thm_311 A s_1) (thm_406 A s_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_408 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_395 A x_1 P_2 hyp_1) (Set_2Eset (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))))) (t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_409 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => hol.PROVE_HYP ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2))) (thm_407 A s_1 hyp_1) (hyp_2 : hol.proof ((t_2 : hol.term (Set_2Eset (Set_2Eset A)) => hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset (Set_2Eset A)) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) s_1 t_2)) (Set_2EfromPredicate (hol.arr (hol.arr (Set_2Eset A) hol.bool) (Set_2Eset (Set_2Eset A))) (v_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (hol.eq (Set_2Eset A) v_2 t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))))) => thm_408 A s_1 hyp_2).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_410 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => thm_309 A s_1 (thm_409 A s_1 hyp_1).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_411 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (thm_264 A s_1 hyp_1) (hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => thm_410 A s_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Set.finite (Set.bigUnion s))) (Set.finite s)) ;)

(; dict ;)

def thm_412 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) => thm_411 A s_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Set.finite s))) (Data.Bool.~ (Set.finite (Set.bigUnion s)))) ;)

(; dict ;)

def thm_413 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)))) (thm_263 A s_1) (thm_412 A s_1).

(; Theorem: |- (Data.Bool.~ (Set.finite (Set.bigUnion s))) ;)

(; dict ;)

def thm_414 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => thm_413 A s_1 (thm_216 A s_1 hyp_1).

(; Theorem: |- ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_415 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => hol.EQ_MP (hol.not (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (thm_257 A s_1 hyp_1) (thm_414 A s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Set.finite s))) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_416 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) => thm_415 A s_1 hyp_1.

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_417 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_418 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_419 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (thm_418 A s_1) (thm_418 A s_1).

(; Theorem: |- ((= (Set.finite s)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_420 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t_1 : hol.term hol.bool => thm_51 t_1) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_421 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hyp_1.

(; Theorem: |- ((= (Set.finite s)) Data.Bool.T) ;)

(; dict ;)

def thm_422 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (thm_420 A s_1) (thm_421 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> (Set.finite s))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_423 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.imp hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true thm_417 (hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true) (thm_419 A s_1) (thm_422 A s_1 hyp_1)).

(; Theorem: |- ((= ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_424 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((Data.Bool.==> Data.Bool.T) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_425 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.imp hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.imp hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (thm_423 A s_1 hyp_1) (thm_424 A s_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_426 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_427 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_426 t_1) (thm_426 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_428 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_429 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_428 thm_428.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_430 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_113 thm_429.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_431 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_25 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_432 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_433 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_426 t_1) (thm_431 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_432 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_434 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_435 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_434 t_1) (thm_434 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_436 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_26 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_437 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_438 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_435 t_1) (thm_436 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_437 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_439 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_440 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_439 t_1) (thm_439 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_441 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_27 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_442 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_443 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_440 t_1) (thm_441 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_442 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_444 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_445 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_444 t_1) (thm_444 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_446 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_447 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_446 thm_446.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_448 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_113 thm_447.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_449 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_51 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_450 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_28 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_451 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_449 t_1) (thm_450 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_452 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_323 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_444 t_1) (thm_451 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_453 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_454 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_452 t_1) thm_453.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_455 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_454 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_456 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_455 t_1) thm_453.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_457 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_147 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_458 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_445 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_448 thm_456 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_457 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_459 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_460 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_459 t_1) (thm_459 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_461 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_29 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_462 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_458 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_460 t_1) (thm_461 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_463 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_443 t_1) (thm_462 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_464 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_438 t_1) (thm_463 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_465 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_433 t_1) (thm_464 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_466 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_465 t_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_467 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_178 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_468 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_430 thm_466 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_467 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_469 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_427 t_1) (thm_468 t_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_470 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.imp hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (thm_425 A s_1 hyp_1) (thm_469 A s_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))))) (Data.Bool.==> ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_471 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.imp (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) thm_417 (thm_470 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_472 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) hol.true thm_104 (thm_422 A s_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_473 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.and hol.true (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.and hol.true) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (thm_472 A s_1 hyp_1) (thm_219 A s_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))) ;)

(; dict ;)

def thm_474 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t_1 : hol.term hol.bool => thm_117 t_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))) ;)

(; dict ;)

def thm_475 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.and hol.true (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (thm_473 A s_1 hyp_1) (thm_474 A s_1).

(; Theorem: |- ((= ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_476 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))) (thm_196 A s_1) (thm_475 A s_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))))) ((Data.Bool.==> ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_477 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.imp (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.imp (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (thm_471 A s_1 hyp_1) (thm_476 A s_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) Data.Bool.T) ;)

(; dict ;)

def thm_478 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => (t_1 : hol.term hol.bool => thm_451 t_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))))) Data.Bool.T) ;)

(; dict ;)

def thm_479 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.TRANS hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.imp (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) hol.true (thm_477 A s_1 hyp_1) (thm_478 A s_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))))) ;)

(; dict ;)

def thm_480 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) hol.true (thm_479 A s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_481 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => hol.EQ_MP hol.true (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (thm_480 A s_1 hyp_1) thm_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_482 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => thm_30 A s_1.

(; Theorem: |- ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_483 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => thm_481 A s_1 hyp_1 (thm_482 A s_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_484 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) => thm_483 A s_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ (Set.finite s)) (Data.Bool.~ (Set.finite s))) ;)

(; dict ;)

def thm_485 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.or (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => thm_31 (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_486 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_487 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_488 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_486 Q_1 P_2) (thm_487 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_489 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_490 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_491 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_489 P_1) (thm_490 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_492 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_32 (thm_206 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_493 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_491 P_1) (thm_492 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_494 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_495 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_493 P_2) (thm_494 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_496 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_488 Q_1 P_2) (thm_495 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_497 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_498 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_496 Q_1 P_2) (thm_497 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_499 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_498 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_500 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_501 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_499 Q_3 R_2 P_1 hyp_2 (thm_500 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_502 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_503 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_501 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_502 R_3 Q_1 hyp_2).

(; Theorem: |- ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_504 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) -> hyp_2 : hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) -> hyp_3 : hol.proof (hol.or (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => hyp_2 : hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => hyp_3 : hol.proof (hol.or (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_503 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_505 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) -> hyp_2 : hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => hyp_2 : hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => hol.PROVE_HYP (hol.or (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (thm_485 A s_1) (hyp_3 : hol.proof (hol.or (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1))) => thm_504 A s_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_506 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => hol.PROVE_HYP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (thm_484 A s_1) (hyp_2 : hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => thm_505 A s_1 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t))))) ;)

(; dict ;)

def thm_507 : A : hol.type -> s_1 : hol.term (Set_2Eset (Set_2Eset A)) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.PROVE_HYP (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2))))) (thm_416 A s_1) (hyp_1 : hol.proof (hol.imp (hol.not (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1)) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) => thm_506 A s_1 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_508 : A : hol.type -> hol.proof (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset (Set_2Eset A)) => thm_507 A s_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

(; thm ;)

def thm_509 : A : hol.type -> hol.proof (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) :=
  A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (hol.forall (Set_2Eset (Set_2Eset A)) (s_1 : hol.term (Set_2Eset (Set_2Eset A)) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset A)) (Set_2Eset A)) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool) s_1) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset (Set_2Eset A)) hol.bool)) t_2 s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2)))))) (thm_195 A) (thm_508 A).
