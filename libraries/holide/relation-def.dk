
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME relation_2Ddef.

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

Set_2Eset : hol.type -> hol.type.

Set_2Emember : A : hol.type -> hol.term A.

Data_2EPair_2E_2C : A : hol.type -> hol.term A.

Set_2EfromPredicate : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Set_2E_7B_7D : A : hol.type -> hol.term A.

Set_2Euniverse : A : hol.type -> hol.term A.

Set_2Esubset : A : hol.type -> hol.term A.

Set_2Eunion : A : hol.type -> hol.term A.

Set_2Eintersect : A : hol.type -> hol.term A.

Set_2EbigUnion : A : hol.type -> hol.term A.

Set_2Eimage : A : hol.type -> hol.term A.

Set_2EbigIntersect : A : hol.type -> hol.term A.

(; Constant Relation.fromSet ;)

def Relation_2EfromSet : B : hol.type -> A : hol.type -> hol.term (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr A (hol.arr B hol.bool))) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_2 : hol.term A => __11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1.

(; Constant Relation.toSet ;)

def Relation_2EtoSet : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) :=
  B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (__11239_1 x_3 y_4)))).

(; Constant Relation.empty ;)

def Relation_2Eempty : B : hol.type -> A : hol.type -> hol.term (hol.arr A (hol.arr B hol.bool)) :=
  B : hol.type => A : hol.type => Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))).

(; Constant Relation.universe ;)

def Relation_2Euniverse : B : hol.type -> A : hol.type -> hol.term (hol.arr A (hol.arr B hol.bool)) :=
  B : hol.type => A : hol.type => Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B))).

(; Constant Relation.subrelation ;)

def Relation_2Esubrelation : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2).

(; Constant Relation.union ;)

def Relation_2Eunion : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)))) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2)).

(; Constant Relation.intersect ;)

def Relation_2Eintersect : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)))) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2)).

(; Constant Relation.bigUnion ;)

def Relation_2EbigUnion : B : hol.type -> A : hol.type -> hol.term (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool))) :=
  B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_1)).

(; Constant Relation.bigIntersect ;)

def Relation_2EbigIntersect : B : hol.type -> A : hol.type -> hol.term (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool))) :=
  B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_1)).

(; Constant Relation.reflexive ;)

def Relation_2Ereflexive : A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) :=
  A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_2 : hol.term A => __11290_1 x_2 x_2).

(; Constant Relation.irreflexive ;)

def Relation_2Eirreflexive : A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) :=
  A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_2 : hol.term A => hol.not (__11295_1 x_2 x_2)).

(; Constant Relation.transitive ;)

def Relation_2Etransitive : A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) :=
  A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (__11300_1 x_2 y_3) (__11300_1 y_3 z_4)) (__11300_1 x_2 z_4)))).

(; Constant Relation.transitiveClosure ;)

def Relation_2EtransitiveClosure : A : hol.type -> hol.term (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr A (hol.arr A hol.bool))) :=
  A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A __11305_1 s_3) (Relation_2Etransitive A s_3))))).

(; Theorem: |- ((= Relation.fromSet) \lambda _11218. \lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_0 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr A (hol.arr B hol.bool))) (Relation_2EfromSet B A) (__11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_2 : hol.term A => __11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1)) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr A (hol.arr B hol.bool))) (Relation_2EfromSet B A).

(; Theorem: |- ((= _11218) _11218) ;)

(; dict ;)

def thm_1 : B : hol.type -> A : hol.type -> __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) __11218_1 __11218_1) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.REFL (Set_2Eset (Data_2EPair_2E_2A A B)) __11218_1.

(; Theorem: |- ((= (Relation.fromSet _11218)) (\lambda _11218. \lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218) _11218)) ;)

(; dict ;)

def thm_2 : B : hol.type -> A : hol.type -> __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A __11218_1) ((__11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11218_1)) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.APP_THM (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A) (__11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11218_1 __11218_1 (thm_0 B A) (thm_1 B A __11218_1).

(; Theorem: |- ((= (\lambda _11218. \lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218) _11218)) \lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_3 : B : hol.type -> A : hol.type -> __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) ((__11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11218_1) (__11219_2 : hol.term A => __11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1)) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.BETA_CONV (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr A (hol.arr B hol.bool)) (__11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11218_1.

(; Theorem: |- ((= (Relation.fromSet _11218)) \lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_4 : B : hol.type -> A : hol.type -> __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A __11218_1) (__11219_2 : hol.term A => __11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1)) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A __11218_1) ((__11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11218_1) (__11219_2 : hol.term A => __11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1) (thm_2 B A __11218_1) (thm_3 B A __11218_1).

(; Theorem: |- ((= _11219) _11219) ;)

(; dict ;)

def thm_5 : A : hol.type -> __11219_1 : hol.term A -> hol.proof (hol.eq A __11219_1 __11219_1) :=
  A : hol.type => __11219_1 : hol.term A => hol.REFL A __11219_1.

(; Theorem: |- ((= ((Relation.fromSet _11218) _11219)) (\lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218) _11219)) ;)

(; dict ;)

def thm_6 : A : hol.type -> B : hol.type -> __11219_1 : hol.term A -> __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (Relation_2EfromSet B A __11218_2 __11219_1) ((__11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11219_1)) :=
  A : hol.type => B : hol.type => __11219_1 : hol.term A => __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.APP_THM A (hol.arr B hol.bool) (Relation_2EfromSet B A __11218_2) (__11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11219_1 __11219_1 (thm_4 B A __11218_2) (thm_5 A __11219_1).

(; Theorem: |- ((= (\lambda _11219. \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218) _11219)) \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_7 : A : hol.type -> B : hol.type -> __11219_1 : hol.term A -> __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (hol.arr B hol.bool) ((__11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11219_1) (__11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_1 __11220_3) __11218_2)) :=
  A : hol.type => B : hol.type => __11219_1 : hol.term A => __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.BETA_CONV A (hol.arr B hol.bool) (__11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11219_1.

(; Theorem: |- ((= ((Relation.fromSet _11218) _11219)) \lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_8 : A : hol.type -> B : hol.type -> __11219_1 : hol.term A -> __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (Relation_2EfromSet B A __11218_2 __11219_1) (__11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_1 __11220_3) __11218_2)) :=
  A : hol.type => B : hol.type => __11219_1 : hol.term A => __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.TRANS (hol.arr B hol.bool) (Relation_2EfromSet B A __11218_2 __11219_1) ((__11219_3 : hol.term A => __11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11219_1) (__11220_3 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_1 __11220_3) __11218_2) (thm_6 A B __11219_1 __11218_2) (thm_7 A B __11219_1 __11218_2).

(; Theorem: |- ((= _11220) _11220) ;)

(; dict ;)

def thm_9 : B : hol.type -> __11220_1 : hol.term B -> hol.proof (hol.eq B __11220_1 __11220_1) :=
  B : hol.type => __11220_1 : hol.term B => hol.REFL B __11220_1.

(; Theorem: |- ((= (((Relation.fromSet _11218) _11219) _11220)) (\lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218) _11220)) ;)

(; dict ;)

def thm_10 : B : hol.type -> A : hol.type -> __11220_1 : hol.term B -> __11219_2 : hol.term A -> __11218_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq hol.bool (Relation_2EfromSet B A __11218_3 __11219_2 __11220_1) ((__11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_4) __11218_3) __11220_1)) :=
  B : hol.type => A : hol.type => __11220_1 : hol.term B => __11219_2 : hol.term A => __11218_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.APP_THM B hol.bool (Relation_2EfromSet B A __11218_3 __11219_2) (__11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_4) __11218_3) __11220_1 __11220_1 (thm_8 A B __11219_2 __11218_3) (thm_9 B __11220_1).

(; Theorem: |- ((= (\lambda _11220. ((Set.member ((Data.Pair., _11219) _11220)) _11218) _11220)) ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_11 : A : hol.type -> B : hol.type -> __11220_1 : hol.term B -> __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> __11219_3 : hol.term A -> hol.proof (hol.eq hol.bool ((__11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11220_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_1) __11218_2)) :=
  A : hol.type => B : hol.type => __11220_1 : hol.term B => __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_3 : hol.term A => hol.BETA_CONV B hol.bool (__11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_3 __11220_4) __11218_2) __11220_1.

(; Theorem: |- ((= (((Relation.fromSet _11218) _11219) _11220)) ((Set.member ((Data.Pair., _11219) _11220)) _11218)) ;)

(; dict ;)

def thm_12 : B : hol.type -> A : hol.type -> __11220_1 : hol.term B -> __11219_2 : hol.term A -> __11218_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq hol.bool (Relation_2EfromSet B A __11218_3 __11219_2 __11220_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_1) __11218_3)) :=
  B : hol.type => A : hol.type => __11220_1 : hol.term B => __11219_2 : hol.term A => __11218_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.TRANS hol.bool (Relation_2EfromSet B A __11218_3 __11219_2 __11220_1) ((__11220_4 : hol.term B => Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_4) __11218_3) __11220_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_1) __11218_3) (thm_10 B A __11220_1 __11219_2 __11218_3) (thm_11 A B __11220_1 __11218_3 __11219_2).

(; Theorem: |- (Data.Bool.! \lambda _11220. ((= (((Relation.fromSet _11218) _11219) _11220)) ((Set.member ((Data.Pair., _11219) _11220)) _11218))) ;)

(; dict ;)

def thm_13 : A : hol.type -> B : hol.type -> __11219_1 : hol.term A -> __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.forall B (__11220_3 : hol.term B => hol.eq hol.bool (Relation_2EfromSet B A __11218_2 __11219_1 __11220_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_1 __11220_3) __11218_2))) :=
  A : hol.type => B : hol.type => __11219_1 : hol.term A => __11218_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11220_3 : hol.term B => thm_12 B A __11220_3 __11219_1 __11218_2.

(; Theorem: |- (Data.Bool.! \lambda _11219. (Data.Bool.! \lambda _11220. ((= (((Relation.fromSet _11218) _11219) _11220)) ((Set.member ((Data.Pair., _11219) _11220)) _11218)))) ;)

(; dict ;)

def thm_14 : B : hol.type -> A : hol.type -> __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.forall A (__11219_2 : hol.term A => hol.forall B (__11220_3 : hol.term B => hol.eq hol.bool (Relation_2EfromSet B A __11218_1 __11219_2 __11220_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1)))) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => __11219_2 : hol.term A => thm_13 A B __11219_2 __11218_1.

(; Theorem: |- (Data.Bool.! \lambda _11218. (Data.Bool.! \lambda _11219. (Data.Bool.! \lambda _11220. ((= (((Relation.fromSet _11218) _11219) _11220)) ((Set.member ((Data.Pair., _11219) _11220)) _11218))))) ;)

(; dict ;)

def thm_15 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset (Data_2EPair_2E_2A A B)) (__11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.forall A (__11219_2 : hol.term A => hol.forall B (__11220_3 : hol.term B => hol.eq hol.bool (Relation_2EfromSet B A __11218_1 __11219_2 __11220_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) __11219_2 __11220_3) __11218_1))))) :=
  B : hol.type => A : hol.type => __11218_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => thm_14 B A __11218_1.

(; Theorem: |- ((= (((Relation.fromSet s) x) y)) ((Set.member ((Data.Pair., x) y)) s)) ;)

(; dict ;)

def thm_16 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq hol.bool (Relation_2EfromSet B A s_3 x_2 y_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_1) s_3)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => (B : hol.type => A : hol.type => __11220_1 : hol.term B => __11219_2 : hol.term A => __11218_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => thm_15 B A __11218_3 __11219_2 __11220_1) B A y_1 x_2 s_3.

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) y)) s)) ((Set.member ((Data.Pair., x) y)) s)) ;)

(; dict ;)

def thm_17 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> y_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => y_2 : hol.term B => x_3 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1).

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) y)) s)) ((Set.member ((Data.Pair., x) y)) s)) ;)

(; dict ;)

def thm_18 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> y_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => y_2 : hol.term B => x_3 : hol.term A => hol.SYM hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) s_1) (thm_17 B A s_1 y_2 x_3).

(; Theorem: |- ((= (((Relation.fromSet s) x) y)) ((Set.member ((Data.Pair., x) y)) s)) ;)

(; dict ;)

def thm_19 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.eq hol.bool (Relation_2EfromSet B A s_3 x_2 y_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_1) s_3)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => s_3 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.TRANS hol.bool (Relation_2EfromSet B A s_3 x_2 y_1) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_1) s_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_1) s_3) (thm_16 B A y_1 x_2 s_3) (thm_18 B A s_3 y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= (((Relation.fromSet s) x) y)) ((Set.member ((Data.Pair., x) y)) s))) ;)

(; dict ;)

def thm_20 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.forall B (y_3 : hol.term B => hol.eq hol.bool (Relation_2EfromSet B A s_2 x_1 y_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 y_3) s_2))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => y_3 : hol.term B => thm_19 B A y_3 x_1 s_2.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.fromSet s) x) y)) ((Set.member ((Data.Pair., x) y)) s)))) ;)

(; dict ;)

def thm_21 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => hol.eq hol.bool (Relation_2EfromSet B A s_1 x_2 y_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_3) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => x_2 : hol.term A => thm_20 A B x_2 s_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.fromSet s) x) y)) ((Set.member ((Data.Pair., x) y)) s))))) ;)

(; dict ;)

def thm_22 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset (Data_2EPair_2E_2A A B)) (s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => hol.eq hol.bool (Relation_2EfromSet B A s_1 x_2 y_3) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_3) s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => thm_21 B A s_1.

(; Theorem: |- ((= Relation.toSet) \lambda _11239. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((_11239 x) y)))))) ;)

(; dict ;)

def thm_23 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (Relation_2EtoSet B A) (__11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (__11239_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (Relation_2EtoSet B A).

(; Theorem: |- ((= _11239) _11239) ;)

(; dict ;)

def thm_24 : B : hol.type -> A : hol.type -> __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11239_1 __11239_1) :=
  B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11239_1.

(; Theorem: |- ((= (Relation.toSet _11239)) (\lambda _11239. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((_11239 x) y))))) _11239)) ;)

(; dict ;)

def thm_25 : B : hol.type -> A : hol.type -> __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A __11239_1) ((__11239_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (__11239_2 x_4 y_5))))) __11239_1)) :=
  B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A) (__11239_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (__11239_2 x_4 y_5))))) __11239_1 __11239_1 (thm_23 B A) (thm_24 B A __11239_1).

(; Theorem: |- ((= (\lambda _11239. (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((_11239 x) y))))) _11239)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((_11239 x) y)))))) ;)

(; dict ;)

def thm_26 : B : hol.type -> A : hol.type -> __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) ((__11239_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (__11239_2 x_4 y_5))))) __11239_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (__11239_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B)) (__11239_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (__11239_2 x_4 y_5))))) __11239_1.

(; Theorem: |- ((= (Relation.toSet _11239)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((_11239 x) y)))))) ;)

(; dict ;)

def thm_27 : B : hol.type -> A : hol.type -> __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A __11239_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (__11239_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A __11239_1) ((__11239_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (__11239_2 x_4 y_5))))) __11239_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (__11239_1 x_3 y_4))))) (thm_25 B A __11239_1) (thm_26 B A __11239_1).

(; Theorem: |- (Data.Bool.! \lambda _11239. ((= (Relation.toSet _11239)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((_11239 x) y))))))) ;)

(; dict ;)

def thm_28 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A __11239_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (__11239_1 x_3 y_4))))))) :=
  B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_27 B A __11239_1.

(; Theorem: |- ((= (Relation.toSet r)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y)))))) ;)

(; dict ;)

def thm_29 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A r_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => (B : hol.type => A : hol.type => __11239_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_28 B A __11239_1) B A r_1.

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y)))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y)))))) ;)

(; dict ;)

def thm_30 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y)))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y)))))) ;)

(; dict ;)

def thm_31 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.SYM (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))) (thm_30 B A r_1).

(; Theorem: |- ((= (Relation.toSet r)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y)))))) ;)

(; dict ;)

def thm_32 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A r_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A r_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))) (thm_29 B A r_1) (thm_31 B A r_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.toSet r)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y))))))) ;)

(; dict ;)

def thm_33 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Relation_2EtoSet B A r_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_2 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_4 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_4)) (r_1 x_3 y_4))))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_32 B A r_1.

(; Theorem: |- ((= Relation.empty) (Relation.fromSet Set.{})) ;)

(; dict ;)

def thm_34 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eempty B A) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2Eempty B A).

(; Theorem: |- ((= (Relation.fromSet Set.{})) (Relation.fromSet Set.{})) ;)

(; dict ;)

def thm_35 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))).

(; Theorem: |- ((= (Relation.fromSet Set.{})) (Relation.fromSet Set.{})) ;)

(; dict ;)

def thm_36 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.SYM (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (thm_35 B A).

(; Theorem: |- ((= Relation.empty) (Relation.fromSet Set.{})) ;)

(; dict ;)

def thm_37 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eempty B A) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2Eempty B A) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) ((B : hol.type => A : hol.type => thm_34 B A) B A) (thm_36 B A).

(; Theorem: |- ((= Relation.universe) (Relation.fromSet Set.universe)) ;)

(; dict ;)

def thm_38 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Euniverse B A) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2Euniverse B A).

(; Theorem: |- ((= (Relation.fromSet Set.universe)) (Relation.fromSet Set.universe)) ;)

(; dict ;)

def thm_39 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))).

(; Theorem: |- ((= (Relation.fromSet Set.universe)) (Relation.fromSet Set.universe)) ;)

(; dict ;)

def thm_40 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.SYM (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))) (thm_39 B A).

(; Theorem: |- ((= Relation.universe) (Relation.fromSet Set.universe)) ;)

(; dict ;)

def thm_41 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Euniverse B A) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2Euniverse B A) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EfromSet B A (Set_2Euniverse (Set_2Eset (Data_2EPair_2E_2A A B)))) ((B : hol.type => A : hol.type => thm_38 B A) B A) (thm_40 B A).

(; Theorem: |- ((= Relation.subrelation) \lambda _11244. \lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245))) ;)

(; dict ;)

def thm_42 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) (Relation_2Esubrelation B A) (__11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool)) (Relation_2Esubrelation B A).

(; Theorem: |- ((= _11244) _11244) ;)

(; dict ;)

def thm_43 : B : hol.type -> A : hol.type -> __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11244_1 __11244_1) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11244_1.

(; Theorem: |- ((= (Relation.subrelation _11244)) (\lambda _11244. \lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245)) _11244)) ;)

(; dict ;)

def thm_44 : B : hol.type -> A : hol.type -> __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) (Relation_2Esubrelation B A __11244_1) ((__11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11244_1)) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) (Relation_2Esubrelation B A) (__11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11244_1 __11244_1 (thm_42 B A) (thm_43 B A __11244_1).

(; Theorem: |- ((= (\lambda _11244. \lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245)) _11244)) \lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245))) ;)

(; dict ;)

def thm_45 : B : hol.type -> A : hol.type -> __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) ((__11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11244_1) (__11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2))) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) (__11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11244_1.

(; Theorem: |- ((= (Relation.subrelation _11244)) \lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245))) ;)

(; dict ;)

def thm_46 : B : hol.type -> A : hol.type -> __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) (Relation_2Esubrelation B A __11244_1) (__11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2))) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) (Relation_2Esubrelation B A __11244_1) ((__11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11244_1) (__11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2)) (thm_44 B A __11244_1) (thm_45 B A __11244_1).

(; Theorem: |- ((= _11245) _11245) ;)

(; dict ;)

def thm_47 : B : hol.type -> A : hol.type -> __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11245_1 __11245_1) :=
  B : hol.type => A : hol.type => __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11245_1.

(; Theorem: |- ((= ((Relation.subrelation _11244) _11245)) (\lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245)) _11245)) ;)

(; dict ;)

def thm_48 : B : hol.type -> A : hol.type -> __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation B A __11244_2 __11245_1) ((__11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11245_1)) :=
  B : hol.type => A : hol.type => __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) hol.bool (Relation_2Esubrelation B A __11244_2) (__11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11245_1 __11245_1 (thm_46 B A __11244_2) (thm_47 B A __11245_1).

(; Theorem: |- ((= (\lambda _11245. ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245)) _11245)) ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245))) ;)

(; dict ;)

def thm_49 : B : hol.type -> A : hol.type -> __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool ((__11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11245_1) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_1))) :=
  B : hol.type => A : hol.type => __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) hol.bool (__11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11245_1.

(; Theorem: |- ((= ((Relation.subrelation _11244) _11245)) ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245))) ;)

(; dict ;)

def thm_50 : B : hol.type -> A : hol.type -> __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation B A __11244_2 __11245_1) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_1))) :=
  B : hol.type => A : hol.type => __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS hol.bool (Relation_2Esubrelation B A __11244_2 __11245_1) ((__11245_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_3)) __11245_1) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_2) (Relation_2EtoSet B A __11245_1)) (thm_48 B A __11245_1 __11244_2) (thm_49 B A __11245_1 __11244_2).

(; Theorem: |- (Data.Bool.! \lambda _11245. ((= ((Relation.subrelation _11244) _11245)) ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245)))) ;)

(; dict ;)

def thm_51 : B : hol.type -> A : hol.type -> __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Relation_2Esubrelation B A __11244_1 __11245_2) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2)))) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_50 B A __11245_2 __11244_1.

(; Theorem: |- (Data.Bool.! \lambda _11244. (Data.Bool.! \lambda _11245. ((= ((Relation.subrelation _11244) _11245)) ((Set.subset (Relation.toSet _11244)) (Relation.toSet _11245))))) ;)

(; dict ;)

def thm_52 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (__11245_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Relation_2Esubrelation B A __11244_1 __11245_2) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A __11244_1) (Relation_2EtoSet B A __11245_2))))) :=
  B : hol.type => A : hol.type => __11244_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_51 B A __11244_1.

(; Theorem: |- ((= ((Relation.subrelation r) s)) ((Set.subset (Relation.toSet r)) (Relation.toSet s))) ;)

(; dict ;)

def thm_53 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation B A r_2 s_1) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => (B : hol.type => A : hol.type => __11245_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11244_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_52 B A __11244_2 __11245_1) B A s_1 r_2.

(; Theorem: |- ((= ((Set.subset (Relation.toSet r)) (Relation.toSet s))) ((Set.subset (Relation.toSet r)) (Relation.toSet s))) ;)

(; dict ;)

def thm_54 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)).

(; Theorem: |- ((= ((Set.subset (Relation.toSet r)) (Relation.toSet s))) ((Set.subset (Relation.toSet r)) (Relation.toSet s))) ;)

(; dict ;)

def thm_55 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.SYM hol.bool (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)) (thm_54 B A s_1 r_2).

(; Theorem: |- ((= ((Relation.subrelation r) s)) ((Set.subset (Relation.toSet r)) (Relation.toSet s))) ;)

(; dict ;)

def thm_56 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Esubrelation B A r_2 s_1) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS hol.bool (Relation_2Esubrelation B A r_2 s_1) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)) (thm_53 B A s_1 r_2) (thm_55 B A s_1 r_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) s)) ((Set.subset (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_57 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Relation_2Esubrelation B A r_1 s_2) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_1) (Relation_2EtoSet B A s_2)))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_56 B A s_2 r_1.

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) s)) ((Set.subset (Relation.toSet r)) (Relation.toSet s))))) ;)

(; dict ;)

def thm_58 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Relation_2Esubrelation B A r_1 s_2) (Set_2Esubset (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Relation_2EtoSet B A r_1) (Relation_2EtoSet B A s_2))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_57 B A r_1.

(; Theorem: |- ((= Relation.union) \lambda _11256. \lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257)))) ;)

(; dict ;)

def thm_59 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)))) (Relation_2Eunion B A) (__11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)))) (Relation_2Eunion B A).

(; Theorem: |- ((= _11256) _11256) ;)

(; dict ;)

def thm_60 : B : hol.type -> A : hol.type -> __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11256_1 __11256_1) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11256_1.

(; Theorem: |- ((= (Relation.union _11256)) (\lambda _11256. \lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257))) _11256)) ;)

(; dict ;)

def thm_61 : B : hol.type -> A : hol.type -> __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eunion B A __11256_1) ((__11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11256_1)) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eunion B A) (__11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11256_1 __11256_1 (thm_59 B A) (thm_60 B A __11256_1).

(; Theorem: |- ((= (\lambda _11256. \lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257))) _11256)) \lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257)))) ;)

(; dict ;)

def thm_62 : B : hol.type -> A : hol.type -> __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) ((__11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11256_1) (__11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2)))) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (__11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11256_1.

(; Theorem: |- ((= (Relation.union _11256)) \lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257)))) ;)

(; dict ;)

def thm_63 : B : hol.type -> A : hol.type -> __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eunion B A __11256_1) (__11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2)))) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eunion B A __11256_1) ((__11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11256_1) (__11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2))) (thm_61 B A __11256_1) (thm_62 B A __11256_1).

(; Theorem: |- ((= _11257) _11257) ;)

(; dict ;)

def thm_64 : B : hol.type -> A : hol.type -> __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11257_1 __11257_1) :=
  B : hol.type => A : hol.type => __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11257_1.

(; Theorem: |- ((= ((Relation.union _11256) _11257)) (\lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257))) _11257)) ;)

(; dict ;)

def thm_65 : B : hol.type -> A : hol.type -> __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A __11256_2 __11257_1) ((__11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11257_1)) :=
  B : hol.type => A : hol.type => __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A __11256_2) (__11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11257_1 __11257_1 (thm_63 B A __11256_2) (thm_64 B A __11257_1).

(; Theorem: |- ((= (\lambda _11257. (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257))) _11257)) (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257)))) ;)

(; dict ;)

def thm_66 : B : hol.type -> A : hol.type -> __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) ((__11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11257_1) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_1)))) :=
  B : hol.type => A : hol.type => __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)) (__11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11257_1.

(; Theorem: |- ((= ((Relation.union _11256) _11257)) (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257)))) ;)

(; dict ;)

def thm_67 : B : hol.type -> A : hol.type -> __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A __11256_2 __11257_1) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_1)))) :=
  B : hol.type => A : hol.type => __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A __11256_2 __11257_1) ((__11257_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_3))) __11257_1) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_2) (Relation_2EtoSet B A __11257_1))) (thm_65 B A __11257_1 __11256_2) (thm_66 B A __11257_1 __11256_2).

(; Theorem: |- (Data.Bool.! \lambda _11257. ((= ((Relation.union _11256) _11257)) (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257))))) ;)

(; dict ;)

def thm_68 : B : hol.type -> A : hol.type -> __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A __11256_1 __11257_2) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2))))) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_67 B A __11257_2 __11256_1.

(; Theorem: |- (Data.Bool.! \lambda _11256. (Data.Bool.! \lambda _11257. ((= ((Relation.union _11256) _11257)) (Relation.fromSet ((Set.union (Relation.toSet _11256)) (Relation.toSet _11257)))))) ;)

(; dict ;)

def thm_69 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (__11257_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A __11256_1 __11257_2) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11256_1) (Relation_2EtoSet B A __11257_2)))))) :=
  B : hol.type => A : hol.type => __11256_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_68 B A __11256_1.

(; Theorem: |- ((= ((Relation.union r) s)) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_70 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A r_2 s_1) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => (B : hol.type => A : hol.type => __11257_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11256_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_69 B A __11256_2 __11257_1) B A s_1 r_2.

(; Theorem: |- ((= (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_71 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))).

(; Theorem: |- ((= (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_72 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.SYM (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (thm_71 B A s_1 r_2).

(; Theorem: |- ((= ((Relation.union r) s)) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_73 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A r_2 s_1) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A r_2 s_1) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (thm_70 B A s_1 r_2) (thm_72 B A s_1 r_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Relation.union r) s)) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s))))) ;)

(; dict ;)

def thm_74 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A r_1 s_2) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_1) (Relation_2EtoSet B A s_2))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_73 B A s_2 r_1.

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.union r) s)) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))))) ;)

(; dict ;)

def thm_75 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eunion B A r_1 s_2) (Relation_2EfromSet B A (Set_2Eunion (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_1) (Relation_2EtoSet B A s_2)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_74 B A r_1.

(; Theorem: |- ((= Relation.intersect) \lambda _11268. \lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269)))) ;)

(; dict ;)

def thm_76 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)))) (Relation_2Eintersect B A) (__11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)))) (Relation_2Eintersect B A).

(; Theorem: |- ((= _11268) _11268) ;)

(; dict ;)

def thm_77 : B : hol.type -> A : hol.type -> __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11268_1 __11268_1) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11268_1.

(; Theorem: |- ((= (Relation.intersect _11268)) (\lambda _11268. \lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269))) _11268)) ;)

(; dict ;)

def thm_78 : B : hol.type -> A : hol.type -> __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eintersect B A __11268_1) ((__11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11268_1)) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eintersect B A) (__11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11268_1 __11268_1 (thm_76 B A) (thm_77 B A __11268_1).

(; Theorem: |- ((= (\lambda _11268. \lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269))) _11268)) \lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269)))) ;)

(; dict ;)

def thm_79 : B : hol.type -> A : hol.type -> __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) ((__11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11268_1) (__11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2)))) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (__11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11268_1.

(; Theorem: |- ((= (Relation.intersect _11268)) \lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269)))) ;)

(; dict ;)

def thm_80 : B : hol.type -> A : hol.type -> __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eintersect B A __11268_1) (__11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2)))) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool))) (Relation_2Eintersect B A __11268_1) ((__11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11268_1) (__11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2))) (thm_78 B A __11268_1) (thm_79 B A __11268_1).

(; Theorem: |- ((= _11269) _11269) ;)

(; dict ;)

def thm_81 : B : hol.type -> A : hol.type -> __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) __11269_1 __11269_1) :=
  B : hol.type => A : hol.type => __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) __11269_1.

(; Theorem: |- ((= ((Relation.intersect _11268) _11269)) (\lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269))) _11269)) ;)

(; dict ;)

def thm_82 : B : hol.type -> A : hol.type -> __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A __11268_2 __11269_1) ((__11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11269_1)) :=
  B : hol.type => A : hol.type => __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.APP_THM (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A __11268_2) (__11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11269_1 __11269_1 (thm_80 B A __11268_2) (thm_81 B A __11269_1).

(; Theorem: |- ((= (\lambda _11269. (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269))) _11269)) (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269)))) ;)

(; dict ;)

def thm_83 : B : hol.type -> A : hol.type -> __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) ((__11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11269_1) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_1)))) :=
  B : hol.type => A : hol.type => __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr B hol.bool)) (hol.arr A (hol.arr B hol.bool)) (__11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11269_1.

(; Theorem: |- ((= ((Relation.intersect _11268) _11269)) (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269)))) ;)

(; dict ;)

def thm_84 : B : hol.type -> A : hol.type -> __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A __11268_2 __11269_1) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_1)))) :=
  B : hol.type => A : hol.type => __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A __11268_2 __11269_1) ((__11269_3 : hol.term (hol.arr A (hol.arr B hol.bool)) => Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_3))) __11269_1) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_2) (Relation_2EtoSet B A __11269_1))) (thm_82 B A __11269_1 __11268_2) (thm_83 B A __11269_1 __11268_2).

(; Theorem: |- (Data.Bool.! \lambda _11269. ((= ((Relation.intersect _11268) _11269)) (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269))))) ;)

(; dict ;)

def thm_85 : B : hol.type -> A : hol.type -> __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A __11268_1 __11269_2) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2))))) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_84 B A __11269_2 __11268_1.

(; Theorem: |- (Data.Bool.! \lambda _11268. (Data.Bool.! \lambda _11269. ((= ((Relation.intersect _11268) _11269)) (Relation.fromSet ((Set.intersect (Relation.toSet _11268)) (Relation.toSet _11269)))))) ;)

(; dict ;)

def thm_86 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (__11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (__11269_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A __11268_1 __11269_2) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A __11268_1) (Relation_2EtoSet B A __11269_2)))))) :=
  B : hol.type => A : hol.type => __11268_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_85 B A __11268_1.

(; Theorem: |- ((= ((Relation.intersect r) s)) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_87 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A r_2 s_1) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => (B : hol.type => A : hol.type => __11269_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => __11268_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_86 B A __11268_2 __11269_1) B A s_1 r_2.

(; Theorem: |- ((= (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_88 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))).

(; Theorem: |- ((= (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_89 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.SYM (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (thm_88 B A s_1 r_2).

(; Theorem: |- ((= ((Relation.intersect r) s)) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))) ;)

(; dict ;)

def thm_90 : B : hol.type -> A : hol.type -> s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A r_2 s_1) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => r_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A r_2 s_1) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_2) (Relation_2EtoSet B A s_1))) (thm_87 B A s_1 r_2) (thm_89 B A s_1 r_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Relation.intersect r) s)) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s))))) ;)

(; dict ;)

def thm_91 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A r_1 s_2) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_1) (Relation_2EtoSet B A s_2))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_90 B A s_2 r_1.

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.intersect r) s)) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))))) ;)

(; dict ;)

def thm_92 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.forall (hol.arr A (hol.arr B hol.bool)) (s_2 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2Eintersect B A r_1 s_2) (Relation_2EfromSet B A (Set_2Eintersect (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Relation_2EtoSet B A r_1) (Relation_2EtoSet B A s_2)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_91 B A r_1.

(; Theorem: |- ((= Relation.bigUnion) \lambda _11280. (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) _11280)))) ;)

(; dict ;)

def thm_93 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool))) (Relation_2EbigUnion B A) (__11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_1)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool))) (Relation_2EbigUnion B A).

(; Theorem: |- ((= _11280) _11280) ;)

(; dict ;)

def thm_94 : B : hol.type -> A : hol.type -> __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (Set_2Eset (hol.arr A (hol.arr B hol.bool))) __11280_1 __11280_1) :=
  B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.REFL (Set_2Eset (hol.arr A (hol.arr B hol.bool))) __11280_1.

(; Theorem: |- ((= (Relation.bigUnion _11280)) (\lambda _11280. (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) _11280))) _11280)) ;)

(; dict ;)

def thm_95 : B : hol.type -> A : hol.type -> __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A __11280_1) ((__11280_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_2))) __11280_1)) :=
  B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.APP_THM (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A) (__11280_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_2))) __11280_1 __11280_1 (thm_93 B A) (thm_94 B A __11280_1).

(; Theorem: |- ((= (\lambda _11280. (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) _11280))) _11280)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) _11280)))) ;)

(; dict ;)

def thm_96 : B : hol.type -> A : hol.type -> __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) ((__11280_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_2))) __11280_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_1)))) :=
  B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.BETA_CONV (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool)) (__11280_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_2))) __11280_1.

(; Theorem: |- ((= (Relation.bigUnion _11280)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) _11280)))) ;)

(; dict ;)

def thm_97 : B : hol.type -> A : hol.type -> __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A __11280_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_1)))) :=
  B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A __11280_1) ((__11280_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_2))) __11280_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_1))) (thm_95 B A __11280_1) (thm_96 B A __11280_1).

(; Theorem: |- (Data.Bool.! \lambda _11280. ((= (Relation.bigUnion _11280)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) _11280))))) ;)

(; dict ;)

def thm_98 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (__11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A __11280_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11280_1))))) :=
  B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => thm_97 B A __11280_1.

(; Theorem: |- ((= (Relation.bigUnion s)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_99 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A s_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => (B : hol.type => A : hol.type => __11280_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => thm_98 B A __11280_1) B A s_1.

(; Theorem: |- ((= (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s)))) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_100 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))).

(; Theorem: |- ((= (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s)))) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_101 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.SYM (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (thm_100 B A s_1).

(; Theorem: |- ((= (Relation.bigUnion s)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_102 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A s_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A s_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (thm_99 B A s_1) (thm_101 B A s_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Relation.bigUnion s)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s))))) ;)

(; dict ;)

def thm_103 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigUnion B A s_1) (Relation_2EfromSet B A (Set_2EbigUnion (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => thm_102 B A s_1.

(; Theorem: |- ((= Relation.bigIntersect) \lambda _11285. (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) _11285)))) ;)

(; dict ;)

def thm_104 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool))) (Relation_2EbigIntersect B A) (__11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_1)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool))) (Relation_2EbigIntersect B A).

(; Theorem: |- ((= _11285) _11285) ;)

(; dict ;)

def thm_105 : B : hol.type -> A : hol.type -> __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (Set_2Eset (hol.arr A (hol.arr B hol.bool))) __11285_1 __11285_1) :=
  B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.REFL (Set_2Eset (hol.arr A (hol.arr B hol.bool))) __11285_1.

(; Theorem: |- ((= (Relation.bigIntersect _11285)) (\lambda _11285. (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) _11285))) _11285)) ;)

(; dict ;)

def thm_106 : B : hol.type -> A : hol.type -> __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A __11285_1) ((__11285_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_2))) __11285_1)) :=
  B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.APP_THM (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A) (__11285_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_2))) __11285_1 __11285_1 (thm_104 B A) (thm_105 B A __11285_1).

(; Theorem: |- ((= (\lambda _11285. (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) _11285))) _11285)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) _11285)))) ;)

(; dict ;)

def thm_107 : B : hol.type -> A : hol.type -> __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) ((__11285_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_2))) __11285_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_1)))) :=
  B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.BETA_CONV (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (hol.arr A (hol.arr B hol.bool)) (__11285_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_2))) __11285_1.

(; Theorem: |- ((= (Relation.bigIntersect _11285)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) _11285)))) ;)

(; dict ;)

def thm_108 : B : hol.type -> A : hol.type -> __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A __11285_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_1)))) :=
  B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A __11285_1) ((__11285_2 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_2))) __11285_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_1))) (thm_106 B A __11285_1) (thm_107 B A __11285_1).

(; Theorem: |- (Data.Bool.! \lambda _11285. ((= (Relation.bigIntersect _11285)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) _11285))))) ;)

(; dict ;)

def thm_109 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (__11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A __11285_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) __11285_1))))) :=
  B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => thm_108 B A __11285_1.

(; Theorem: |- ((= (Relation.bigIntersect s)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_110 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A s_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => (B : hol.type => A : hol.type => __11285_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => thm_109 B A __11285_1) B A s_1.

(; Theorem: |- ((= (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s)))) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_111 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.REFL (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))).

(; Theorem: |- ((= (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s)))) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_112 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.SYM (hol.arr A (hol.arr B hol.bool)) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (thm_111 B A s_1).

(; Theorem: |- ((= (Relation.bigIntersect s)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s)))) ;)

(; dict ;)

def thm_113 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) -> hol.proof (hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A s_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.TRANS (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A s_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))) (thm_110 B A s_1) (thm_112 B A s_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Relation.bigIntersect s)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s))))) ;)

(; dict ;)

def thm_114 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => hol.eq (hol.arr A (hol.arr B hol.bool)) (Relation_2EbigIntersect B A s_1) (Relation_2EfromSet B A (Set_2EbigIntersect (hol.arr (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Eimage (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) (Set_2Eset (Data_2EPair_2E_2A A B))) (hol.arr (Set_2Eset (hol.arr A (hol.arr B hol.bool))) (Set_2Eset (Set_2Eset (Data_2EPair_2E_2A A B))))) (Relation_2EtoSet B A) s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (hol.arr A (hol.arr B hol.bool))) => thm_113 B A s_1.

(; Theorem: |- ((= Relation.reflexive) \lambda _11290. (Data.Bool.! \lambda x. ((_11290 x) x))) ;)

(; dict ;)

def thm_115 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Ereflexive A) (__11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_2 : hol.term A => __11290_1 x_2 x_2))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Ereflexive A).

(; Theorem: |- ((= _11290) _11290) ;)

(; dict ;)

def thm_116 : A : hol.type -> __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) __11290_1 __11290_1) :=
  A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A (hol.arr A hol.bool)) __11290_1.

(; Theorem: |- ((= (Relation.reflexive _11290)) (\lambda _11290. (Data.Bool.! \lambda x. ((_11290 x) x)) _11290)) ;)

(; dict ;)

def thm_117 : A : hol.type -> __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Ereflexive A __11290_1) ((__11290_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => __11290_2 x_3 x_3)) __11290_1)) :=
  A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr A (hol.arr A hol.bool)) hol.bool (Relation_2Ereflexive A) (__11290_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => __11290_2 x_3 x_3)) __11290_1 __11290_1 (thm_115 A) (thm_116 A __11290_1).

(; Theorem: |- ((= (\lambda _11290. (Data.Bool.! \lambda x. ((_11290 x) x)) _11290)) (Data.Bool.! \lambda x. ((_11290 x) x))) ;)

(; dict ;)

def thm_118 : A : hol.type -> __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((__11290_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => __11290_2 x_3 x_3)) __11290_1) (hol.forall A (x_2 : hol.term A => __11290_1 x_2 x_2))) :=
  A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr A hol.bool)) hol.bool (__11290_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => __11290_2 x_3 x_3)) __11290_1.

(; Theorem: |- ((= (Relation.reflexive _11290)) (Data.Bool.! \lambda x. ((_11290 x) x))) ;)

(; dict ;)

def thm_119 : A : hol.type -> __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Ereflexive A __11290_1) (hol.forall A (x_2 : hol.term A => __11290_1 x_2 x_2))) :=
  A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (Relation_2Ereflexive A __11290_1) ((__11290_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => __11290_2 x_3 x_3)) __11290_1) (hol.forall A (x_2 : hol.term A => __11290_1 x_2 x_2)) (thm_117 A __11290_1) (thm_118 A __11290_1).

(; Theorem: |- (Data.Bool.! \lambda _11290. ((= (Relation.reflexive _11290)) (Data.Bool.! \lambda x. ((_11290 x) x)))) ;)

(; dict ;)

def thm_120 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (__11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Ereflexive A __11290_1) (hol.forall A (x_2 : hol.term A => __11290_1 x_2 x_2)))) :=
  A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_119 A __11290_1.

(; Theorem: |- ((= (Relation.reflexive r)) (Data.Bool.! \lambda x. ((r x) x))) ;)

(; dict ;)

def thm_121 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Ereflexive A r_1) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => __11290_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_120 A __11290_1) A r_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((r x) x))) (Data.Bool.! \lambda x. ((r x) x))) ;)

(; dict ;)

def thm_122 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((r x) x))) (Data.Bool.! \lambda x. ((r x) x))) ;)

(; dict ;)

def thm_123 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM hol.bool (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)) (thm_122 A r_1).

(; Theorem: |- ((= (Relation.reflexive r)) (Data.Bool.! \lambda x. ((r x) x))) ;)

(; dict ;)

def thm_124 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Ereflexive A r_1) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (Relation_2Ereflexive A r_1) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)) (thm_121 A r_1) (thm_123 A r_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.reflexive r)) (Data.Bool.! \lambda x. ((r x) x)))) ;)

(; dict ;)

def thm_125 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Ereflexive A r_1) (hol.forall A (x_2 : hol.term A => r_1 x_2 x_2)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_124 A r_1.

(; Theorem: |- ((= Relation.irreflexive) \lambda _11295. (Data.Bool.! \lambda x. (Data.Bool.~ ((_11295 x) x)))) ;)

(; dict ;)

def thm_126 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Eirreflexive A) (__11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_2 : hol.term A => hol.not (__11295_1 x_2 x_2)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Eirreflexive A).

(; Theorem: |- ((= _11295) _11295) ;)

(; dict ;)

def thm_127 : A : hol.type -> __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) __11295_1 __11295_1) :=
  A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A (hol.arr A hol.bool)) __11295_1.

(; Theorem: |- ((= (Relation.irreflexive _11295)) (\lambda _11295. (Data.Bool.! \lambda x. (Data.Bool.~ ((_11295 x) x))) _11295)) ;)

(; dict ;)

def thm_128 : A : hol.type -> __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Eirreflexive A __11295_1) ((__11295_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.not (__11295_2 x_3 x_3))) __11295_1)) :=
  A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr A (hol.arr A hol.bool)) hol.bool (Relation_2Eirreflexive A) (__11295_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.not (__11295_2 x_3 x_3))) __11295_1 __11295_1 (thm_126 A) (thm_127 A __11295_1).

(; Theorem: |- ((= (\lambda _11295. (Data.Bool.! \lambda x. (Data.Bool.~ ((_11295 x) x))) _11295)) (Data.Bool.! \lambda x. (Data.Bool.~ ((_11295 x) x)))) ;)

(; dict ;)

def thm_129 : A : hol.type -> __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((__11295_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.not (__11295_2 x_3 x_3))) __11295_1) (hol.forall A (x_2 : hol.term A => hol.not (__11295_1 x_2 x_2)))) :=
  A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr A hol.bool)) hol.bool (__11295_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.not (__11295_2 x_3 x_3))) __11295_1.

(; Theorem: |- ((= (Relation.irreflexive _11295)) (Data.Bool.! \lambda x. (Data.Bool.~ ((_11295 x) x)))) ;)

(; dict ;)

def thm_130 : A : hol.type -> __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Eirreflexive A __11295_1) (hol.forall A (x_2 : hol.term A => hol.not (__11295_1 x_2 x_2)))) :=
  A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (Relation_2Eirreflexive A __11295_1) ((__11295_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.not (__11295_2 x_3 x_3))) __11295_1) (hol.forall A (x_2 : hol.term A => hol.not (__11295_1 x_2 x_2))) (thm_128 A __11295_1) (thm_129 A __11295_1).

(; Theorem: |- (Data.Bool.! \lambda _11295. ((= (Relation.irreflexive _11295)) (Data.Bool.! \lambda x. (Data.Bool.~ ((_11295 x) x))))) ;)

(; dict ;)

def thm_131 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (__11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Eirreflexive A __11295_1) (hol.forall A (x_2 : hol.term A => hol.not (__11295_1 x_2 x_2))))) :=
  A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_130 A __11295_1.

(; Theorem: |- ((= (Relation.irreflexive r)) (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ;)

(; dict ;)

def thm_132 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Eirreflexive A r_1) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => __11295_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_131 A __11295_1) A r_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ;)

(; dict ;)

def thm_133 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ;)

(; dict ;)

def thm_134 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM hol.bool (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (thm_133 A r_1).

(; Theorem: |- ((= (Relation.irreflexive r)) (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ;)

(; dict ;)

def thm_135 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Eirreflexive A r_1) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2)))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (Relation_2Eirreflexive A r_1) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))) (thm_132 A r_1) (thm_134 A r_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.irreflexive r)) (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x))))) ;)

(; dict ;)

def thm_136 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Eirreflexive A r_1) (hol.forall A (x_2 : hol.term A => hol.not (r_1 x_2 x_2))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_135 A r_1.

(; Theorem: |- ((= Relation.transitive) \lambda _11300. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((_11300 x) y)) ((_11300 y) z))) ((_11300 x) z)))))) ;)

(; dict ;)

def thm_137 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Etransitive A) (__11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (__11300_1 x_2 y_3) (__11300_1 y_3 z_4)) (__11300_1 x_2 z_4)))))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Etransitive A).

(; Theorem: |- ((= _11300) _11300) ;)

(; dict ;)

def thm_138 : A : hol.type -> __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) __11300_1 __11300_1) :=
  A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A (hol.arr A hol.bool)) __11300_1.

(; Theorem: |- ((= (Relation.transitive _11300)) (\lambda _11300. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((_11300 x) y)) ((_11300 y) z))) ((_11300 x) z))))) _11300)) ;)

(; dict ;)

def thm_139 : A : hol.type -> __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive A __11300_1) ((__11300_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (__11300_2 x_3 y_4) (__11300_2 y_4 z_5)) (__11300_2 x_3 z_5))))) __11300_1)) :=
  A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr A (hol.arr A hol.bool)) hol.bool (Relation_2Etransitive A) (__11300_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (__11300_2 x_3 y_4) (__11300_2 y_4 z_5)) (__11300_2 x_3 z_5))))) __11300_1 __11300_1 (thm_137 A) (thm_138 A __11300_1).

(; Theorem: |- ((= (\lambda _11300. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((_11300 x) y)) ((_11300 y) z))) ((_11300 x) z))))) _11300)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((_11300 x) y)) ((_11300 y) z))) ((_11300 x) z)))))) ;)

(; dict ;)

def thm_140 : A : hol.type -> __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool ((__11300_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (__11300_2 x_3 y_4) (__11300_2 y_4 z_5)) (__11300_2 x_3 z_5))))) __11300_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (__11300_1 x_2 y_3) (__11300_1 y_3 z_4)) (__11300_1 x_2 z_4)))))) :=
  A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr A hol.bool)) hol.bool (__11300_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (__11300_2 x_3 y_4) (__11300_2 y_4 z_5)) (__11300_2 x_3 z_5))))) __11300_1.

(; Theorem: |- ((= (Relation.transitive _11300)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((_11300 x) y)) ((_11300 y) z))) ((_11300 x) z)))))) ;)

(; dict ;)

def thm_141 : A : hol.type -> __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive A __11300_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (__11300_1 x_2 y_3) (__11300_1 y_3 z_4)) (__11300_1 x_2 z_4)))))) :=
  A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (Relation_2Etransitive A __11300_1) ((__11300_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (__11300_2 x_3 y_4) (__11300_2 y_4 z_5)) (__11300_2 x_3 z_5))))) __11300_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (__11300_1 x_2 y_3) (__11300_1 y_3 z_4)) (__11300_1 x_2 z_4))))) (thm_139 A __11300_1) (thm_140 A __11300_1).

(; Theorem: |- (Data.Bool.! \lambda _11300. ((= (Relation.transitive _11300)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((_11300 x) y)) ((_11300 y) z))) ((_11300 x) z))))))) ;)

(; dict ;)

def thm_142 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (__11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Etransitive A __11300_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (__11300_1 x_2 y_3) (__11300_1 y_3 z_4)) (__11300_1 x_2 z_4))))))) :=
  A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_141 A __11300_1.

(; Theorem: |- ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ;)

(; dict ;)

def thm_143 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive A r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => __11300_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_142 A __11300_1) A r_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ;)

(; dict ;)

def thm_144 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ;)

(; dict ;)

def thm_145 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (thm_144 A r_1).

(; Theorem: |- ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) ;)

(; dict ;)

def thm_146 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Relation_2Etransitive A r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4)))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS hol.bool (Relation_2Etransitive A r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))) (thm_143 A r_1) (thm_145 A r_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))))) ;)

(; dict ;)

def thm_147 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq hol.bool (Relation_2Etransitive A r_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (r_1 x_2 y_3) (r_1 y_3 z_4)) (r_1 x_2 z_4))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_146 A r_1.

(; Theorem: |- ((= Relation.transitiveClosure) \lambda _11305. (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation _11305) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_148 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr A (hol.arr A hol.bool))) (Relation_2EtransitiveClosure A) (__11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A __11305_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr A hol.bool)) (hol.arr A (hol.arr A hol.bool))) (Relation_2EtransitiveClosure A).

(; Theorem: |- ((= _11305) _11305) ;)

(; dict ;)

def thm_149 : A : hol.type -> __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) __11305_1 __11305_1) :=
  A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A (hol.arr A hol.bool)) __11305_1.

(; Theorem: |- ((= (Relation.transitiveClosure _11305)) (\lambda _11305. (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation _11305) s)) (Relation.transitive s)))))) _11305)) ;)

(; dict ;)

def thm_150 : A : hol.type -> __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A __11305_1) ((__11305_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_3 s_4) (hol.and (Relation_2Esubrelation A A __11305_2 s_4) (Relation_2Etransitive A s_4)))))) __11305_1)) :=
  A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.APP_THM (hol.arr A (hol.arr A hol.bool)) (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A) (__11305_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_3 s_4) (hol.and (Relation_2Esubrelation A A __11305_2 s_4) (Relation_2Etransitive A s_4)))))) __11305_1 __11305_1 (thm_148 A) (thm_149 A __11305_1).

(; Theorem: |- ((= (\lambda _11305. (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation _11305) s)) (Relation.transitive s)))))) _11305)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation _11305) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_151 : A : hol.type -> __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) ((__11305_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_3 s_4) (hol.and (Relation_2Esubrelation A A __11305_2 s_4) (Relation_2Etransitive A s_4)))))) __11305_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A __11305_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.BETA_CONV (hol.arr A (hol.arr A hol.bool)) (hol.arr A (hol.arr A hol.bool)) (__11305_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_3 s_4) (hol.and (Relation_2Esubrelation A A __11305_2 s_4) (Relation_2Etransitive A s_4)))))) __11305_1.

(; Theorem: |- ((= (Relation.transitiveClosure _11305)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation _11305) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_152 : A : hol.type -> __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A __11305_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A __11305_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A __11305_1) ((__11305_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_4 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_3 s_4) (hol.and (Relation_2Esubrelation A A __11305_2 s_4) (Relation_2Etransitive A s_4)))))) __11305_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A __11305_1 s_3) (Relation_2Etransitive A s_3)))))) (thm_150 A __11305_1) (thm_151 A __11305_1).

(; Theorem: |- (Data.Bool.! \lambda _11305. ((= (Relation.transitiveClosure _11305)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation _11305) s)) (Relation.transitive s)))))))) ;)

(; dict ;)

def thm_153 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (__11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A __11305_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A __11305_1 s_3) (Relation_2Etransitive A s_3)))))))) :=
  A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_152 A __11305_1.

(; Theorem: |- ((= (Relation.transitiveClosure r)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_154 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A r_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => (A : hol.type => __11305_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_153 A __11305_1) A r_1.

(; Theorem: |- ((= (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))))))) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_155 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.REFL (hol.arr A (hol.arr A hol.bool)) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))).

(; Theorem: |- ((= (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))))))) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_156 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.SYM (hol.arr A (hol.arr A hol.bool)) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))) (thm_155 A r_1).

(; Theorem: |- ((= (Relation.transitiveClosure r)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))))))) ;)

(; dict ;)

def thm_157 : A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A r_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.TRANS (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A r_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))) (thm_154 A r_1) (thm_156 A r_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.transitiveClosure r)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s)))))))) ;)

(; dict ;)

def thm_158 : A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr A hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2EtransitiveClosure A r_1) (Relation_2EbigIntersect A A (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Set_2Eset (hol.arr A (hol.arr A hol.bool)))) (v_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) hol.bool) (s_3 : hol.term (hol.arr A (hol.arr A hol.bool)) => hol.and (hol.eq (hol.arr A (hol.arr A hol.bool)) v_2 s_3) (hol.and (Relation_2Esubrelation A A r_1 s_3) (Relation_2Etransitive A s_3)))))))) :=
  A : hol.type => r_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_157 A r_1.
