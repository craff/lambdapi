
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dfold_2Dthm.

Set_2Eset : hol.type -> hol.type.

Set_2Efold : A : hol.type -> hol.term A.

Set_2E_7B_7D : A : hol.type -> hol.term A.

Set_2Efinite : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

Set_2Edelete : A : hol.type -> hol.term A.

Set_2Einsert : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_1 : hol.proof hol.true.

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_3 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_4 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_5 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_8 : hol.proof (hol.eq hol.bool hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1))).

(; axiom ;)

thm_9 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not (p_1 : hol.term hol.bool => hol.imp p_1 hol.false)).

(; axiom ;)

thm_10 : A : hol.type -> hol.proof (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1))).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))))).

(; axiom ;)

thm_14 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false).

(; axiom ;)

thm_15 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true).

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 y_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 y_3))))))).

(; axiom ;)

thm_17 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_21 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_22 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_23 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_24 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_25 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_26 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or (hol.eq hol.bool t_1 hol.true) (hol.eq hol.bool t_1 hol.false))).

(; axiom ;)

thm_27 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2)))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))).

(; axiom ;)

thm_30 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or t_1 (hol.not t_1))).

(; axiom ;)

thm_31 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))).

(; axiom ;)

thm_32 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2))))).

(; axiom ;)

thm_33 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3))))).

(; axiom ;)

thm_34 : A : hol.type -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_1 (q_2 x_3))) (hol.imp p_1 (hol.forall A (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_35 : A : hol.type -> hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; axiom ;)

thm_37 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_3)) (hol.or (hol.eq A x_1 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3)))))).

(; axiom ;)

thm_38 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.true t_1) hol.true)).

(; axiom ;)

thm_39 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.true) hol.true)).

(; axiom ;)

thm_40 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.false t_1) t_1)).

(; axiom ;)

thm_41 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.false) t_1)).

(; axiom ;)

thm_42 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 t_1) t_1)).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_43 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A (hol.arr B B)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr B B))) (hol.forall (hol.arr A (hol.arr B B)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A (hol.arr B B)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr B B))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) ;)

(; dict ;)

def thm_44 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) ;)

(; dict ;)

def thm_45 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (thm_44 B A) (thm_44 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))))) ;)

(; dict ;)

def thm_46 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A (hol.arr B B)) hol.bool) hol.bool (hol.forall (hol.arr A (hol.arr B B))) (hol.forall (hol.arr A (hol.arr B B))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (thm_43 B A) (thm_45 B A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_47 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B) (hol.forall B)) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))) \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))) ;)

(; dict ;)

def thm_48 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))) \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))) ;)

(; dict ;)

def thm_49 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS (hol.arr B hol.bool) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (thm_48 A B f_1) (thm_48 A B f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) ;)

(; dict ;)

def thm_50 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) (thm_47 B) (thm_49 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_51 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))) ;)

(; dict ;)

def thm_52 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) => thm_51 A B f_2 hyp_1 b_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_53 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_54 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_55 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_53 q_1 p_2) (thm_54 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_56 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_57 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_58 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_56 p_1) (thm_57 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_59 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_60 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_0 (thm_59 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_61 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_58 p_1) (thm_60 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_62 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_63 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_61 p_2) (thm_62 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_64 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_55 q_1 p_2) (thm_63 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_65 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_66 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_64 q_1 p_2) (thm_65 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_67 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_66 q_1 p_2 hyp_1 p_2.

(; Theorem: |- p ;)

(; dict ;)

def thm_68 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_69 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_70 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_68 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_69 q_1 hyp_2).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_71 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_70 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_72 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_71 p_2 q_1 hyp_1 hyp_2) (thm_69 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_73 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_72 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_74 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_73 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_75 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_67 q_1 p_2 hyp_1 (thm_74 q_1 p_2).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) b) ;)

(; dict ;)

def thm_76 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) hyp_1.

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) b) ;)

(; dict ;)

def thm_77 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) => hol.PROVE_HYP (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (thm_52 A B b_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) => thm_76 A B b_1 f_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_78 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_66 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_79 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_70 q_2 p_1 hyp_1 hyp_2) (thm_68 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_80 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_79 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_81 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_80 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_82 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_78 q_2 p_1 hyp_1 (thm_81 q_2 p_1).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ;)

(; dict ;)

def thm_83 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ;)

(; dict ;)

def thm_84 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) => hol.PROVE_HYP (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) (thm_52 A B b_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) => thm_83 B A b_1 f_2 hyp_2).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) b) ;)

(; dict ;)

def thm_85 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ;)

(; dict ;)

def thm_86 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => hyp_1.

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_87 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_88 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr B hol.bool)) (hol.eq B) (hol.eq B)) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr B hol.bool)) (hol.eq B).

(; Theorem: |- ((= (= (((Set.fold f) b) Set.{}))) (= b)) ;)

(; dict ;)

def thm_89 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_1)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1 (thm_88 B) (thm_85 A B b_1 f_2 hyp_1).

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_90 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq B b_1 b_1) :=
  B : hol.type => b_1 : hol.term B => hol.REFL B b_1.

(; Theorem: |- ((= ((= (((Set.fold f) b) Set.{})) b)) ((= b) b)) ;)

(; dict ;)

def thm_91 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.eq B b_1 b_1)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_1) b_1 b_1 (thm_89 A B b_1 f_2 hyp_1) (thm_90 B b_1).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_92 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_93 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_92 A x_1) (thm_92 A x_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_94 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_95 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_96 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_95 A) (thm_95 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_97 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_94 A) (thm_96 A).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_98 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_99 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_98 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_100 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_99 t_1 hyp_1) thm_1.

(; Theorem: |- t ;)

(; dict ;)

def thm_101 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_102 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_101 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_1).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_103 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_100 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_102 t_1 hyp_1).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_104 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_103 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_105 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_2 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_106 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_104 A x_1) (thm_105 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_107 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_92 A x_1) (thm_106 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_108 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_1 x_1) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_93 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_97 A) (thm_107 A) x_1)) B x_1.

(; Theorem: |- ((= ((= b) b)) Data.Bool.T) ;)

(; dict ;)

def thm_109 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B b_1 b_1) hol.true) :=
  B : hol.type => b_1 : hol.term B => (B : hol.type => x_1 : hol.term B => thm_108 B x_1) B b_1.

(; Theorem: |- ((= ((= (((Set.fold f) b) Set.{})) b)) Data.Bool.T) ;)

(; dict ;)

def thm_110 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) hol.true) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.TRANS hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.eq B b_1 b_1) hol.true (thm_91 A B b_1 f_2 hyp_1) (thm_109 B b_1).

(; Theorem: |- ((= (Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_111 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1)) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) hol.true thm_87 (thm_110 A B b_1 f_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_112 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) ;)

(; dict ;)

def thm_113 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (hol.and hol.true (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1)) (hol.and hol.true) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (thm_111 A B b_1 f_2 hyp_1) (thm_112 B A b_1 f_2).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_114 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_115 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_114 t_1) (thm_114 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_116 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_117 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_118 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_117 thm_117.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_119 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_116 thm_118.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_120 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_3 t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_121 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_64 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_122 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_123 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_122 x_2 q_3 p_1 hyp_2 (thm_68 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_124 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_123 p_2 x_3 q_1 hyp_1 hyp_3 (thm_69 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_125 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_124 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_126 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_125 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_127 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_121 q_1 p_2) (thm_126 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_128 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_127 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_129 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_130 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_114 t_1) (thm_120 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_129 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_131 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_132 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_131 t_1) (thm_131 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_133 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_4 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_134 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_135 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_132 t_1) (thm_133 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_134 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_136 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_137 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_136 t_1) (thm_136 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_138 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_5 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_139 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_140 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_137 t_1) (thm_138 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_139 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_141 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_142 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_141 t_1) (thm_141 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_143 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_144 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_145 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_142 t_1) (thm_143 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_144 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_146 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_147 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_146 t_1) (thm_146 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_148 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_149 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_145 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_147 t_1) (thm_148 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_150 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_140 t_1) (thm_149 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_151 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_135 t_1) (thm_150 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_152 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_130 t_1) (thm_151 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_153 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_152 t_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_154 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_155 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_119 thm_153 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_154 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_156 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_115 t_1) (thm_155 t_1)) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_157 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.TRANS hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (hol.and hol.true (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (thm_113 A B b_1 f_2 hyp_1) (thm_156 B A b_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) ;)

(; dict ;)

def thm_158 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.SYM hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (thm_157 A B b_1 f_2 hyp_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_159 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_160 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_161 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_160 B A x_1 b_2 f_3) (thm_160 B A x_1 b_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))) ;)

(; dict ;)

def thm_162 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_159 A) (thm_161 B A x_1 b_2 f_3).

(; Theorem: |- ((= (Data.Bool.==> (Set.finite s))) (Data.Bool.==> (Set.finite s))) ;)

(; dict ;)

def thm_163 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= (= (((Set.fold f) b) s))) (= (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_164 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1)).

(; Theorem: |- ((= Data.Bool.cond) Data.Bool.cond) ;)

(; dict ;)

def thm_165 : B : hol.type -> hol.proof (hol.eq (hol.arr hol.bool (hol.arr B (hol.arr B B))) (hol.cond B) (hol.cond B)) :=
  B : hol.type => hol.REFL (hol.arr hol.bool (hol.arr B (hol.arr B B))) (hol.cond B).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.F)) ((= ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_166 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.F)) ((= ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_167 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (thm_166 A s_1 x_2) (thm_166 A s_1 x_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_168 : hyp_1 : hol.proof hol.false -> hol.proof hol.false :=
  hyp_1 : hol.proof hol.false => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. p) ;)

(; dict ;)

def thm_169 : hyp_1 : hol.proof hol.false -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) :=
  hyp_1 : hol.proof hol.false => hol.EQ_MP hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) thm_8 (thm_168 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_170 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof hol.false -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_169 hyp_1 P_1.

(; Theorem: |- ((Data.Bool.==> Data.Bool.F) P) ;)

(; dict ;)

def thm_171 : P_1 : hol.term hol.bool -> hol.proof (hol.imp hol.false P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_170 P_1 hyp_1.

(; Theorem: |- ((= (= (Data.Bool.~ P))) (= (Data.Bool.~ P))) ;)

(; dict ;)

def thm_172 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_173 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1.

(; Theorem: |- ((= ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P))) ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F))) ;)

(; dict ;)

def thm_174 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false))) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1)) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false) (thm_172 P_1) (thm_173 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_175 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ;)

(; dict ;)

def thm_176 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1 P_1 thm_9 (thm_175 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_177 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) (thm_174 P_1) (thm_176 P_1).

(; Theorem: |- (Data.Bool.~ P) ;)

(; dict ;)

def thm_178 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.not P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> P) Data.Bool.F) ;)

(; dict ;)

def thm_179 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.imp P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.EQ_MP (hol.not P_1) (hol.imp P_1 hol.false) ((P_1 : hol.term hol.bool => thm_177 P_1) P_1) (thm_178 P_1 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_180 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_181 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.not P_1) -> hol.proof hol.false :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.not P_1) => thm_179 P_1 hyp_2 (thm_180 P_1 hyp_1).

(; Theorem: |- ((= P) Data.Bool.F) ;)

(; dict ;)

def thm_182 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.eq hol.bool P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.PROP_EXT P_1 hol.false (hyp_2 : hol.proof hol.false => thm_171 P_1 (thm_168 hyp_2)) (hyp_2 : hol.proof P_1 => thm_181 P_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ P)) ((= P) Data.Bool.F)) ;)

(; dict ;)

def thm_183 : P_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.not P_1) (hol.eq hol.bool P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => thm_182 P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_184 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (P_1 : hol.term hol.bool => thm_183 P_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- (Data.Bool.~ ((Set.member x) s)) ;)

(; dict ;)

def thm_185 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hyp_1.

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.F) ;)

(; dict ;)

def thm_186 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => thm_184 A s_1 x_2 (thm_185 A s_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.cond ((Set.member x) s))) (Data.Bool.cond Data.Bool.F)) ;)

(; dict ;)

def thm_187 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq (hol.arr B (hol.arr B B)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.cond B hol.false)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.APP_THM hol.bool (hol.arr B (hol.arr B B)) (hol.cond B) (hol.cond B) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false (thm_165 B) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (thm_167 A s_1 x_2) (thm_186 A s_1 x_2 hyp_1)).

(; Theorem: |- ((= ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_188 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))) (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => x_3 : hol.term A => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))).

(; Theorem: |- ((= ((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((Data.Bool.cond Data.Bool.F) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_189 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (hol.cond B hol.false (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.APP_THM B (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.cond B hol.false) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (thm_187 A B s_3 x_4 hyp_1) (thm_188 A B s_3 b_1 x_4 f_2).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ;)

(; dict ;)

def thm_190 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) (((Data.Bool.cond Data.Bool.F) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_191 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.false (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.APP_THM B B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (hol.cond B hol.false (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (thm_189 A B b_1 f_2 s_3 x_4 hyp_1) (thm_190 A B x_4 s_3 b_1 f_2).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_192 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.REFL hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_193 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.TRANS hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (thm_192 A t2_1 t1_2) (thm_192 A t2_1 t1_2).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_194 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_195 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (thm_194 A) (thm_194 A).

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))))) ;)

(; dict ;)

def thm_196 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (thm_94 A) (thm_195 A).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_197 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) :=
  A : hol.type => t1_1 : hol.term A => hol.REFL (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_198 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) :=
  A : hol.type => t1_1 : hol.term A => hol.TRANS (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (thm_197 A t1_1) (thm_197 A t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_199 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => t1_1 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (thm_94 A) (thm_198 A t1_1).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ;)

(; dict ;)

def thm_200 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.REFL hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ;)

(; dict ;)

def thm_201 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.TRANS hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (thm_200 A t2_1 t1_2) (thm_200 A t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ;)

(; dict ;)

def thm_202 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1)) :=
  A : hol.type => t1_1 : hol.term A => thm_10 A t1_1.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1) ;)

(; dict ;)

def thm_203 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => thm_202 A t1_2 t2_1.

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_204 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1))) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hyp_1 : hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) hyp_1.

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_205 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1))) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.PROVE_HYP (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1))) ((A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (thm_201 A t2_1 t1_2) (thm_203 A t2_1 t1_2)) A t2_1 t1_2) (hyp_1 : hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) => thm_204 A t2_1 t1_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_206 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) :=
  A : hol.type => t1_1 : hol.term A => thm_11 A t1_1.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2) ;)

(; dict ;)

def thm_207 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => thm_206 A t1_2 t2_1.

(; Theorem: |- ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_208 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) (thm_205 A t2_1 t1_2) ((A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (thm_192 A t2_1 t1_2) (thm_207 A t2_1 t1_2)) A t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_209 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) :=
  A : hol.type => t1_1 : hol.term A => t2_2 : hol.term A => thm_208 A t2_2 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_210 : A : hol.type -> hol.proof (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => t1_1 : hol.term A => hol.EQ_MP (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (thm_199 A t1_1) (thm_209 A t1_1).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2) ;)

(; dict ;)

def thm_211 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) -> hol.proof (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) hyp_1.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2) ;)

(; dict ;)

def thm_212 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.PROVE_HYP (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.EQ_MP (hol.forall A (t1_3 : hol.term A => hol.forall A (t2_4 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_3 t2_4) t1_3) (hol.eq A (hol.cond A hol.false t1_3 t2_4) t2_4)))) (hol.forall A (t1_3 : hol.term A => hol.forall A (t2_4 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_3 t2_4) t1_3) (hol.eq A (hol.cond A hol.false t1_3 t2_4) t2_4)))) (thm_196 A) (thm_210 A) t1_2 t2_1) (hyp_1 : hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) => thm_211 A t2_1 t1_2 hyp_1).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2) ;)

(; dict ;)

def thm_213 : B : hol.type -> t2_1 : hol.term B -> t1_2 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.false t1_2 t2_1) t2_1) :=
  B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => (A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (thm_193 A t2_1 t1_2) (thm_212 A t2_1 t1_2)) B t2_1 t1_2.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))) ;)

(; dict ;)

def thm_214 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (hol.cond B hol.false (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => x_3 : hol.term A => f_4 : hol.term (hol.arr A (hol.arr B B)) => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_213 B t2_1 t1_2) B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3)) (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))) ;)

(; dict ;)

def thm_215 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.TRANS B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.false (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (thm_191 A B b_1 f_2 s_3 x_4 hyp_1) (thm_214 A B s_3 b_1 x_4 f_2).

(; Theorem: |- ((= ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_216 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) (thm_164 A B s_2 b_3 f_4) (thm_215 A B b_3 f_4 s_2 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_217 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (thm_163 A s_4) (thm_216 A B x_1 s_4 b_2 f_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Set.fold f) b) ((Set.delete s) x))))) ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_218 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hol.SYM hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) (thm_217 B A x_1 b_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= ((Set.fold f) b)) ((Set.fold f) b)) ;)

(; dict ;)

def thm_219 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) B) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr (Set_2Eset A) B) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= y) x))) ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_220 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= y) x))) ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_221 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_220 A y_1 x_2) (thm_220 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_222 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_223 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) => thm_222 A hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_224 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) -> hol.proof (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => thm_223 A x_2 hyp_1 y_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_225 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hyp_1.

(; Theorem: |- ((= y) x) ;)

(; dict ;)

def thm_226 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) -> hyp_2 : hol.proof (hol.eq A x_1 y_2) -> hol.proof (hol.eq A y_2 x_1) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => hyp_2 : hol.proof (hol.eq A x_1 y_2) => thm_224 A y_2 x_1 hyp_1 (thm_225 A y_2 x_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))))) ((= y) x)) ;)

(; dict ;)

def thm_227 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_1 y_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) (hol.eq A y_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_1 y_2) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => thm_226 A x_1 y_2 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_228 : A : hol.type -> y_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) => x_2 : hol.term A => hyp_2 : hol.proof (hol.eq A x_2 y_1) => thm_227 A x_2 y_1 hyp_2 (thm_222 A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_229 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) -> hol.proof (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => y_1 : hol.term A => thm_228 A y_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))))) ;)

(; dict ;)

def thm_230 : A : hol.type -> hol.proof (hol.imp (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => thm_229 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_231 : A : hol.type -> hol.proof (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)))) :=
  A : hol.type => thm_230 A (thm_12 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_232 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => thm_231 A y_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_233 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_232 A y_1 x_2.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_234 : A : hol.type -> y_1 : hol.term (Set_2Eset A) -> x_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.eq (Set_2Eset A) x_2 y_1) (hol.eq (Set_2Eset A) y_1 x_2)) :=
  A : hol.type => y_1 : hol.term (Set_2Eset A) => x_2 : hol.term (Set_2Eset A) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_221 A y_1 x_2) (thm_233 A y_1 x_2)) (Set_2Eset A) y_1 x_2.

(; Theorem: |- ((Data.Bool.==> ((= ((Set.delete s) x)) s)) ((= s) ((Set.delete s) x))) ;)

(; dict ;)

def thm_235 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.eq (Set_2Eset A) s_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => (A : hol.type => y_1 : hol.term (Set_2Eset A) => x_2 : hol.term (Set_2Eset A) => thm_234 A y_1 x_2) A s_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1).

(; Theorem: |- ((= ((= ((= ((Set.delete s) x)) s)) (Data.Bool.~ ((Set.member x) s)))) ((= ((= ((Set.delete s) x)) s)) (Data.Bool.~ ((Set.member x) s)))) ;)

(; dict ;)

def thm_236 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)))) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))).

(; Theorem: |- ((= ((= ((= ((Set.delete s) x)) s)) (Data.Bool.~ ((Set.member x) s)))) ((= ((= ((Set.delete s) x)) s)) (Data.Bool.~ ((Set.member x) s)))) ;)

(; dict ;)

def thm_237 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)))) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (thm_236 A x_1 s_2) (thm_236 A x_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((= ((Set.delete s) x)) s)) (Data.Bool.~ ((Set.member x) s)))) ;)

(; dict ;)

def thm_238 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)))) :=
  A : hol.type => x_1 : hol.term A => thm_13 A x_1.

(; Theorem: |- ((= ((= ((Set.delete s) x)) s)) (Data.Bool.~ ((Set.member x) s))) ;)

(; dict ;)

def thm_239 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => thm_238 A x_1 s_2.

(; Theorem: |- ((= Data.Bool.~) Data.Bool.~) ;)

(; dict ;)

def thm_240 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not hol.not) :=
  hol.REFL (hol.arr hol.bool hol.bool) hol.not.

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) s))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_241 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false thm_240 (thm_186 A s_1 x_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_242 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_243 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_242 thm_242.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ;)

(; dict ;)

def thm_244 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ;)

(; dict ;)

def thm_245 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) thm_244 thm_244.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_246 : hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_247 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.PROVE_HYP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.EQ_MP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) thm_245 thm_14) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => thm_246 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_248 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) thm_247 (hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_242 thm_15).

(; Theorem: |- ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_249 : hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) -> hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true) :=
  hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_250 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true) :=
  hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_248 (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) => thm_249 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_251 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.TRANS hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not hol.false) hol.true (thm_241 A s_1 x_2 hyp_1) (hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_243 thm_250).

(; Theorem: |- ((= ((= ((Set.delete s) x)) s)) Data.Bool.T) ;)

(; dict ;)

def thm_252 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) hol.true) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.TRANS hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) hol.true ((A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) (thm_237 A x_1 s_2) (thm_239 A x_1 s_2)) A x_1 s_2) (thm_251 A s_2 x_1 hyp_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Set.delete s) x)) s)) ;)

(; dict ;)

def thm_253 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (hol.eq hol.bool hol.true (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.SYM hol.bool (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) hol.true (thm_252 A x_1 s_2 hyp_1).

(; Theorem: |- ((= ((Set.delete s) x)) s) ;)

(; dict ;)

def thm_254 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.EQ_MP hol.true (hol.eq (Set_2Eset A) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) s_2) (thm_253 A x_1 s_2 hyp_1) thm_1.

(; Theorem: |- ((= s) ((Set.delete s) x)) ;)

(; dict ;)

def thm_255 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => thm_235 A x_1 s_2 (thm_254 A x_1 s_2 hyp_1).

(; Theorem: |- ((= (((Set.fold f) b) s)) (((Set.fold f) b) ((Set.delete s) x))) ;)

(; dict ;)

def thm_256 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.APP_THM (Set_2Eset A) B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3) s_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1) (thm_219 B A b_3 f_4) (thm_255 A x_1 s_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_257 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => thm_256 A B x_1 s_4 b_2 f_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_258 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_218 B A x_1 b_2 f_3 s_4 hyp_1) (thm_257 B A x_1 b_2 f_3 s_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_259 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => thm_258 B A x_4 b_1 f_2 s_3 hyp_1.

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_260 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_261 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_260 A s_1 x_2) (thm_260 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) s)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_262 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_103 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_263 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_1.

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_264 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_262 A s_1 x_2) (thm_263 A s_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.cond ((Set.member x) s))) (Data.Bool.cond Data.Bool.T)) ;)

(; dict ;)

def thm_265 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq (hol.arr B (hol.arr B B)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.cond B hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM hol.bool (hol.arr B (hol.arr B B)) (hol.cond B) (hol.cond B) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true (thm_165 B) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_261 A s_1 x_2) (thm_264 A s_1 x_2 hyp_1)).

(; Theorem: |- ((= ((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((Data.Bool.cond Data.Bool.T) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_266 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (hol.cond B hol.true (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.APP_THM B (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.cond B hol.true) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (thm_265 A B s_3 x_4 hyp_1) (thm_188 A B s_3 b_1 x_4 f_2).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) (((Data.Bool.cond Data.Bool.T) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_267 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.true (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.APP_THM B B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (hol.cond B hol.true (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (thm_266 A B b_1 f_2 s_3 x_4 hyp_1) (thm_190 A B x_4 s_3 b_1 f_2).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1) ;)

(; dict ;)

def thm_268 : B : hol.type -> t2_1 : hol.term B -> t1_2 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.true t1_2 t2_1) t1_2) :=
  B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => (A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => thm_203 A t2_1 t1_2) B t2_1 t1_2.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_269 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (hol.cond B hol.true (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))) (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => x_3 : hol.term A => f_4 : hol.term (hol.arr A (hol.arr B B)) => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_268 B t2_1 t1_2) B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3)) (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_3))).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_270 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.TRANS B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.true (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (thm_267 A B b_1 f_2 s_3 x_4 hyp_1) (thm_269 A B s_3 b_1 x_4 f_2).

(; Theorem: |- ((= ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_271 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (thm_164 A B s_2 b_3 f_4) (thm_270 A B b_3 f_4 s_2 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_272 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))) (thm_163 A s_4) (thm_271 A B x_1 s_4 b_2 f_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_273 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.SYM hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_272 B A x_1 b_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_274 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= (= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x))))) (= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_275 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y))))) ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_276 : A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1))))) :=
  A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y))))) ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_277 : A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1))))) :=
  A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (thm_276 A y_1 s_2 x_3) (thm_276 A y_1 s_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_278 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 y_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_16 A s_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_279 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.forall A (y_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 y_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 y_3))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => thm_278 A s_1 x_2.

(; Theorem: |- ((= ((Set.member x) ((Set.delete s) y))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_280 : A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => thm_279 A s_2 x_3 y_1.

(; Theorem: |- ((= ((Set.member x) ((Set.delete s) x))) ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) x)))) ;)

(; dict ;)

def thm_281 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 x_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => (A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.not (hol.eq A x_3 y_1)))) (thm_277 A y_1 s_2 x_3) (thm_280 A y_1 s_2 x_3)) A y_1 s_2 x_3) A x_2 s_1 x_2.

(; Theorem: |- ((= (Data.Bool./\ ((Set.member x) s))) (Data.Bool./\ ((Set.member x) s))) ;)

(; dict ;)

def thm_282 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)).

(; Theorem: |- ((= (Data.Bool.~ ((= x) x))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_283 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_1 x_1)) (hol.not hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq A x_1 x_1) hol.true thm_240 (thm_106 A x_1).

(; Theorem: |- ((= (Data.Bool.~ ((= x) x))) Data.Bool.F) ;)

(; dict ;)

def thm_284 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_1 x_1)) hol.false) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.not (hol.eq A x_1 x_1)) (hol.not hol.true) hol.false (thm_283 A x_1) thm_14.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) x)))) ((Data.Bool./\ ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_285 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 x_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq A x_2 x_2)) hol.false (thm_282 A s_1 x_2) (thm_284 A x_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_286 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_143 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) (Data.Bool.~ ((= x) x)))) Data.Bool.F) ;)

(; dict ;)

def thm_287 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 x_2))) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 x_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) hol.false (thm_285 A s_1 x_2) (thm_286 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) ((Set.delete s) x))) Data.Bool.F) ;)

(; dict ;)

def thm_288 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (hol.eq A x_2 x_2))) hol.false (thm_281 A s_1 x_2) (thm_287 A s_1 x_2).

(; Theorem: |- ((= (Data.Bool.cond ((Set.member x) ((Set.delete s) x)))) (Data.Bool.cond Data.Bool.F)) ;)

(; dict ;)

def thm_289 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr B (hol.arr B B)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B hol.false)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.APP_THM hol.bool (hol.arr B (hol.arr B B)) (hol.cond B) (hol.cond B) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) hol.false (thm_165 B) (thm_288 A s_1 x_2).

(; Theorem: |- ((= ((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x)))) ((Data.Bool.cond Data.Bool.F) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_290 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM B (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.false) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (thm_289 A B s_3 x_4) (thm_190 A B x_4 s_3 b_1 f_2).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) (((Data.Bool.cond Data.Bool.F) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_291 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM B B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (thm_290 A B b_1 f_2 s_3 x_4) (thm_188 A B s_3 b_1 x_4 f_2).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_292 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_213 B t2_1 t1_2) B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_293 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (thm_291 A B b_1 f_2 s_3 x_4) (thm_292 A B x_4 s_3 b_1 f_2).

(; Theorem: |- ((= ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_294 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (thm_275 A B s_1 x_2 b_3 f_4) (thm_293 A B b_3 f_4 s_1 x_2).

(; Theorem: |- ((= (Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))))) (Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_295 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) thm_274 (thm_294 A B s_1 x_2 b_3 f_4).

(; Theorem: |- ((= ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_296 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_297 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (thm_295 A B s_1 x_2 b_3 f_4) (thm_296 A B x_2 s_1 b_3 f_4).

(; Theorem: |- ((= ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_298 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.SYM hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (thm_297 A B s_1 x_2 b_3 f_4).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_299 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_300 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_299 y_1 x_2) (thm_299 y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_301 : hyp_1 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) -> hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_302 : x_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_2 : hol.term hol.bool => hol.forall hol.bool (y_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_2 y_3) (hol.imp x_2 y_3)))) -> hol.proof (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_2 : hol.term hol.bool => hol.forall hol.bool (y_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_2 y_3) (hol.imp x_2 y_3)))) => thm_301 hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_303 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) => thm_302 x_2 hyp_1 y_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_304 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 y_1) -> hol.proof (hol.eq hol.bool x_2 y_1) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 y_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> x) y) ;)

(; dict ;)

def thm_305 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) -> hyp_2 : hol.proof (hol.eq hol.bool x_2 y_1) -> hol.proof (hol.imp x_2 y_1) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) => hyp_2 : hol.proof (hol.eq hol.bool x_2 y_1) => thm_303 y_1 x_2 hyp_1 (thm_304 y_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))))) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_306 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 y_1) -> hol.proof (hol.imp (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 y_1) => hyp_2 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) => thm_305 y_1 x_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))))) ;)

(; dict ;)

def thm_307 : hol.proof (hol.imp (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) => x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hyp_2 : hol.proof (hol.eq hol.bool x_1 y_2) => thm_306 y_2 x_1 hyp_2 (thm_301 hyp_1).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_308 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_309 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) thm_308 thm_308.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))))) ;)

(; dict ;)

def thm_310 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) thm_116 thm_309.

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_311 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_312 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (thm_311 x_1) (thm_311 x_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_313 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  x_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) thm_116 (thm_312 x_1).

(; Theorem: |- ((= (= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x))) (= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x))) ;)

(; dict ;)

def thm_314 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1)) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1)).

(; Theorem: |- ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) Data.Bool.F)) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ;)

(; dict ;)

def thm_315 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__10147_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_2 y_1) (hol.imp __10147_2 y_1)) hol.false) (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1))) :=
  y_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__10147_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_2 y_1) (hol.imp __10147_2 y_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x)) (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) Data.Bool.F))) ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x)) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y)))) ;)

(; dict ;)

def thm_316 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) hol.false)) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1)) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1)) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) hol.false) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)) (thm_314 x_1 y_2) (thm_315 y_2).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_317 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x)) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_318 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1.

(; Theorem: |- ((= (= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x))) (= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_319 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) thm_317 (thm_318 x_1 y_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ;)

(; dict ;)

def thm_320 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1))) :=
  y_1 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)).

(; Theorem: |- ((= ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x)) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y)))) ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y)))) ;)

(; dict ;)

def thm_321 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2))) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)) (thm_319 x_1 y_2) (thm_320 y_2).

(; Theorem: |- ((= ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x)) (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) Data.Bool.F))) ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y)))) ;)

(; dict ;)

def thm_322 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) hol.false)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) hol.false)) (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2))) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2))) (thm_316 x_1 y_2) (thm_321 x_1 y_2).

(; Theorem: |- ((= \lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y))) \lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y))) ;)

(; dict ;)

def thm_323 : y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__10147_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_2 y_1) (hol.imp __10147_2 y_1)) (__10147_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_2 y_1) (hol.imp __10147_2 y_1))) :=
  y_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__10147_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_2 y_1) (hol.imp __10147_2 y_1)).

(; Theorem: |- ((= x) Data.Bool.F) ;)

(; dict ;)

def thm_324 : x_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool x_1 hol.false) :=
  x_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) x)) (\lambda _10147. ((Data.Bool.==> ((= _10147) y)) ((Data.Bool.==> _10147) y)) Data.Bool.F)) ;)

(; dict ;)

def thm_325 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) hol.false)) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.APP_THM hol.bool hol.bool (__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) (__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_2) (hol.imp __10147_3 y_2)) x_1 hol.false (thm_323 y_2) (thm_324 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ;)

(; dict ;)

def thm_326 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_1) (hol.imp __10147_3 y_1)) x_2) ((__10147_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10147_3 y_1) (hol.imp __10147_3 y_1)) hol.false)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1))) (thm_322 x_2 y_1) (thm_325 x_2 y_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_327 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.false y_2) (hol.imp hol.false y_2)) (thm_326 y_2 x_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_328 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_329 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_328 t_1) (thm_328 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_330 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_331 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_330 thm_330.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_332 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_116 thm_331.

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_333 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_334 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_333 t_1) (thm_333 t_1).

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_335 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_17 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_336 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_337 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_334 t_1) (thm_335 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_336 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_338 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_339 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_338 t_1) (thm_338 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_340 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_341 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_342 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_339 t_1) (thm_340 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_341 t_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_343 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_344 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_345 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_328 t_1) (thm_343 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_344 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_346 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_347 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_346 t_1) (thm_346 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_348 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_20 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_349 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_345 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_347 t_1) (thm_348 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_350 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_342 t_1) (thm_349 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_351 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_337 t_1) (thm_350 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_352 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_351 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_353 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_354 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_332 thm_352 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_353 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_355 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_356 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_354 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => thm_355 t_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_357 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_358 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_356 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => thm_357 t_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.F) y)) (Data.Bool.~ y)) ;)

(; dict ;)

def thm_359 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false y_1) (hol.not y_1)) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_329 t_1) (thm_358 t_1)) y_1.

(; Theorem: |- ((= (Data.Bool.==> ((= Data.Bool.F) y))) (Data.Bool.==> (Data.Bool.~ y))) ;)

(; dict ;)

def thm_360 : y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool hol.false y_1)) (hol.imp (hol.not y_1))) :=
  y_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool hol.false y_1) (hol.not y_1) thm_274 (thm_359 y_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_361 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_362 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_361 t_1) (thm_361 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_363 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_364 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_363 thm_363.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_365 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_116 thm_364.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_366 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_367 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_366 t_1) (thm_366 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_368 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_21 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_369 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_370 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_367 t_1) (thm_368 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_369 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_371 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_372 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_371 t_1) (thm_371 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_373 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_22 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_374 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_375 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_372 t_1) (thm_373 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_374 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_376 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_23 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_377 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_378 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_361 t_1) (thm_376 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_377 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_379 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_380 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_379 t_1) (thm_379 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_381 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_382 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_381 thm_381.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_383 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_116 thm_382.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_384 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_103 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_385 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_24 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_386 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_384 t_1) (thm_385 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_387 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_317 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_379 t_1) (thm_386 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_388 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_389 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_387 t_1) thm_388.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_390 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_389 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_391 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_390 t_1) thm_388.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_392 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_393 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_380 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_383 thm_391 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_392 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_394 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_395 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_394 t_1) (thm_394 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_396 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_25 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_397 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_393 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_395 t_1) (thm_396 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_398 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_378 t_1) (thm_397 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_399 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_375 t_1) (thm_398 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_400 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_370 t_1) (thm_399 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_401 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_400 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_402 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_403 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_365 thm_401 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_402 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_404 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_405 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_403 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_404 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_406 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_407 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_405 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => thm_406 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) y)) Data.Bool.T) ;)

(; dict ;)

def thm_408 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false y_1) hol.true) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_362 t_1) (thm_407 t_1)) y_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ((Data.Bool.==> (Data.Bool.~ y)) Data.Bool.T)) ;)

(; dict ;)

def thm_409 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) (hol.imp (hol.not y_1) hol.true)) :=
  y_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool hol.false y_1)) (hol.imp (hol.not y_1)) (hol.imp hol.false y_1) hol.true (thm_360 y_1) (thm_408 y_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ y)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_410 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not y_1) hol.true) hol.true) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_373 t_1) (hol.not y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) Data.Bool.T) ;)

(; dict ;)

def thm_411 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) hol.true) :=
  y_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) (hol.imp (hol.not y_1) hol.true) hol.true (thm_409 y_1) (thm_410 y_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y))) ;)

(; dict ;)

def thm_412 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1))) :=
  y_1 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) hol.true (thm_411 y_1).

(; Theorem: |- ((Data.Bool.==> ((= Data.Bool.F) y)) ((Data.Bool.==> Data.Bool.F) y)) ;)

(; dict ;)

def thm_413 : y_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) :=
  y_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) (thm_412 y_1) thm_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_414 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => hol.EQ_MP (hol.imp (hol.eq hol.bool hol.false y_1) (hol.imp hol.false y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_327 x_2 y_1 hyp_1) (thm_413 y_1).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.F)) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_415 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => thm_414 y_1 x_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x))) (= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x))) ;)

(; dict ;)

def thm_416 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1)) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1)).

(; Theorem: |- ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) Data.Bool.T)) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ;)

(; dict ;)

def thm_417 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__10145_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_2 y_1) (hol.imp __10145_2 y_1)) hol.true) (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1))) :=
  y_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__10145_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_2 y_1) (hol.imp __10145_2 y_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x)) (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) Data.Bool.T))) ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x)) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y)))) ;)

(; dict ;)

def thm_418 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) hol.true)) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1)) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1)) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) hol.true) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)) (thm_416 x_1 y_2) (thm_417 y_2).

(; Theorem: |- ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x)) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_419 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1.

(; Theorem: |- ((= (= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x))) (= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_420 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) thm_317 (thm_419 x_1 y_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ;)

(; dict ;)

def thm_421 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1))) :=
  y_1 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)).

(; Theorem: |- ((= ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x)) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y)))) ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y)))) ;)

(; dict ;)

def thm_422 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2))) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)) (thm_420 x_1 y_2) (thm_421 y_2).

(; Theorem: |- ((= ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x)) (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) Data.Bool.T))) ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y)))) ;)

(; dict ;)

def thm_423 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) hol.true)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) hol.true)) (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2))) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2))) (thm_418 x_1 y_2) (thm_422 x_1 y_2).

(; Theorem: |- ((= \lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y))) \lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y))) ;)

(; dict ;)

def thm_424 : y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__10145_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_2 y_1) (hol.imp __10145_2 y_1)) (__10145_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_2 y_1) (hol.imp __10145_2 y_1))) :=
  y_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__10145_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_2 y_1) (hol.imp __10145_2 y_1)).

(; Theorem: |- ((= x) Data.Bool.T) ;)

(; dict ;)

def thm_425 : x_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool x_1 hol.true) :=
  x_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) x)) (\lambda _10145. ((Data.Bool.==> ((= _10145) y)) ((Data.Bool.==> _10145) y)) Data.Bool.T)) ;)

(; dict ;)

def thm_426 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) hol.true)) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.APP_THM hol.bool hol.bool (__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) (__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_2) (hol.imp __10145_3 y_2)) x_1 hol.true (thm_424 y_2) (thm_425 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ;)

(; dict ;)

def thm_427 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_1) (hol.imp __10145_3 y_1)) x_2) ((__10145_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool __10145_3 y_1) (hol.imp __10145_3 y_1)) hol.true)) (hol.eq hol.bool (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1))) (thm_423 x_2 y_1) (thm_426 x_2 y_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_428 : x_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool hol.true y_2) (hol.imp hol.true y_2)) (thm_427 y_2 x_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.T) y)) y) ;)

(; dict ;)

def thm_429 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true y_1) y_1) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_335 t_1) y_1.

(; Theorem: |- ((= (Data.Bool.==> ((= Data.Bool.T) y))) (Data.Bool.==> y)) ;)

(; dict ;)

def thm_430 : y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool hol.true y_1)) (hol.imp y_1)) :=
  y_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool hol.true y_1) y_1 thm_274 (thm_429 y_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) y)) y) ;)

(; dict ;)

def thm_431 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true y_1) y_1) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_368 t_1) y_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ((Data.Bool.==> y) y)) ;)

(; dict ;)

def thm_432 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) (hol.imp y_1 y_1)) :=
  y_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool hol.true y_1)) (hol.imp y_1) (hol.imp hol.true y_1) y_1 (thm_430 y_1) (thm_431 y_1).

(; Theorem: |- ((= ((Data.Bool.==> y) y)) Data.Bool.T) ;)

(; dict ;)

def thm_433 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp y_1 y_1) hol.true) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_386 t_1) y_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) Data.Bool.T) ;)

(; dict ;)

def thm_434 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) hol.true) :=
  y_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) (hol.imp y_1 y_1) hol.true (thm_432 y_1) (thm_433 y_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y))) ;)

(; dict ;)

def thm_435 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1))) :=
  y_1 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) hol.true (thm_434 y_1).

(; Theorem: |- ((Data.Bool.==> ((= Data.Bool.T) y)) ((Data.Bool.==> Data.Bool.T) y)) ;)

(; dict ;)

def thm_436 : y_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) :=
  y_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) (thm_435 y_1) thm_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_437 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => hol.EQ_MP (hol.imp (hol.eq hol.bool hol.true y_1) (hol.imp hol.true y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_428 x_2 y_1 hyp_1) (thm_436 y_1).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.T)) ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_438 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => thm_437 y_1 x_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= x) Data.Bool.T)) ((= x) Data.Bool.F)) ;)

(; dict ;)

def thm_439 : x_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool x_1 hol.true) (hol.eq hol.bool x_1 hol.false)) :=
  x_1 : hol.term hol.bool => thm_26 x_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_440 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_441 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_442 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_440 Q_1 P_2) (thm_441 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_443 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_444 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_445 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_443 P_1) (thm_444 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_446 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_27 (thm_175 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_447 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_445 P_1) (thm_446 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_448 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_449 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_447 P_2) (thm_448 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_450 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_442 Q_1 P_2) (thm_449 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_451 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_452 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_450 Q_1 P_2) (thm_451 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_453 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_452 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_454 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_455 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_453 Q_3 R_2 P_1 hyp_2 (thm_454 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_456 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_457 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_455 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_456 R_3 Q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_458 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_457 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool x_2 hol.false) (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_459 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_439 x_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) => thm_458 y_1 x_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_460 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_438 y_1 x_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => thm_459 y_1 x_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)) ;)

(; dict ;)

def thm_461 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_415 y_1 x_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1))) => thm_460 y_1 x_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y))) ;)

(; dict ;)

def thm_462 : x_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (thm_299 y_2 x_1) (hol.EQ_MP (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)) (thm_299 y_2 x_1) (thm_461 y_2 x_1)).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((Data.Bool.==> x) y)))) ;)

(; dict ;)

def thm_463 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2)))) :=
  x_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_1 y_2) (hol.imp x_1 y_2))) (thm_313 x_1) (thm_462 x_1).

(; Theorem: |- ((Data.Bool.==> ((= ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_464 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (hol.imp (hol.eq hol.bool x_2 y_1) (hol.imp x_2 y_1)) (thm_300 y_1 x_2) (thm_307 (hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool x_3 y_4) (hol.imp x_3 y_4)))) thm_310 thm_463) x_2 y_1)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))) ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))) ;)

(; dict ;)

def thm_465 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))) ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))) ;)

(; dict ;)

def thm_466 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (thm_465 A s_1 x_2) (thm_465 A s_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s)))) ;)

(; dict ;)

def thm_467 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2)))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))) ;)

(; dict ;)

def thm_468 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_2)) s_3)))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_2)) s_3)))) => thm_467 A hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s)) ;)

(; dict ;)

def thm_469 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) s_4)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) s_4)))) => thm_468 A x_2 hyp_1 s_1.

(; Theorem: |- ((= ((Set.insert x) ((Set.delete s) x))) s) ;)

(; dict ;)

def thm_470 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) s_4)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) s_4)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_469 A s_1 x_2 hyp_1 (thm_263 A s_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))))) ((= ((Set.insert x) ((Set.delete s) x))) s)) ;)

(; dict ;)

def thm_471 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) s_4)))) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) s_4)))) => thm_470 A s_1 x_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))))) ;)

(; dict ;)

def thm_472 : A : hol.type -> hol.proof (hol.imp (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2)))) (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2)))) => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_471 A s_2 x_1 hyp_2 (thm_467 A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s))) ;)

(; dict ;)

def thm_473 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) s_2))) :=
  A : hol.type => x_1 : hol.term A => thm_472 A (thm_28 A) x_1.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((= ((Set.insert x) ((Set.delete s) x))) s)) ;)

(; dict ;)

def thm_474 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => thm_473 A x_2 s_1.

(; Theorem: |- ((= ((Set.insert x) ((Set.delete s) x))) s) ;)

(; dict ;)

def thm_475 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1)) (thm_466 A s_1 x_2) (thm_474 A s_1 x_2)) A s_1 x_2 (thm_263 A s_1 x_2 hyp_1).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Set.fold f) b) s)) ;)

(; dict ;)

def thm_476 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM (Set_2Eset A) B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) s_1 (thm_219 B A b_3 f_4) (thm_475 A s_1 x_2 hyp_1).

(; Theorem: |- ((= (= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x))))) (= (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_477 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (thm_88 B) (thm_476 A B s_1 x_2 b_3 f_4 hyp_1).

(; Theorem: |- ((= ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_478 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (thm_477 A B s_1 x_2 b_3 f_4 hyp_1) (thm_188 A B s_1 b_3 x_2 f_4).

(; Theorem: |- ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_479 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_464 A B s_1 x_2 b_3 f_4 (thm_478 A B s_1 x_2 b_3 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x)))))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_480 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (thm_298 A B s_1 x_2 b_3 f_4) (thm_479 A B s_1 x_2 b_3 f_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ;)

(; dict ;)

def thm_481 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ;)

(; dict ;)

def thm_482 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (thm_481 B A b_1 f_2 s_3) (thm_481 B A b_1 f_2 s_3).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ;)

(; dict ;)

def thm_483 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))) => thm_86 B A b_2 f_3 hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))) ;)

(; dict ;)

def thm_484 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6))))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6))))))) => thm_483 B A x_1 b_2 f_3 hyp_1 s_4.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_485 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_1.

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_486 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_6) (f_4 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_6))))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_6) (f_4 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_6))))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_484 B A x_2 b_3 f_4 s_1 hyp_1 (thm_485 A s_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))) ;)

(; dict ;)

def thm_487 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_1)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => x_4 : hol.term A => thm_486 A B s_1 x_4 b_2 f_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ;)

(; dict ;)

def thm_488 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5))))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5))))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) => thm_487 B A s_3 b_1 f_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) ;)

(; dict ;)

def thm_489 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => s_3 : hol.term (Set_2Eset A) => thm_488 B A b_1 f_2 s_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))) ;)

(; dict ;)

def thm_490 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => thm_489 B A b_1 f_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.delete s) x))) (Data.Bool.! \lambda x_1. ((= (((Set.fold f) b) ((Set.insert x_1) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x_1) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x_1) (((Set.fold f) b) ((Set.delete s) x))))))) ;)

(; dict ;)

def thm_491 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> x_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6) (f_2 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6))))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) (hol.forall A (x__1_5 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)) (f_2 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => x_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6) (f_2 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6))))))) => (B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5))))))) => (B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_5))))))) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall A (x_4 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))))) (thm_482 B A b_1 f_2 s_3) (thm_490 B A b_1 f_2 (thm_86 B A b_1 f_2 hyp_1) s_3)) B A b_1 f_2 s_3 hyp_1) B A b_1 f_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))) ;)

(; dict ;)

def thm_492 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) -> hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) => hyp_1.

(; Theorem: |- (Set.finite ((Set.delete s) x)) ;)

(; dict ;)

def thm_493 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))) => thm_492 A s_2 hyp_1 x_1.

(; Theorem: |- (Data.Bool.! \lambda x_1. ((= (((Set.fold f) b) ((Set.insert x_1) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x_1) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x_1) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_494 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_5))) -> hol.proof (hol.forall A (x__1_5 : hol.term A => hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_5))) => thm_491 B A b_3 f_4 x_1 s_2 hyp_1 (thm_493 A x_1 s_2 hyp_2).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) ((Set.delete s) x)))) (((Data.Bool.cond ((Set.member x) ((Set.delete s) x))) (((Set.fold f) b) ((Set.delete s) x))) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_495 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_5))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_5))) => thm_494 B A x_2 s_1 b_3 f_4 hyp_1 hyp_2 x_2.

(; Theorem: |- ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_496 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_5))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_5))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_480 A B s_2 x_1 b_3 f_4 hyp_3 (thm_495 A B s_2 x_1 b_3 f_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x)))) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_497 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_5))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_5))) => thm_496 A B x_1 s_4 b_2 f_3 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))))) ;)

(; dict ;)

def thm_498 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))))) ;)

(; dict ;)

def thm_499 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (thm_498 A s_1) (thm_498 A s_1).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.delete s) x))))) ;)

(; dict ;)

def thm_500 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.delete s) x)))) ;)

(; dict ;)

def thm_501 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))))) => thm_500 A hyp_1 s_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.delete s) x))) ;)

(; dict ;)

def thm_502 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) => thm_501 A s_2 hyp_1 x_1.

(; Theorem: |- (Set.finite ((Set.delete s) x)) ;)

(; dict ;)

def thm_503 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_502 A x_1 s_2 hyp_1 (thm_485 A s_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))) ;)

(; dict ;)

def thm_504 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => x_2 : hol.term A => thm_503 A x_2 s_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x)))) ;)

(; dict ;)

def thm_505 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_3))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_504 A s_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))))) ;)

(; dict ;)

def thm_506 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) => s_1 : hol.term (Set_2Eset A) => thm_505 A s_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.delete s) x)))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_507 : A : hol.type -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall A (x_2 : hol.term A => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) => thm_506 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))))) ;)

(; dict ;)

def thm_508 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))))) :=
  A : hol.type => thm_507 A (thm_29 A).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x)))) ;)

(; dict ;)

def thm_509 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_508 A s_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Set.finite ((Set.delete s) x))) ;)

(; dict ;)

def thm_510 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.forall A (x_2 : hol.term A => Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_1 x_2)))) (thm_499 A s_1) (thm_509 A s_1)) A s_1 (thm_485 A s_1 hyp_1).

(; Theorem: |- ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) ;)

(; dict ;)

def thm_511 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6) (f_4 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s__1_6))))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_497 B A x_1 b_3 f_4 s_2 hyp_1 hyp_3 (thm_510 A s_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_512 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => thm_511 A B x_1 s_4 b_2 f_3 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_513 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_273 B A x_1 b_2 f_3 s_4 hyp_2) (thm_512 B A x_1 b_2 f_3 s_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_514 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6) (f_2 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6))))))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_3 x_4)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6) (f_2 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_6))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_513 B A x_4 b_1 f_2 s_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.\/ ((Set.member x) s)) (Data.Bool.~ ((Set.member x) s))) ;)

(; dict ;)

def thm_515 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => thm_30 (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_516 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) -> hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) -> hyp_3 : hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => hyp_3 : hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_457 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_517 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) -> hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => hol.PROVE_HYP (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_515 A s_4 x_1) (hyp_3 : hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4))) => thm_516 B A x_1 b_2 f_3 s_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_518 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) -> hyp_2 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) => hyp_2 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => hol.PROVE_HYP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_514 B A b_2 f_3 s_4 x_1 hyp_1) (hyp_3 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => thm_517 B A x_1 b_2 f_3 s_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))) ;)

(; dict ;)

def thm_519 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall (Set_2Eset A) (s__1_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_5 s__1_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s__1_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6) (f_3 x__1_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_6))))))) => hol.PROVE_HYP (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))))) (thm_259 B A b_2 f_3 s_4 x_1) (hyp_2 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) => thm_518 B A x_1 b_2 f_3 s_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))) ;)

(; dict ;)

def thm_520 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall (Set_2Eset A) (s__1_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_4 s__1_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s__1_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_5) (f_3 x__1_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_5))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall (Set_2Eset A) (s__1_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_4 s__1_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s__1_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_5) (f_3 x__1_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s__1_5))))))) => s_4 : hol.term (Set_2Eset A) => thm_519 B A x_1 b_2 f_3 s_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))) ;)

(; dict ;)

def thm_521 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_3 : hol.term A => hol.forall (Set_2Eset A) (s__1_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_3 s__1_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_3 s__1_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4) (f_2 x__1_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_3 : hol.term A => hol.forall (Set_2Eset A) (s__1_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_3 s__1_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_3 s__1_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4) (f_2 x__1_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4))))))) => x_3 : hol.term A => hol.EQ_MP (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))) (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))) (thm_162 B A x_3 b_1 f_2) (thm_520 B A x_3 b_1 f_2 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_522 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x__1_3 : hol.term A => hol.forall (Set_2Eset A) (s__1_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_3 s__1_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_3 s__1_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4) (f_2 x__1_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4))))))) -> hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x__1_3 : hol.term A => hol.forall (Set_2Eset A) (s__1_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s__1_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x__1_3 s__1_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_3 s__1_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4) (f_2 x__1_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s__1_4))))))) => hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (thm_158 B A b_1 f_2 hyp_2) (hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))) (thm_112 B A b_1 f_2) (thm_521 B A b_1 f_2 hyp_1)).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_523 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) -> hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.PROVE_HYP (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (thm_86 B A b_1 f_2 hyp_1) (hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => thm_522 A B b_1 f_2 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_524 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) -> hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.PROVE_HYP (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (thm_85 A B b_1 f_2 hyp_2) (hyp_3 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => thm_523 A B b_1 f_2 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_525 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) -> hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) => hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => hol.PROVE_HYP (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (thm_84 B A b_1 f_2 hyp_1) (hyp_3 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))) => thm_524 A B b_1 f_2 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_526 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) => hol.PROVE_HYP (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) (thm_77 A B b_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) => thm_525 A B b_1 f_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) ;)

(; dict ;)

def thm_527 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))) => thm_526 A B b_1 f_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ;)

(; dict ;)

def thm_528 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ;)

(; dict ;)

def thm_529 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (thm_528 B A f_1) (thm_528 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ;)

(; dict ;)

def thm_530 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ;)

(; dict ;)

def thm_531 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))))) => thm_530 B A hyp_1 f_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_532 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_4 : hol.term B => hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6))))))))))) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_4 : hol.term B => hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6))))))))))) => thm_531 A B f_2 hyp_1 b_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))) ;)

(; dict ;)

def thm_533 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))) ;)

(; dict ;)

def thm_534 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) -> hyp_2 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_4 : hol.term B => hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6))))))))))) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => hyp_2 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_4 : hol.term B => hol.imp (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_6))))))))))) => thm_532 B A b_1 f_2 hyp_2 (thm_533 B A f_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_535 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hyp_2 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => hyp_2 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))))) => b_2 : hol.term B => thm_534 A B b_2 f_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ;)

(; dict ;)

def thm_536 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))))) -> hol.proof (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_5))))))))))) => hyp_2 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => thm_535 A B f_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ;)

(; dict ;)

def thm_537 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) => f_1 : hol.term (hol.arr A (hol.arr B B)) => thm_536 B A f_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))))) (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))))) ;)

(; dict ;)

def thm_538 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) => thm_537 B A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) ;)

(; dict ;)

def thm_539 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))))) :=
  B : hol.type => A : hol.type => thm_538 B A (thm_31 B A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ;)

(; dict ;)

def thm_540 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => thm_539 B A f_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_541 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall B (b_2 : hol.term B => hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) (thm_529 B A f_1) (thm_540 B A f_1)) B A f_1 (thm_533 B A f_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))) ;)

(; dict ;)

def thm_542 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => thm_527 A B b_1 f_2 (thm_541 A B f_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))) ;)

(; dict ;)

def thm_543 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => thm_542 A B b_1 f_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x)))))))))) ;)

(; dict ;)

def thm_544 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => thm_543 B A b_2 f_1.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) ;)

(; dict ;)

def thm_545 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3)))))))))) (thm_50 A B f_1) (thm_544 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) s)) (((Data.Bool.cond ((Set.member x) s)) ((f x) (((Set.fold f) b) ((Set.delete s) x)))) (((Set.fold f) b) ((Set.delete s) x))))))))))) ;)

(; thm ;)

def thm_546 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Edelete (hol.arr (Set_2Eset A) (hol.arr A (Set_2Eset A))) s_4 x_3))))))))))) (thm_46 B A) (thm_545 B A).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_547 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_548 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (thm_547 B A) (thm_547 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))))) ;)

(; dict ;)

def thm_549 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A (hol.arr B B)) hol.bool) hol.bool (hol.forall (hol.arr A (hol.arr B B))) (hol.forall (hol.arr A (hol.arr B B))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (thm_43 B A) (thm_548 B A).

(; Theorem: |- ((= \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_550 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))).

(; Theorem: |- ((= \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_551 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS (hol.arr (hol.arr A (hol.arr B B)) hol.bool) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (thm_550 B A f_1) (thm_550 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_552 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (hol.arr A (hol.arr B B)) hol.bool) hol.bool (hol.forall (hol.arr A (hol.arr B B))) (hol.forall (hol.arr A (hol.arr B B))) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))) (thm_43 B A) (thm_551 B A f_1).

(; Theorem: |- ((= (\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)) \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_553 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) ((b_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_5))) b_1) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B (hol.arr (Set_2Eset A) hol.bool) (b_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_5))) b_1.

(; Theorem: |- ((= s) s) ;)

(; dict ;)

def thm_554 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) s_1 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) s_1.

(; Theorem: |- ((= ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)) (\lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) s)) ;)

(; dict ;)

def thm_555 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_6))) b_2 s_1) ((s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (Set_2Eset A) hol.bool ((b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_6))) b_2) (s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) s_1 s_1 (thm_553 B A b_2 g_3 f_4) (thm_554 A s_1).

(; Theorem: |- ((= (\lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) s)) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_556 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) s_1) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV (Set_2Eset A) hol.bool (s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) s_1.

(; Theorem: |- ((= ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_557 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_6))) b_2 s_1) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS hol.bool ((b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_6))) b_2 s_1) ((s_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) s_1) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (thm_555 A B s_1 b_2 g_3 f_4) (thm_556 B A s_1 b_2 g_3 f_4).

(; Theorem: |- ((= \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)) \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_558 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_1 s_4) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM (Set_2Eset A) hol.bool (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_1 s_4) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))) (s_4 : hol.term (Set_2Eset A) => thm_557 A B s_4 b_1 g_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s))) (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_559 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_1 s_4)) (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_1 s_4) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))) (thm_159 A) (thm_558 B A b_1 g_2 f_3).

(; Theorem: |- ((= \lambda b. (Data.Bool.! \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s))) \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_560 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4)) (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM B hol.bool (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4)) (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4)))) (b_3 : hol.term B => thm_559 B A b_3 g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_561 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4))) (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4)) (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4)))) (thm_47 B) (thm_560 A B g_1 f_2).

(; Theorem: |- ((= (= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s))))) (= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_562 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4)))) (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4))) (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) thm_317 (thm_561 A B g_1 f_2).

(; Theorem: |- ((= \lambda b. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)) \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_563 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_4 s_1) (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM B hol.bool (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_4 s_1) (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1))) (b_4 : hol.term B => thm_557 A B s_1 b_4 g_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_564 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_4 s_1)) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_6))) b_4 s_1) (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1))) (thm_47 B) (thm_563 A B s_1 g_2 f_3).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda b. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s))) \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_565 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3)) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3)) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (s_3 : hol.term (Set_2Eset A) => thm_564 A B s_3 g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_566 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3)) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (thm_159 A) (thm_565 B A g_1 f_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s))))) ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_567 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3)))) (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4)))) (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_562 A B g_1 f_2) (thm_566 B A g_1 f_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((p x) y)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((p x) y))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((p x) y)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((p x) y))))) ;)

(; dict ;)

def thm_568 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((p b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((p b) s))))) ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((p b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((p b) s))))) ;)

(; dict ;)

def thm_569 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2)))) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((p x) y)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((p x) y))))) ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((p b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((p b) s))))) ;)

(; dict ;)

def thm_570 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2)))) (thm_568 B A p_1) (thm_569 B A p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((p x) y)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((p x) y)))) ;)

(; dict ;)

def thm_571 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_32 B A p_1.

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((p b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((p b) s)))) ;)

(; dict ;)

def thm_572 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall B (y_3 : hol.term B => p_1 x_2 y_3))) (hol.forall B (y_2 : hol.term B => hol.forall A (x_3 : hol.term A => p_1 x_3 y_2)))) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.forall B (s_3 : hol.term B => p_1 b_2 s_3))) (hol.forall B (s_2 : hol.term B => hol.forall A (b_3 : hol.term A => p_1 b_3 s_2)))) (thm_570 B A p_1) (thm_571 B A p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((p b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((p b) s)))) ;)

(; dict ;)

def thm_573 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B (hol.arr (Set_2Eset A) hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => p_1 b_2 s_3))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall B (b_3 : hol.term B => p_1 b_3 s_2)))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B (hol.arr (Set_2Eset A) hol.bool)) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_572 B A p_1) (Set_2Eset A) B p_1.

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((\lambda b. \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b) s)))) ;)

(; dict ;)

def thm_574 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => (A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B (hol.arr (Set_2Eset A) hol.bool)) => thm_573 A B p_1) A B (b_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_575 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_3 s_4))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_6))) b_4 s_3)))) (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (thm_567 A B g_1 f_2) (thm_574 A B g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_576 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.SYM hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_575 A B g_1 f_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ;)

(; dict ;)

def thm_577 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))).

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ;)

(; dict ;)

def thm_578 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (thm_577 r_1 q_2 p_3) (thm_577 r_1 q_2 p_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ;)

(; dict ;)

def thm_579 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ;)

(; dict ;)

def thm_580 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) => hol.SYM hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1)) (thm_579 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ;)

(; dict ;)

def thm_581 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) -> hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ;)

(; dict ;)

def thm_582 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) => hol.SYM hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1) (thm_581 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r))) ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ;)

(; dict ;)

def thm_583 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROP_EXT (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) => thm_580 r_1 q_2 p_3 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp p_3 (hol.imp q_2 r_1)) (hol.imp (hol.and p_3 q_2) r_1)) => thm_582 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= \lambda r. ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r))) \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ;)

(; dict ;)

def thm_584 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_2 (hol.imp q_1 r_3)) (hol.imp (hol.and p_2 q_1) r_3)) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_2 q_1) r_3) (hol.imp p_2 (hol.imp q_1 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_2 (hol.imp q_1 r_3)) (hol.imp (hol.and p_2 q_1) r_3)) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_2 q_1) r_3) (hol.imp p_2 (hol.imp q_1 r_3))) (r_3 : hol.term hol.bool => thm_583 r_3 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r)))) (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))))) ;)

(; dict ;)

def thm_585 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_2 (hol.imp q_1 r_3)) (hol.imp (hol.and p_2 q_1) r_3))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_2 q_1) r_3) (hol.imp p_2 (hol.imp q_1 r_3))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_2 (hol.imp q_1 r_3)) (hol.imp (hol.and p_2 q_1) r_3)) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_2 q_1) r_3) (hol.imp p_2 (hol.imp q_1 r_3))) thm_116 (thm_584 q_1 p_2).

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r)))) \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))))) ;)

(; dict ;)

def thm_586 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3))))) :=
  p_1 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3)))) (q_2 : hol.term hol.bool => thm_585 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r))))) (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))))) ;)

(; dict ;)

def thm_587 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3)))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3)))))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3)))) thm_116 (thm_586 p_1).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))))) ;)

(; dict ;)

def thm_588 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3)))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3)))))) :=
  hol.ABS_THM hol.bool hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3)))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3))))) (p_1 : hol.term hol.bool => thm_587 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool./\ p) q)) r)))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))))))) ;)

(; dict ;)

def thm_589 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3))))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3)))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3))))) thm_116 thm_588.

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))))) ;)

(; dict ;)

def thm_590 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3)))))) :=
  hol.EQ_MP (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp p_1 (hol.imp q_2 r_3)) (hol.imp (hol.and p_1 q_2) r_3))))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3)))))) thm_589 thm_33.

(; Theorem: |- (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))))) ;)

(; dict ;)

def thm_591 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_1 q_2) r_3) (hol.imp p_1 (hol.imp q_2 r_3))))) :=
  p_1 : hol.term hol.bool => thm_590 p_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r)))) ;)

(; dict ;)

def thm_592 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.and p_2 q_1) r_3) (hol.imp p_2 (hol.imp q_1 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_591 p_2 q_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) q)) r)) ((Data.Bool.==> p) ((Data.Bool.==> q) r))) ;)

(; dict ;)

def thm_593 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => thm_592 q_2 p_3 r_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_594 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (hol.eq hol.bool (hol.imp (hol.and p_3 q_2) r_1) (hol.imp p_3 (hol.imp q_2 r_1))) (thm_578 r_1 q_2 p_3) (thm_593 r_1 q_2 p_3)) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_595 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM B hol.bool (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (b_4 : hol.term B => thm_594 B A b_4 g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_596 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (thm_47 B) (thm_595 A B g_1 f_2 s_3).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_597 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (s_3 : hol.term (Set_2Eset A) => thm_596 A B g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_598 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_159 A) (thm_597 B A g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_599 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.SYM hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (thm_598 B A g_1 f_2).

(; Theorem: |- ((= (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_600 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4))) b_1) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV B hol.bool (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4))) b_1.

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b))) ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_601 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4))) b_1)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4))) b_1) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))) (thm_163 A s_4) (thm_600 A B b_1 g_2 f_3 s_4).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> (Set.finite s)) (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b))) \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_602 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM B hol.bool (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (b_4 : hol.term B => thm_601 B A b_4 g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)))) (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_603 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)) (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (thm_47 B) (thm_602 A B g_1 f_2 s_3).

(; Theorem: |- ((= (= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b))))) (= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_604 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)))) (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) thm_317 (thm_603 A B g_1 f_2 s_3).

(; Theorem: |- ((= \lambda b. (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)) \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_605 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4) (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM B hol.bool (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4) (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))) (b_4 : hol.term B => thm_600 A B b_4 g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_606 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4) (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))) (thm_47 B) (thm_605 A B g_1 f_2 s_3).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_607 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (thm_163 A s_3) (thm_606 A B g_1 f_2 s_3).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b))))) ((= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_608 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)))) (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)))) (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_604 A B g_1 f_2 s_3) (thm_607 B A g_1 f_2 s_3).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> p) (q x)))) ((Data.Bool.==> p) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> p) (q x)))) ((Data.Bool.==> p) (Data.Bool.! \lambda x. (q x))))) ;)

(; dict ;)

def thm_609 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda b. ((Data.Bool.==> p) (q b)))) ((Data.Bool.==> p) (Data.Bool.! \lambda b. (q b))))) ((= (Data.Bool.! \lambda b. ((Data.Bool.==> p) (q b)))) ((Data.Bool.==> p) (Data.Bool.! \lambda b. (q b))))) ;)

(; dict ;)

def thm_610 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3)))) (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> p) (q x)))) ((Data.Bool.==> p) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda b. ((Data.Bool.==> p) (q b)))) ((Data.Bool.==> p) (Data.Bool.! \lambda b. (q b))))) ;)

(; dict ;)

def thm_611 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3)))) (thm_609 A q_1 p_2) (thm_610 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> p) (q x)))) ((Data.Bool.==> p) (Data.Bool.! \lambda x. (q x))))) ;)

(; dict ;)

def thm_612 : A : hol.type -> p_1 : hol.term hol.bool -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_1 (q_2 x_3))) (hol.imp p_1 (hol.forall A (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term hol.bool => thm_34 A p_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> p) (q x)))) ((Data.Bool.==> p) (Data.Bool.! \lambda x. (q x)))) ;)

(; dict ;)

def thm_613 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_612 A p_2 q_1.

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> p) (q b)))) ((Data.Bool.==> p) (Data.Bool.! \lambda b. (q b)))) ;)

(; dict ;)

def thm_614 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp p_2 (q_1 x_3))) (hol.imp p_2 (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall A (b_3 : hol.term A => q_1 b_3)))) (thm_611 A q_1 p_2) (thm_613 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> p) (q b)))) ((Data.Bool.==> p) (Data.Bool.! \lambda b. (q b)))) ;)

(; dict ;)

def thm_615 : B : hol.type -> q_1 : hol.term (hol.arr B hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.imp p_2 (q_1 b_3))) (hol.imp p_2 (hol.forall B (b_3 : hol.term B => q_1 b_3)))) :=
  B : hol.type => q_1 : hol.term (hol.arr B hol.bool) => p_2 : hol.term hol.bool => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_614 A q_1 p_2) B q_1 p_2.

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. (\lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) b)))) ;)

(; dict ;)

def thm_616 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => (B : hol.type => q_1 : hol.term (hol.arr B hol.bool) => p_2 : hol.term hol.bool => thm_615 B q_1 p_2) B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_617 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3))) b_4)))) (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (thm_608 A B g_1 f_2 s_3) (thm_616 A B g_1 f_2 s_3).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_618 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (s_3 : hol.term (Set_2Eset A) => thm_617 A B g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_619 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_159 A) (thm_618 B A g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_620 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.SYM hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (thm_619 B A g_1 f_2).

(; Theorem: |- ((= (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) Set.{})) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) ;)

(; dict ;)

def thm_621 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A)).

(; Theorem: |- ((= (Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) Set.{}))) (Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))))) ;)

(; dict ;)

def thm_622 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A)))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) thm_87 (thm_621 B A g_1 f_2).

(; Theorem: |- ((= (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_623 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) s_1) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV (Set_2Eset A) hol.bool (s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) s_1.

(; Theorem: |- ((= (Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s))) (Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_624 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) s_1)) (hol.and (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) s_1) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_1)))) thm_87 (thm_623 B A s_1 g_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_625 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) ;)

(; dict ;)

def thm_626 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) s_2) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_2)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) s_2)) (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_2))))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (thm_624 B A s_2 g_3 f_4) (thm_625 A s_2 x_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s))))) ;)

(; dict ;)

def thm_627 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) s_2) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_2)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) s_2) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_2)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) thm_274 (thm_626 B A x_1 s_2 g_3 f_4).

(; Theorem: |- ((= (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))) ;)

(; dict ;)

def thm_628 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x__1_6) (g_3 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_4 x__1_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_3 x__1_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV (Set_2Eset A) hol.bool (s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s)))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) ;)

(; dict ;)

def thm_629 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) s_2) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2))) (hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_2)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (hol.eq (hol.arr B B) (f_4 x__1_6) (g_3 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_4 x__1_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_3 x__1_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) s_2) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 s_2)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_3 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_3 x_7 (g_3 y_8 s_9)) (g_3 y_8 (g_3 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (hol.eq (hol.arr B B) (f_4 x__1_6) (g_3 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_4 x__1_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_3 x__1_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2))))) (thm_627 B A x_1 s_2 g_3 f_4) (thm_628 B A s_2 x_1 g_3 f_4).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s)))) \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) ;)

(; dict ;)

def thm_630 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x__1_6) (g_2 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_3 x__1_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_2 x__1_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM (Set_2Eset A) hol.bool (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x__1_6) (g_2 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_3 x__1_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_2 x__1_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (s_4 : hol.term (Set_2Eset A) => thm_629 B A x_1 s_4 g_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s))))) (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) ;)

(; dict ;)

def thm_631 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))) (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x__1_6) (g_2 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_3 x__1_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_2 x__1_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x__1_6) (g_2 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_3 x__1_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_2 x__1_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (thm_159 A) (thm_630 B A x_1 g_2 f_3).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s))))) \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) ;)

(; dict ;)

def thm_632 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (x_3 : hol.term A => thm_631 B A x_3 g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))) ;)

(; dict ;)

def thm_633 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (thm_94 A) (thm_632 B A g_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s))))))) ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))))) ;)

(; dict ;)

def thm_634 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A)))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (thm_622 B A g_1 f_2) (thm_633 B A g_1 f_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s)))))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))))) ;)

(; dict ;)

def thm_635 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (hol.imp (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) thm_274 (thm_634 B A g_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s))) ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_636 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (thm_163 A s_3) (thm_623 B A s_3 g_1 f_2).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Set.finite s)) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s))) \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_637 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.ABS_THM (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (s_3 : hol.term (Set_2Eset A) => thm_636 B A g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_638 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_159 A) (thm_637 B A g_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))))) ;)

(; dict ;)

def thm_639 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)))) (hol.imp (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (hol.imp (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (thm_635 B A g_1 f_2) (thm_638 B A g_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ;)

(; dict ;)

def thm_640 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.REFL hol.bool (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ;)

(; dict ;)

def thm_641 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.TRANS hol.bool (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (thm_640 A p_1) (thm_640 A p_1).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ;)

(; dict ;)

def thm_642 : A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) -> hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s)))) ;)

(; dict ;)

def thm_643 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_2 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_2 s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (p_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (p_2 s_3))))) -> hol.proof (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_2 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_2 s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (p_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (p_2 s_3))))) => thm_642 A hyp_1 p_1.

(; Theorem: |- ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s)))))) ;)

(; dict ;)

def thm_644 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) -> hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hyp_1 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))) ;)

(; dict ;)

def thm_645 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_2 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_2 s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (p_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (p_2 s_3))))) -> hyp_2 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_2 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_2 s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (p_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (p_2 s_3))))) => hyp_2 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) => thm_643 A p_1 hyp_1 (thm_644 A p_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s)))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s)))) ;)

(; dict ;)

def thm_646 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) -> hol.proof (hol.imp (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_2 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_2 s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (p_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (p_2 s_3))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hyp_1 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) => hyp_2 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_2 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_2 s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (p_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (p_2 s_3))))) => thm_645 A p_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s)))))) (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s)))))) ;)

(; dict ;)

def thm_647 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr (Set_2Eset A) hol.bool) (p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2))))) => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hyp_2 : hol.proof (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) => thm_646 A p_1 hyp_2 (thm_642 A hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s)))) ;)

(; dict ;)

def thm_648 : A : hol.type -> p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) -> hol.proof (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => thm_647 A (thm_35 A) p_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (\lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) s)))) ;)

(; dict ;)

def thm_649 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => (A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr (Set_2Eset A) hol.bool) => hol.EQ_MP (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (hol.imp (hol.and (p_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (p_1 s_3) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (p_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_3)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (p_1 s_2)))) (thm_641 A p_1) (thm_648 A p_1)) A p_1) A (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) s))) ((= (f x_1)) (g x_1))))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((f x_1) ((f y) s))) ((f y) ((f x_1) s)))))))) (Data.Bool.! \lambda x_1. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x_1) y))) ((= ((g x_1) ((g y) s))) ((g y) ((g x_1) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_650 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.imp (hol.and ((s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) (Set_2E_7B_7D (Set_2Eset A))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) s_4) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) ((s_5 : hol.term (Set_2Eset A) => hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_2 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_2 x_7 (f_2 y_8 s_9)) (f_2 y_8 (f_2 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) ((s_4 : hol.term (Set_2Eset A) => hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) s_3)))) (hol.imp (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x__1_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x__1_6) (g_1 x__1_6)))) (hol.and (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (f_2 x__1_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x__1_6 s_8))))))) (hol.forall A (x__1_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x__1_6 y_7)) (hol.eq B (g_1 x__1_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x__1_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))))) (thm_639 B A g_1 f_2) (thm_649 B A g_1 f_2).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_651 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_652 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS (hol.arr B hol.bool) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (thm_651 A B g_1 f_2) (thm_651 A B g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) ;)

(; dict ;)

def thm_653 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))))) (thm_47 B) (thm_652 A B g_1 f_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ;)

(; dict ;)

def thm_654 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) -> hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ;)

(; dict ;)

def thm_655 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) -> hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ;)

(; dict ;)

def thm_656 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) -> hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) (thm_654 B A g_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_3) (g_1 x_3)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))))) => thm_655 B A g_1 f_2 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ;)

(; dict ;)

def thm_657 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) -> hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))) ;)

(; dict ;)

def thm_658 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))) ;)

(; dict ;)

def thm_659 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (thm_657 B A g_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) => thm_658 B A g_1 f_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))) ;)

(; dict ;)

def thm_660 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))) ;)

(; dict ;)

def thm_661 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (thm_657 B A g_2 f_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) => thm_660 B A f_1 g_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))) ;)

(; dict ;)

def thm_662 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) => hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) Data.Bool.T)) ;)

(; dict ;)

def thm_663 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) Data.Bool.T)) ;)

(; dict ;)

def thm_664 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (thm_663 B A s_1 f_2 y_3 x_4) (thm_663 B A s_1 f_2 y_3 x_4).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) Data.Bool.T)) ;)

(; dict ;)

def thm_665 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => (t_1 : hol.term hol.bool => thm_103 t_1) (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))) ;)

(; dict ;)

def thm_666 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) -> hol.proof (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => thm_533 B A f_1 hyp_1 x_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) ;)

(; dict ;)

def thm_667 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) -> hol.proof (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) => thm_666 B A f_1 x_3 hyp_1 y_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))) ;)

(; dict ;)

def thm_668 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) -> hol.proof (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) => thm_667 A B f_2 y_3 x_4 hyp_1 s_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) Data.Bool.T) ;)

(; dict ;)

def thm_669 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (thm_665 B A s_1 f_2 y_3 x_4) (thm_668 B A s_1 f_2 y_3 x_4 hyp_1).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))) \lambda s. Data.Bool.T) ;)

(; dict ;)

def thm_670 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) -> hol.proof (hol.eq (hol.arr B hol.bool) (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4)))) (s_4 : hol.term B => hol.true)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) => hol.ABS_THM B hol.bool (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4)))) (s_4 : hol.term B => hol.true) (s_4 : hol.term B => (B : hol.type => A : hol.type => s_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (f_2 x_4 (f_2 y_3 s_1)) (f_2 y_3 (f_2 x_4 s_1)))) hol.true) (thm_664 B A s_1 f_2 y_3 x_4) (thm_669 B A s_1 f_2 y_3 x_4 hyp_1)) B A s_4 f_1 y_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))) (Data.Bool.! \lambda s. Data.Bool.T)) ;)

(; dict ;)

def thm_671 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) -> hol.proof (hol.eq hol.bool (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4))))) (hol.forall B (s_4 : hol.term B => hol.true))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4)))) (s_4 : hol.term B => hol.true) (thm_47 B) (thm_670 A B f_1 y_2 x_3 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_672 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda s. t)) t)) ((= (Data.Bool.! \lambda s. t)) t)) ;)

(; dict ;)

def thm_673 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda s. t)) t)) ;)

(; dict ;)

def thm_674 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1) (thm_672 A t_1) (thm_673 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_675 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_36 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda s. t)) t) ;)

(; dict ;)

def thm_676 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (s_2 : hol.term A => t_1)) t_1) (thm_674 A t_1) (thm_675 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. t)) t) ;)

(; dict ;)

def thm_677 : B : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall B (s_2 : hol.term B => t_1)) t_1) :=
  B : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_676 A t_1) B t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda s. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_678 : B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (s_1 : hol.term B => hol.true)) hol.true) :=
  B : hol.type => (B : hol.type => t_1 : hol.term hol.bool => thm_677 B t_1) B hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))) Data.Bool.T) ;)

(; dict ;)

def thm_679 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) -> hol.proof (hol.eq hol.bool (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4))))) hol.true) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_1 x_4 (f_1 y_5 s_6)) (f_1 y_5 (f_1 x_4 s_6))))))) => hol.TRANS hol.bool (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (f_1 x_3 (f_1 y_2 s_4)) (f_1 y_2 (f_1 x_3 s_4))))) (hol.forall B (s_4 : hol.term B => hol.true)) hol.true (thm_671 A B f_1 y_2 x_3 hyp_1) (thm_678 B).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))) \lambda y. Data.Bool.T) ;)

(; dict ;)

def thm_680 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))) (y_3 : hol.term A => hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))) (y_3 : hol.term A => hol.true) (y_3 : hol.term A => thm_679 A B f_1 y_3 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))) (Data.Bool.! \lambda y. Data.Bool.T)) ;)

(; dict ;)

def thm_681 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) (hol.forall A (y_3 : hol.term A => hol.true))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))) (y_3 : hol.term A => hol.true) (thm_94 A) (thm_680 B A f_1 x_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_682 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_683 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_672 A t_1) (thm_682 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_684 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_683 A t_1) (thm_675 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_685 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (y_1 : hol.term A => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_684 A t_1) A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))) Data.Bool.T) ;)

(; dict ;)

def thm_686 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => hol.TRANS hol.bool (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) (hol.forall A (y_3 : hol.term A => hol.true)) hol.true (thm_681 B A f_1 x_2 hyp_1) (thm_685 A).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))) \lambda x. Data.Bool.T) ;)

(; dict ;)

def thm_687 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) (x_2 : hol.term A => hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) (x_2 : hol.term A => hol.true) (x_2 : hol.term A => thm_686 B A f_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. Data.Bool.T)) ;)

(; dict ;)

def thm_688 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall A (x_2 : hol.term A => hol.true))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))) (x_2 : hol.term A => hol.true) (thm_94 A) (thm_687 B A f_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_689 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => thm_675 A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_690 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => hol.TRANS hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) (hol.forall A (x_2 : hol.term A => hol.true)) hol.true (thm_688 B A f_1 hyp_1) (thm_689 A).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s))))))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_691 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4)))))))) (hol.imp hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (f_1 x_2 (f_1 y_3 s_4)) (f_1 y_3 (f_1 x_2 s_4))))))) hol.true thm_274 (thm_690 B A f_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_692 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ;)

(; dict ;)

def thm_693 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) (hol.imp hol.true (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5)))))))) (hol.imp hol.true) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) (thm_691 B A f_2 hyp_1) (thm_692 A B b_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_694 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => (t_1 : hol.term hol.bool => thm_368 t_1) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_695 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => hol.TRANS hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) (hol.imp hol.true (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) (thm_693 B A b_1 f_2 hyp_1) (thm_694 A B b_1 f_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))))) (Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ;)

(; dict ;)

def thm_696 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4)))))))) thm_274 (thm_695 B A b_1 f_2 hyp_1).

(; Theorem: |- ((= ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_697 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_698 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_696 B A b_2 f_3 hyp_1) (thm_697 A B g_1 b_2 f_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_699 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (thm_698 B A g_1 b_2 f_3 hyp_1).

(; Theorem: |- ((= (= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{})))) (= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{})))) ;)

(; dict ;)

def thm_700 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))).

(; Theorem: |- ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) b)) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_701 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10149_3 : hol.term B => hol.eq B __10149_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) b_1) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10149_3 : hol.term B => hol.eq B __10149_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) b_1.

(; Theorem: |- ((= ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{}))) (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) b))) ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_702 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) b_2)) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) b_2) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_700 A B f_1 b_2 g_3) (thm_701 A B b_2 g_3).

(; Theorem: |- ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{}))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_703 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= (= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{})))) (= ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_704 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) thm_317 (thm_703 A B f_1 b_2 g_3).

(; Theorem: |- ((= ((= b) (((Set.fold g) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_705 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.REFL hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))).

(; Theorem: |- ((= ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{})))) ((= ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_706 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_704 A B f_1 b_2 g_3) (thm_705 A B g_3 b_2).

(; Theorem: |- ((= ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{}))) (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) b))) ((= ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_707 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) b_2)) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS hol.bool (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) b_2)) (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (thm_702 A B f_1 b_2 g_3) (thm_706 A B f_1 b_2 g_3).

(; Theorem: |- ((= \lambda _10149. ((= _10149) (((Set.fold g) b) Set.{}))) \lambda _10149. ((= _10149) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_708 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (__10149_3 : hol.term B => hol.eq B __10149_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) (__10149_3 : hol.term B => hol.eq B __10149_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (__10149_3 : hol.term B => hol.eq B __10149_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))).

(; Theorem: |- ((= (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) (((Set.fold f) b) Set.{}))) (\lambda _10149. ((= _10149) (((Set.fold g) b) Set.{})) b)) ;)

(; dict ;)

def thm_709 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_5) (f_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_5)))))))) -> hol.proof (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) b_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_5) (f_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_5)))))))) => hol.APP_THM B hol.bool (__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2 (thm_708 A B b_2 g_3) (thm_76 A B b_2 f_1 hyp_1).

(; Theorem: |- ((= ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_710 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) => hol.EQ_MP (hol.eq hol.bool ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10149_4 : hol.term B => hol.eq B __10149_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) b_2)) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (thm_707 A B f_3 b_2 g_1) (thm_709 A B f_3 b_2 g_1 hyp_1).

(; Theorem: |- ((= ((= b) (((Set.fold g) b) Set.{}))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_711 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> b_3 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5) (f_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)))))))) -> hol.proof (hol.eq hol.bool (hol.eq B b_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => g_2 : hol.term (hol.arr A (hol.arr B B)) => b_3 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5) (f_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)))))))) => hol.SYM hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 (Set_2E_7B_7D (Set_2Eset A)))) (thm_710 A B g_2 b_3 f_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) Data.Bool.T)) ;)

(; dict ;)

def thm_712 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) Data.Bool.T)) ;)

(; dict ;)

def thm_713 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (thm_712 B A s_1 g_2 y_3 x_4) (thm_712 B A s_1 g_2 y_3 x_4).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) Data.Bool.T)) ;)

(; dict ;)

def thm_714 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => (t_1 : hol.term hol.bool => thm_103 t_1) (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))) ;)

(; dict ;)

def thm_715 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) -> hol.proof (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) => thm_662 B A g_1 hyp_1 x_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) ;)

(; dict ;)

def thm_716 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => thm_715 B A g_1 x_3 hyp_1 y_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))) ;)

(; dict ;)

def thm_717 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) -> hol.proof (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) => thm_716 A B g_2 y_3 x_4 hyp_1 s_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) Data.Bool.T) ;)

(; dict ;)

def thm_718 : B : hol.type -> A : hol.type -> s_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) :=
  B : hol.type => A : hol.type => s_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (thm_714 B A s_1 g_2 y_3 x_4) (thm_717 B A s_1 g_2 y_3 x_4 hyp_1).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))) \lambda s. Data.Bool.T) ;)

(; dict ;)

def thm_719 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.eq (hol.arr B hol.bool) (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4)))) (s_4 : hol.term B => hol.true)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hol.ABS_THM B hol.bool (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4)))) (s_4 : hol.term B => hol.true) (s_4 : hol.term B => (B : hol.type => A : hol.type => s_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 y_3)) (hol.eq B (g_2 x_4 (g_2 y_3 s_1)) (g_2 y_3 (g_2 x_4 s_1)))) hol.true) (thm_713 B A s_1 g_2 y_3 x_4) (thm_718 B A s_1 g_2 y_3 x_4 hyp_1)) B A s_4 g_1 y_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))) (Data.Bool.! \lambda s. Data.Bool.T)) ;)

(; dict ;)

def thm_720 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.eq hol.bool (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4))))) (hol.forall B (s_4 : hol.term B => hol.true))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4)))) (s_4 : hol.term B => hol.true) (thm_47 B) (thm_719 A B g_1 y_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))) Data.Bool.T) ;)

(; dict ;)

def thm_721 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.eq hol.bool (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4))))) hol.true) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hol.TRANS hol.bool (hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.eq B (g_1 x_3 (g_1 y_2 s_4)) (g_1 y_2 (g_1 x_3 s_4))))) (hol.forall B (s_4 : hol.term B => hol.true)) hol.true (thm_720 A B g_1 y_2 x_3 hyp_1) (thm_678 B).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))) \lambda y. Data.Bool.T) ;)

(; dict ;)

def thm_722 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))) (y_3 : hol.term A => hol.true)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))) (y_3 : hol.term A => hol.true) (y_3 : hol.term A => thm_721 A B g_1 y_3 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))) (Data.Bool.! \lambda y. Data.Bool.T)) ;)

(; dict ;)

def thm_723 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) (hol.forall A (y_3 : hol.term A => hol.true))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))) (y_3 : hol.term A => hol.true) (thm_94 A) (thm_722 B A g_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))) Data.Bool.T) ;)

(; dict ;)

def thm_724 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) hol.true) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) => hol.TRANS hol.bool (hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) (hol.forall A (y_3 : hol.term A => hol.true)) hol.true (thm_723 B A g_1 x_2 hyp_1) (thm_685 A).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))) \lambda x. Data.Bool.T) ;)

(; dict ;)

def thm_725 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) (x_2 : hol.term A => hol.true)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) (x_2 : hol.term A => hol.true) (x_2 : hol.term A => thm_724 B A g_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) (Data.Bool.! \lambda x. Data.Bool.T)) ;)

(; dict ;)

def thm_726 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) (hol.forall A (x_2 : hol.term A => hol.true))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))) (x_2 : hol.term A => hol.true) (thm_94 A) (thm_725 B A g_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_727 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) hol.true) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) => hol.TRANS hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) (hol.forall A (x_2 : hol.term A => hol.true)) hol.true (thm_726 B A g_1 hyp_1) (thm_689 A).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_728 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4)))))))) (hol.imp hol.true)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall B (s_4 : hol.term B => hol.imp (hol.not (hol.eq A x_2 y_3)) (hol.eq B (g_1 x_2 (g_1 y_3 s_4)) (g_1 y_3 (g_1 x_2 s_4))))))) hol.true thm_274 (thm_727 B A g_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ;)

(; dict ;)

def thm_729 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ;)

(; dict ;)

def thm_730 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.imp hol.true (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5)))))))) (hol.imp hol.true) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (thm_728 B A g_2 hyp_1) (thm_729 A B b_1 g_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ;)

(; dict ;)

def thm_731 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => (t_1 : hol.term hol.bool => thm_368 t_1) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ;)

(; dict ;)

def thm_732 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) => hol.TRANS hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.imp hol.true (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (thm_730 B A b_1 g_2 hyp_1) (thm_731 A B b_1 g_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))))) (Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ;)

(; dict ;)

def thm_733 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) thm_274 (thm_732 B A b_1 g_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((= b) (((Set.fold g) b) Set.{})))) ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((= b) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_734 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))) (thm_733 B A b_1 g_2 hyp_1) (thm_705 A B g_2 b_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((= b) (((Set.fold g) b) Set.{})))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((= b) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_735 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) (thm_734 B A b_1 g_2 hyp_1).

(; Theorem: |- ((= (= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{})))) (= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_736 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))).

(; Theorem: |- ((= (\lambda _10151. ((= b) _10151) b)) ((= b) b)) ;)

(; dict ;)

def thm_737 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq hol.bool ((__10151_2 : hol.term B => hol.eq B b_1 __10151_2) b_1) (hol.eq B b_1 b_1)) :=
  B : hol.type => b_1 : hol.term B => hol.BETA_CONV B hol.bool (__10151_2 : hol.term B => hol.eq B b_1 __10151_2) b_1.

(; Theorem: |- ((= ((= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{}))) (\lambda _10151. ((= b) _10151) b))) ((= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{}))) ((= b) b))) ;)

(; dict ;)

def thm_738 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) b_2)) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) b_2) (hol.eq B b_2 b_2) (thm_736 A B g_1 b_2) (thm_737 B b_2).

(; Theorem: |- ((= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{}))) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_739 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.BETA_CONV B hol.bool (__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= (= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{})))) (= ((= b) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_740 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) thm_317 (thm_739 A B g_1 b_2).

(; Theorem: |- ((= ((= b) b)) ((= b) b)) ;)

(; dict ;)

def thm_741 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B b_1 b_1) (hol.eq B b_1 b_1)) :=
  B : hol.type => b_1 : hol.term B => hol.REFL hol.bool (hol.eq B b_1 b_1).

(; Theorem: |- ((= ((= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{}))) ((= b) b))) ((= ((= b) (((Set.fold g) b) Set.{}))) ((= b) b))) ;)

(; dict ;)

def thm_742 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2)) (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq B b_2 b_2) (hol.eq B b_2 b_2) (thm_740 A B g_1 b_2) (thm_741 B b_2).

(; Theorem: |- ((= ((= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{}))) (\lambda _10151. ((= b) _10151) b))) ((= ((= b) (((Set.fold g) b) Set.{}))) ((= b) b))) ;)

(; dict ;)

def thm_743 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) b_2)) (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) b_2)) (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2)) (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2)) (thm_738 A B g_1 b_2) (thm_742 A B g_1 b_2).

(; Theorem: |- ((= \lambda _10151. ((= b) _10151)) \lambda _10151. ((= b) _10151)) ;)

(; dict ;)

def thm_744 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (__10151_2 : hol.term B => hol.eq B b_1 __10151_2) (__10151_2 : hol.term B => hol.eq B b_1 __10151_2)) :=
  B : hol.type => b_1 : hol.term B => hol.REFL (hol.arr B hol.bool) (__10151_2 : hol.term B => hol.eq B b_1 __10151_2).

(; Theorem: |- ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))) ;)

(; dict ;)

def thm_745 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) -> hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => hyp_1.

(; Theorem: |- ((= (((Set.fold g) b) Set.{})) b) ;)

(; dict ;)

def thm_746 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) hyp_1.

(; Theorem: |- ((= (((Set.fold g) b) Set.{})) b) ;)

(; dict ;)

def thm_747 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => hol.PROVE_HYP (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (thm_745 A B b_1 g_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => thm_746 A B b_1 g_2 hyp_2).

(; Theorem: |- ((= (\lambda _10151. ((= b) _10151) (((Set.fold g) b) Set.{}))) (\lambda _10151. ((= b) _10151) b)) ;)

(; dict ;)

def thm_748 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) -> hol.proof (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) b_2)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) => hol.APP_THM B hol.bool (__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2 (thm_744 B b_2) (thm_747 A B b_2 g_1 hyp_1).

(; Theorem: |- ((= ((= b) (((Set.fold g) b) Set.{}))) ((= b) b)) ;)

(; dict ;)

def thm_749 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) -> hol.proof (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) => hol.EQ_MP (hol.eq hol.bool ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) ((__10151_3 : hol.term B => hol.eq B b_2 __10151_3) b_2)) (hol.eq hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2)) (thm_743 A B g_1 b_2) (thm_748 A B g_1 b_2 hyp_1).

(; Theorem: |- ((= ((= b) b)) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_750 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) -> hol.proof (hol.eq hol.bool (hol.eq B b_2 b_2) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) => hol.SYM hol.bool (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B b_2 b_2) (thm_749 A B g_1 b_2 hyp_1).

(; Theorem: |- ((= b) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_751 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) -> hol.proof (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))) => hol.EQ_MP (hol.eq B b_2 b_2) (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_750 A B g_1 b_2 hyp_1) (thm_90 B b_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_752 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => thm_751 A B g_2 b_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((= b) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_753 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) -> hol.proof (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) => hol.EQ_MP (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) (hol.eq B b_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) (thm_735 A B b_1 g_2 hyp_1) (thm_752 A B b_1 g_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ;)

(; dict ;)

def thm_754 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4) (g_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 s_4)))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => thm_31 B A g_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ;)

(; dict ;)

def thm_755 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => thm_754 A B g_2 b_1.

(; Theorem: |- ((= b) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_756 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) -> hol.proof (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) => thm_753 B A b_2 g_1 hyp_1 (thm_755 B A b_2 g_1).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_757 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) => hol.EQ_MP (hol.eq B b_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_711 A B f_3 g_1 b_2 hyp_2) (thm_756 A B g_1 b_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_758 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) => thm_757 A B g_1 b_2 f_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_759 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.imp (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hol.EQ_MP (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A))))) (thm_699 A B g_1 b_2 f_3 hyp_1) (thm_758 A B g_1 b_2 f_3 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ;)

(; dict ;)

def thm_760 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_2 s_4)))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => thm_31 B A f_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ;)

(; dict ;)

def thm_761 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4) (f_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_4))))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => thm_760 A B f_2 b_1.

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_762 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => thm_759 B A g_1 b_2 f_3 hyp_1 hyp_2 (thm_761 B A b_2 f_3).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_763 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hol.PROVE_HYP (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_662 B A g_1 hyp_2) (hyp_3 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => thm_762 A B g_1 b_2 f_3 hyp_1 hyp_3).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_764 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => hol.PROVE_HYP (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_533 B A f_3 hyp_1) (hyp_3 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => thm_763 A B g_1 b_2 f_3 hyp_3 hyp_2).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_765 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6)))))))) => hol.PROVE_HYP (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_661 B A f_3 g_1 hyp_2) (hyp_3 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))) => thm_764 A B g_1 b_2 f_3 hyp_1 hyp_3).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_766 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6)))))))) => hol.PROVE_HYP (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_659 B A g_1 f_3 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) => thm_765 A B g_1 b_2 f_3 hyp_2 hyp_1).

(; Theorem: |- ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})) ;)

(; dict ;)

def thm_767 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_3 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_3 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_2 (Set_2E_7B_7D (Set_2Eset A)))) (thm_656 B A g_1 f_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6)))))))) => thm_766 A B g_1 b_2 f_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))) ;)

(; dict ;)

def thm_768 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_3 x_4) (g_2 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_2 x_4 (g_2 y_5 s_6)) (g_2 y_5 (g_2 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_3 x_4) (g_2 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_2 x_4 (g_2 y_5 s_6)) (g_2 y_5 (g_2 x_4 s_6))))))))) => thm_767 A B g_2 b_1 f_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{})))) ;)

(; dict ;)

def thm_769 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => b_3 : hol.term B => thm_768 B A b_3 g_1 f_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))) ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))))) ;)

(; dict ;)

def thm_770 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))) ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))))) ;)

(; dict ;)

def thm_771 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.PROVE_HYP (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))))) (hol.EQ_MP (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (thm_653 A B g_1 f_2) (thm_769 A B g_1 f_2)) (hyp_1 : hol.proof (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) => thm_770 B A g_1 f_2 hyp_1).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) ;)

(; dict ;)

def thm_772 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) ;)

(; dict ;)

def thm_773 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (thm_772 B A g_1 f_2) (thm_772 B A g_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))) ;)

(; dict ;)

def thm_774 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (thm_94 A) (thm_773 B A g_1 f_2).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) ;)

(; dict ;)

def thm_775 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))).

(; Theorem: |- ((= \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) ;)

(; dict ;)

def thm_776 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (thm_775 B A x_1 g_2 f_3) (thm_775 B A x_1 g_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) ;)

(; dict ;)

def thm_777 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))))))) (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) (thm_159 A) (thm_776 B A x_1 g_2 f_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s))) ;)

(; dict ;)

def thm_778 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) -> hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_779 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_780 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) => hol.PROVE_HYP (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (thm_778 A B x_1 g_2 f_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) => thm_779 A B x_1 g_2 f_3 s_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)) ;)

(; dict ;)

def thm_781 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) -> hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)) ;)

(; dict ;)

def thm_782 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) -> hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) => hol.PROVE_HYP (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) (thm_778 A B x_4 g_1 f_2 s_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) => thm_781 B A g_1 f_2 s_3 x_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_783 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) -> hol.proof (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)) ;)

(; dict ;)

def thm_784 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) -> hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) => hyp_1.

(; Theorem: |- (Data.Bool.~ ((Set.member x) s)) ;)

(; dict ;)

def thm_785 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hyp_1.

(; Theorem: |- (Data.Bool.~ ((Set.member x) s)) ;)

(; dict ;)

def thm_786 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) => hol.PROVE_HYP (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (thm_784 A s_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) => thm_785 A s_1 x_2 hyp_2).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_787 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) hyp_1.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_788 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) => hol.PROVE_HYP (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (thm_784 A s_2 x_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) => thm_787 A x_1 s_2 hyp_2).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_789 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL (hol.arr B hol.bool) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))).

(; Theorem: |- ((= \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_790 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS (hol.arr B hol.bool) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (thm_789 A B g_1 f_2 s_3 x_4) (thm_789 A B g_1 f_2 s_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))) ;)

(; dict ;)

def thm_791 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)))) (thm_47 B) (thm_790 A B g_1 f_2 s_3 x_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ;)

(; dict ;)

def thm_792 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) -> hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_793 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) -> hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))) (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_794 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) -> hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (thm_792 B A g_1 f_2 s_3 x_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) => thm_793 B A g_1 f_2 s_3 x_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ;)

(; dict ;)

def thm_795 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7))))))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7))))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ;)

(; dict ;)

def thm_796 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7))))))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7))))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7))))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))) (thm_792 B A g_3 f_4 s_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7))))))))) => thm_795 B A s_1 x_2 g_3 f_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_797 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) -> hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) => hyp_1.

(; Theorem: |- ((= ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_798 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_799 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_696 B A b_4 f_5 hyp_1) (thm_798 A B g_1 s_2 x_3 b_4 f_5).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_800 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (thm_799 B A g_1 s_2 x_3 b_4 f_5 hyp_1).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_801 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_802 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_801 A s_1) (thm_801 A s_1).

(; Theorem: |- ((= (Set.finite s)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_803 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_103 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1).

(; Theorem: |- ((= (Set.finite s)) Data.Bool.T) ;)

(; dict ;)

def thm_804 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_803 A s_1) (thm_485 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> (Set.finite s))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_805 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true thm_274 (hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_802 A s_1) (thm_804 A s_1 hyp_1)).

(; Theorem: |- ((= (= (((Set.fold f) b) ((Set.insert x) s)))) (= (((Set.fold f) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_806 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))).

(; Theorem: |- ((= (((Set.fold f) b) s)) (((Set.fold f) b) s)) ;)

(; dict ;)

def thm_807 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_1).

(; Theorem: |- ((= ((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s))) ((Data.Bool.cond Data.Bool.F) (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_808 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.APP_THM B (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.cond B hol.false) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (thm_187 A B s_3 x_4 hyp_1) (thm_807 A B s_3 b_1 f_2).

(; Theorem: |- ((= ((f x) (((Set.fold f) b) s))) ((f x) (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_809 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1)) (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => x_3 : hol.term A => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1)).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))) (((Data.Bool.cond Data.Bool.F) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_810 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.APP_THM B B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)) (thm_808 A B b_1 f_2 s_3 x_4 hyp_1) (thm_809 A B s_3 b_1 x_4 f_2).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))) ((f x) (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_811 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2))) (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_213 B t2_1 t1_2) B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))) ((f x) (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_812 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.TRANS B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3))) (f_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_1 s_3)) (thm_810 A B b_1 f_2 s_3 x_4 hyp_1) (thm_811 A B x_4 s_3 b_1 f_2).

(; Theorem: |- ((= ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))) ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_813 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1))) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)) (thm_806 A B s_1 x_2 b_3 f_4) (thm_812 A B b_3 f_4 s_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ((Data.Bool.==> Data.Bool.T) ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s))))) ;)

(; dict ;)

def thm_814 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) (hol.imp hol.true (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.imp hol.true) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))) (thm_805 A s_4 hyp_2) (thm_813 A B s_4 x_1 b_2 f_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s))))) ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_815 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => (t_1 : hol.term hol.bool => thm_368 t_1) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_816 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) (hol.imp hol.true (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))) (thm_814 B A x_1 b_2 f_3 s_4 hyp_1 hyp_2) (thm_815 A B s_4 x_1 b_2 f_3).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))) (Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s))))) ;)

(; dict ;)

def thm_817 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4)))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))) thm_274 (thm_816 B A x_1 b_2 f_3 s_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_818 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5)))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5))) (thm_817 B A x_2 b_3 f_4 s_5 hyp_1 hyp_2) (thm_798 A B g_1 s_5 x_2 b_3 f_4).

(; Theorem: |- ((= ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_819 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (thm_818 B A g_1 x_3 b_4 f_5 s_2 hyp_1 hyp_2).

(; Theorem: |- ((= (= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s))))) (= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_820 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))).

(; Theorem: |- ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_821 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)).

(; Theorem: |- ((= ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s)))) (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s))))) ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_822 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)))) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_820 A B f_1 s_2 x_3 b_4 g_5) (thm_821 A B f_1 s_2 x_3 b_4 g_5).

(; Theorem: |- ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s)))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_823 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)).

(; Theorem: |- ((= (= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s))))) (= ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_824 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) thm_317 (thm_823 A B f_1 s_2 x_3 b_4 g_5).

(; Theorem: |- ((= ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_825 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))).

(; Theorem: |- ((= ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((= ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_826 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_824 A B f_1 s_2 x_3 b_4 g_5) (thm_825 A B g_5 s_2 b_4 x_3 f_1).

(; Theorem: |- ((= ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s)))) (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s))))) ((= ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_827 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS hol.bool (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)))) (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (thm_822 A B f_1 s_2 x_3 b_4 g_5) (thm_826 A B f_1 s_2 x_3 b_4 g_5).

(; Theorem: |- ((= \lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s)))) \lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_828 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (__10155_5 : hol.term B => hol.eq B __10155_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (__10155_5 : hol.term B => hol.eq B __10155_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (__10155_5 : hol.term B => hol.eq B __10155_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s))) ;)

(; dict ;)

def thm_829 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_1))) => hyp_1.

(; Theorem: |- ((= (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) (((Set.fold f) b) ((Set.insert x) s)))) (\lambda _10155. ((= _10155) (((Set.fold g) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_830 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2))) -> hol.proof (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2))) => hol.APP_THM B hol.bool (__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (thm_828 A B s_2 x_3 b_4 g_5) (thm_829 A B s_2 x_3 b_4 f_1 hyp_1).

(; Theorem: |- ((= ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_831 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) => hol.EQ_MP (hol.eq hol.bool ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) ((__10155_6 : hol.term B => hol.eq B __10155_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2)))) (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (thm_827 A B f_5 s_2 x_3 b_4 g_1) (thm_830 A B f_5 s_2 x_3 b_4 g_1 hyp_1).

(; Theorem: |- ((= ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_832 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2))) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2))) => hol.SYM hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (thm_831 A B g_1 s_2 x_4 b_3 f_5 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_833 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7))))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A (hol.arr B B)) => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7))))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (thm_733 B A b_4 g_5 hyp_1) (thm_825 A B g_5 s_1 b_4 x_2 f_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_834 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7))))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A (hol.arr B B)) => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7))))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) (thm_833 B A s_1 x_2 f_3 b_4 g_5 hyp_1).

(; Theorem: |- ((= (= (((Set.fold g) b) ((Set.insert x) s)))) (= (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_835 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))).

(; Theorem: |- ((= (((Set.fold g) b) s)) (((Set.fold g) b) s)) ;)

(; dict ;)

def thm_836 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1).

(; Theorem: |- ((= ((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s))) ((Data.Bool.cond Data.Bool.F) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_837 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.APP_THM B (hol.arr B B) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.cond B hol.false) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (thm_187 A B s_3 x_4 hyp_1) (thm_836 A B s_3 b_1 g_2).

(; Theorem: |- ((= ((g x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_838 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (g_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_2 s_1)) (g_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_2 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL B (g_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_2 s_1)).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))) (((Data.Bool.cond Data.Bool.F) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_839 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.APP_THM B B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)) (thm_837 A B b_1 g_2 s_3 x_4 hyp_1) (thm_838 A B s_3 b_1 x_4 g_2).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_840 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq B (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_2) (g_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_2))) (g_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_2))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_213 B t2_1 t1_2) B (g_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_2).

(; Theorem: |- ((= (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_841 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (hol.eq B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3))) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.TRANS B (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3))) (hol.cond B hol.false (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3))) (g_2 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_3)) (thm_839 A B b_1 g_2 s_3 x_4 hyp_1) (thm_840 A B x_4 s_3 b_1 g_2).

(; Theorem: |- ((= ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))) ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_842 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.APP_THM B hol.bool (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1))) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1)) (thm_835 A B s_1 x_2 b_3 g_4) (thm_841 A B b_3 g_4 s_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))) ((Data.Bool.==> Data.Bool.T) ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_843 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) (hol.imp hol.true (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4)) (hol.imp hol.true) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))) (thm_805 A s_4 hyp_2) (thm_842 A B s_4 x_1 b_2 g_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s))))) ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_844 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => (t_1 : hol.term hol.bool => thm_368 t_1) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))) ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_845 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) (hol.imp hol.true (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))) (thm_843 B A x_1 b_2 g_3 s_4 hyp_1 hyp_2) (thm_844 A B s_4 x_1 b_2 g_3).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))) (Data.Bool.==> ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_846 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4)))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))) thm_274 (thm_845 B A x_1 b_2 g_3 s_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_847 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5))))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5)))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5)))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5))) (thm_846 B A x_2 b_3 g_4 s_5 hyp_1 hyp_2) (thm_825 A B g_4 s_5 b_3 x_2 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_848 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (g_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2) (g_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2))))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2) (g_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2))))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (g_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (thm_847 B A f_1 x_3 b_4 g_5 s_2 hyp_1 hyp_2).

(; Theorem: |- ((= (= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s))))) (= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_849 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))).

(; Theorem: |- ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_850 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)).

(; Theorem: |- ((= ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s)))) (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) ((g x) (((Set.fold g) b) s))))) ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_851 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (thm_849 A B g_1 s_2 b_3 x_4 f_5) (thm_850 A B g_1 s_2 b_3 x_4 f_5).

(; Theorem: |- ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_852 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)).

(; Theorem: |- ((= (= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s))))) (= ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_853 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) thm_317 (thm_852 A B g_1 s_2 b_3 x_4 f_5).

(; Theorem: |- ((= ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_854 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))).

(; Theorem: |- ((= ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ((= ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_855 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (thm_853 A B g_1 s_2 b_3 x_4 f_5) (thm_854 A B g_1 s_2 b_3 x_4 f_5).

(; Theorem: |- ((= ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s)))) (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) ((g x) (((Set.fold g) b) s))))) ((= ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_856 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS hol.bool (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (thm_851 A B g_1 s_2 b_3 x_4 f_5) (thm_855 A B g_1 s_2 b_3 x_4 f_5).

(; Theorem: |- ((= \lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159)) \lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159)) ;)

(; dict ;)

def thm_857 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (__10159_5 : hol.term B => hol.eq B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1)) __10159_5) (__10159_5 : hol.term B => hol.eq B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1)) __10159_5)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => x_3 : hol.term A => f_4 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (__10159_5 : hol.term B => hol.eq B (f_4 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_1)) __10159_5).

(; Theorem: |- ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_858 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_1))) => hyp_1.

(; Theorem: |- ((= (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) (((Set.fold g) b) ((Set.insert x) s)))) (\lambda _10159. ((= ((f x) (((Set.fold f) b) s))) _10159) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_859 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) -> hol.proof (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) => hol.APP_THM B hol.bool (__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) (thm_857 A B s_2 b_3 x_4 f_5) (thm_858 A B s_2 x_4 b_3 g_1 hyp_1).

(; Theorem: |- ((= ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_860 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) => hol.EQ_MP (hol.eq hol.bool ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) ((__10159_6 : hol.term B => hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) __10159_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (thm_856 A B g_1 s_2 b_3 x_4 f_5) (thm_859 A B g_1 s_2 b_3 x_4 f_5 hyp_1).

(; Theorem: |- ((= ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_861 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) => hol.SYM hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (thm_860 A B g_1 s_2 b_3 x_4 f_5 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ;)

(; dict ;)

def thm_862 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ;)

(; dict ;)

def thm_863 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (thm_862 r_1 q_2 p_3) (thm_862 r_1 q_2 p_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r)) ;)

(; dict ;)

def thm_864 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) -> hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => hyp_1.

(; Theorem: |- ((Data.Bool./\ p) ((Data.Bool.==> q) r)) ;)

(; dict ;)

def thm_865 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof (hol.and p_3 (hol.imp q_2 r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) r) ;)

(; dict ;)

def thm_866 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hyp_2 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) -> hol.proof (hol.imp (hol.imp p_3 q_2) r_1) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_2 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => thm_864 r_1 q_2 p_3 hyp_2 (thm_865 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r)) ;)

(; dict ;)

def thm_867 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof (hol.imp (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_2 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => thm_866 r_1 q_2 p_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r))) ;)

(; dict ;)

def thm_868 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) => hyp_2 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => thm_867 r_1 q_2 p_3 hyp_2 (thm_864 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) r) ;)

(; dict ;)

def thm_869 : p_1 : hol.term hol.bool -> r_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) -> hol.proof (hol.imp q_3 r_2) :=
  p_1 : hol.term hol.bool => r_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) p_1 (hol.imp q_3 r_2) hyp_1.

(; Theorem: |- ((Data.Bool.==> q) r) ;)

(; dict ;)

def thm_870 : p_1 : hol.term hol.bool -> r_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) -> hol.proof (hol.imp q_3 r_2) :=
  p_1 : hol.term hol.bool => r_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) => hol.PROVE_HYP (hol.and p_1 (hol.imp q_3 r_2)) (hol.imp q_3 r_2) (thm_865 r_2 q_3 p_1 hyp_1) (hyp_2 : hol.proof (hol.and p_1 (hol.imp q_3 r_2)) => thm_869 p_1 r_2 q_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_871 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 q_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_872 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof p_3 :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.imp q_2 r_1) p_3 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_873 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof p_3 :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hol.PROVE_HYP (hol.and p_3 (hol.imp q_2 r_1)) p_3 (thm_865 r_1 q_2 p_3 hyp_1) (hyp_2 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => thm_872 r_1 q_2 p_3 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_874 : r_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 (hol.imp q_3 r_1)) -> hyp_2 : hol.proof (hol.imp p_2 q_3) -> hol.proof q_3 :=
  r_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 (hol.imp q_3 r_1)) => hyp_2 : hol.proof (hol.imp p_2 q_3) => thm_871 q_3 p_2 hyp_2 (thm_873 r_1 q_3 p_2 hyp_1).

(; Theorem: |- r ;)

(; dict ;)

def thm_875 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> r_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 (hol.imp q_1 r_3)) -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hol.proof r_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 (hol.imp q_1 r_3)) => hyp_2 : hol.proof (hol.imp p_2 q_1) => thm_870 p_2 r_3 q_1 hyp_1 (thm_874 r_3 p_2 q_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) r) ;)

(; dict ;)

def thm_876 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) -> hol.proof (hol.imp (hol.imp p_3 q_2) r_1) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => hyp_2 : hol.proof (hol.imp p_3 q_2) => thm_875 q_2 p_3 r_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ p) ((Data.Bool.==> q) r))) ((Data.Bool.==> ((Data.Bool.==> p) q)) r)) ;)

(; dict ;)

def thm_877 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_3 (hol.imp q_2 r_1)) => thm_876 r_1 q_2 p_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_878 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))))) (hol.imp (hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (hol.imp (hol.and p_3 (hol.imp q_2 r_1)) (hol.imp (hol.imp p_3 q_2) r_1)) (thm_863 r_1 q_2 p_3) (thm_868 r_1 q_2 p_3 (thm_877 r_1 q_2 p_3))) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((Set.member x') s)) ((= (f x')) (g x')))) \lambda x'. ((Data.Bool.==> ((Set.member x') s)) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_879 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4))) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x)))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_880 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4))) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4))).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((Set.member x') s)) ((= (f x')) (g x')))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_881 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4))) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4))) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4))) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4))) (thm_879 B A g_1 f_2 s_3) (thm_880 B A g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') s)) ((= (f x')) (g x'))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_882 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4)))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_27_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (hol.eq (hol.arr B B) (f_2 x_27_4) (g_1 x_27_4))) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4))) (thm_94 A) (thm_881 B A g_1 f_2 s_3).

(; Theorem: |- ((Set.member x') s) ;)

(; dict ;)

def thm_883 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_884 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> x_27_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => x_27_5 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_885 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> x_27_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => x_27_5 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (thm_884 B A g_1 f_2 s_3 x_4 x_27_5) (thm_884 B A g_1 f_2 s_3 x_4 x_27_5).

(; Theorem: |- ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))) ;)

(; dict ;)

def thm_886 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> x_27_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => x_27_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) => thm_797 B A g_1 f_2 s_3 x_4 hyp_1 x_27_5.

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_887 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_888 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_887 A s_1 y_2 x_3) (thm_887 A s_1 y_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_889 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_3)) (hol.or (hol.eq A x_1 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3))))) :=
  A : hol.type => x_1 : hol.term A => thm_37 A x_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_890 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 s_3)) (hol.or (hol.eq A x_2 y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_889 A x_2 y_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s))) ;)

(; dict ;)

def thm_891 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => thm_890 A y_2 x_3 s_1.

(; Theorem: |- ((= ((Set.member x') ((Set.insert x) s))) ((Data.Bool.\/ ((= x') x)) ((Set.member x') s))) ;)

(; dict ;)

def thm_892 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.or (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_888 A s_1 y_2 x_3) (thm_891 A s_1 y_2 x_3)) A s_1 y_2 x_3) A s_1 x_2 x_27_3.

(; Theorem: |- ((= (Data.Bool.\/ ((= x') x))) (Data.Bool.\/ ((= x') x))) ;)

(; dict ;)

def thm_893 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq A x_27_2 x_1)) (hol.or (hol.eq A x_27_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.eq A x_27_2 x_1)).

(; Theorem: |- ((= ((= ((Set.member x') s)) Data.Bool.T)) ((= ((Set.member x') s)) Data.Bool.T)) ;)

(; dict ;)

def thm_894 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x') s)) Data.Bool.T)) ((= ((Set.member x') s)) Data.Bool.T)) ;)

(; dict ;)

def thm_895 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) (thm_894 A s_1 x_27_2) (thm_894 A s_1 x_27_2).

(; Theorem: |- ((= ((Set.member x') s)) ((= ((Set.member x') s)) Data.Bool.T)) ;)

(; dict ;)

def thm_896 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => (t_1 : hol.term hol.bool => thm_103 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1).

(; Theorem: |- ((= ((Set.member x') s)) Data.Bool.T) ;)

(; dict ;)

def thm_897 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) hol.true) (thm_896 A s_1 x_27_2) (thm_883 A s_1 x_27_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x') x)) ((Set.member x') s))) ((Data.Bool.\/ ((= x') x)) Data.Bool.T)) ;)

(; dict ;)

def thm_898 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1)) (hol.or (hol.eq A x_27_3 x_2) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq A x_27_3 x_2)) (hol.or (hol.eq A x_27_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) hol.true (thm_893 A x_2 x_27_3) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) hol.true) (thm_895 A s_1 x_27_3) (thm_897 A s_1 x_27_3 hyp_1)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_899 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_900 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_899 t_1) (thm_899 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_901 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_902 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_901 thm_901.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) ;)

(; dict ;)

def thm_903 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_116 thm_902.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_904 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_905 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_904 t_1) (thm_904 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_906 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_38 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_907 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_908 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_905 t_1) (thm_906 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => thm_907 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_909 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_39 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_910 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_911 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_899 t_1) (thm_909 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => thm_910 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_912 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_913 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_912 t_1) (thm_912 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_914 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_40 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_915 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_916 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_913 t_1) (thm_914 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => thm_915 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_917 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_918 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_917 t_1) (thm_917 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.F)) t) ;)

(; dict ;)

def thm_919 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) :=
  t_1 : hol.term hol.bool => thm_41 t_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_920 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_921 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_918 t_1) (thm_919 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => thm_920 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_922 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_923 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_922 t_1) (thm_922 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) t)) t) ;)

(; dict ;)

def thm_924 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_42 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_925 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (thm_921 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_923 t_1) (thm_924 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_926 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_916 t_1) (thm_925 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_927 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (thm_911 t_1) (thm_926 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_928 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (thm_908 t_1) (thm_927 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_929 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_928 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_930 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_931 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) thm_903 thm_929 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => thm_930 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_932 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_75 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_933 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_931 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => thm_932 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x') x)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_934 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_27_2 x_1) hol.true) hol.true) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_900 t_1) (thm_933 t_1)) (hol.eq A x_27_2 x_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x') x)) ((Set.member x') s))) Data.Bool.T) ;)

(; dict ;)

def thm_935 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) => hol.TRANS hol.bool (hol.or (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1)) (hol.or (hol.eq A x_27_3 x_2) hol.true) hol.true (thm_898 A s_1 x_2 x_27_3 hyp_1) (thm_934 A x_2 x_27_3).

(; Theorem: |- ((= ((Set.member x') ((Set.insert x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_936 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.or (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1)) hol.true (thm_892 A s_1 x_2 x_27_3) (thm_935 A s_1 x_2 x_27_3 hyp_1).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x') ((Set.insert x) s))) ;)

(; dict ;)

def thm_937 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) hol.true (thm_936 A s_1 x_2 x_27_3 hyp_1).

(; Theorem: |- ((Set.member x') ((Set.insert x) s)) ;)

(; dict ;)

def thm_938 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_1) => hol.EQ_MP hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (thm_937 A s_1 x_2 x_27_3 hyp_1) thm_1.

(; Theorem: |- ((= (f x')) (g x')) ;)

(; dict ;)

def thm_939 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_27_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_3 x_27_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1) -> hol.proof (hol.eq (hol.arr B B) (f_5 x_27_4) (g_3 x_27_4)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_27_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_3 x_27_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => x_27_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5))) (thm_885 B A g_1 f_2 s_3 x_4 x_27_5) (thm_886 B A g_1 f_2 s_3 x_4 x_27_5 hyp_1)) B A g_3 f_5 s_1 x_2 x_27_4 hyp_1 (thm_938 A s_1 x_2 x_27_4 hyp_2).

(; Theorem: |- ((= (f x')) (g x')) ;)

(; dict ;)

def thm_940 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_27_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_3 x_27_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1) -> hol.proof (hol.eq (hol.arr B B) (f_5 x_27_4) (g_3 x_27_4)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_27_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_3 x_27_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1) (hol.eq (hol.arr B B) (f_5 x_27_4) (g_3 x_27_4)) (thm_883 A s_1 x_27_4 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1) => thm_939 A B s_1 x_2 g_3 x_27_4 f_5 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member x') s)) ((= (f x')) (g x'))) ;)

(; dict ;)

def thm_941 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> x_27_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => x_27_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) => thm_940 A B s_4 x_1 g_2 x_27_5 f_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') s)) ((= (f x')) (g x')))) ;)

(; dict ;)

def thm_942 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) -> hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) => x_27_5 : hol.term A => thm_941 B A x_1 g_2 f_3 s_4 x_27_5 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_943 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) => hol.EQ_MP (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (thm_882 B A g_2 f_3 s_4) (thm_942 B A x_1 g_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ;)

(; dict ;)

def thm_944 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq (hol.arr B B) (f_3 x_4) (g_2 x_4)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_2 x_4 (g_2 y_5 s_6)) (g_2 y_5 (g_2 x_4 s_6)))))))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq (hol.arr B B) (f_3 x_4) (g_2 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_2 x_4 (g_2 y_5 s_6)) (g_2 y_5 (g_2 x_4 s_6)))))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq (hol.arr B B) (f_3 x_4) (g_2 x_4)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq (hol.arr B B) (f_3 x_4) (g_2 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_3 x_4 (f_3 y_5 s_6)) (f_3 y_5 (f_3 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_2 x_4 (g_2 y_5 s_6)) (g_2 y_5 (g_2 x_4 s_6)))))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ;)

(; dict ;)

def thm_945 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_3 x_27_5)))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_4 x_5 (f_4 y_6 s_7)) (f_4 y_6 (f_4 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_3 x_5 (g_3 y_6 s_7)) (g_3 y_6 (g_3 x_5 s_7)))))))))) (thm_943 B A x_1 g_3 f_4 s_2 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq (hol.arr B B) (f_4 x_5) (g_3 x_5)))) => thm_944 B A s_2 g_3 f_4 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ;)

(; dict ;)

def thm_946 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ;)

(; dict ;)

def thm_947 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => hol.PROVE_HYP (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_2 x_3 (g_2 y_4 s_5)) (g_2 y_4 (g_2 x_3 s_5))))))))) (thm_533 B A f_1 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_1 x_3 (f_1 y_4 s_5)) (f_1 y_4 (f_1 x_3 s_5))))))) => thm_946 B A f_1 g_2 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ;)

(; dict ;)

def thm_948 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) -> hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) -> hol.proof (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5))))))) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (f_2 x_3 (f_2 y_4 s_5)) (f_2 y_4 (f_2 x_3 s_5))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall B (s_5 : hol.term B => hol.imp (hol.not (hol.eq A x_3 y_4)) (hol.eq B (g_1 x_3 (g_1 y_4 s_5)) (g_1 y_4 (g_1 x_3 s_5)))))))) (thm_947 B A f_2 g_1 hyp_1) (thm_662 B A g_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))) ;)

(; dict ;)

def thm_949 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))) => hyp_3 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_5) (g_2 x_27_5)))) => hol.EQ_MP (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (thm_945 B A x_1 s_4 g_2 f_3 hyp_3) (thm_948 B A g_2 f_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_950 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))) (hol.and (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_128 p_1 q_2 hyp_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_951 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_3)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_2 x_27_6)))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))) (hol.and (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_3)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_2 x_27_6)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq hol.bool (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))) (hol.and (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))))) (thm_949 B A x_1 g_2 f_5 s_3 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_5 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) => thm_950 A B x_1 g_2 s_3 b_4 f_5 hyp_4).

(; Theorem: |- ((= (= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s)))) (= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s)))) ;)

(; dict ;)

def thm_952 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1))) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1))).

(; Theorem: |- ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_953 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1).

(; Theorem: |- ((= ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s))) (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold g) b) s)))) ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_954 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1))) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1))) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (thm_952 A B s_1 b_2 g_3 x_4 f_5) (thm_953 A B s_1 b_2 g_3 x_4 f_5).

(; Theorem: |- ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_955 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.BETA_CONV B hol.bool (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1).

(; Theorem: |- ((= (= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s)))) (= ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_956 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) thm_317 (thm_955 A B s_1 b_2 g_3 x_4 f_5).

(; Theorem: |- ((= ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_957 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))).

(; Theorem: |- ((= ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s))))) ((= ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_958 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (thm_956 A B s_1 b_2 g_3 x_4 f_5) (thm_957 A B s_1 b_2 g_3 x_4 f_5).

(; Theorem: |- ((= ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s))) (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold g) b) s)))) ((= ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_959 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.TRANS hol.bool (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) (thm_954 A B s_1 b_2 g_3 x_4 f_5) (thm_958 A B s_1 b_2 g_3 x_4 f_5).

(; Theorem: |- ((= \lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s)))) \lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_960 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hol.REFL (hol.arr B hol.bool) (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))).

(; Theorem: |- ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)) ;)

(; dict ;)

def thm_961 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) => hyp_1.

(; Theorem: |- ((= (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold f) b) s))) (\lambda _10161. ((= ((f x) _10161)) ((g x) (((Set.fold g) b) s))) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_962 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) -> hol.proof (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) => hol.APP_THM B hol.bool (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1) (thm_960 A B s_1 b_2 g_3 x_4 f_5) (thm_961 A B g_3 s_1 b_2 f_5 hyp_1).

(; Theorem: |- ((= ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_963 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) => hol.EQ_MP (hol.eq hol.bool ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) ((__10161_6 : hol.term B => hol.eq B (f_5 x_4 __10161_6) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)))) (thm_959 A B s_2 b_3 g_1 x_4 f_5) (thm_962 A B s_2 b_3 g_1 x_4 f_5 hyp_1).

(; Theorem: |- ((= ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_964 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) => hol.SYM hol.bool (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) (thm_963 A B g_3 s_1 b_2 x_4 f_5 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) ((Set.insert x) s))) ((= (f x)) (g x))) ;)

(; dict ;)

def thm_965 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_5) (g_1 x_27_5)))) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => x_27_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) => thm_886 B A g_1 f_2 s_3 x_4 x_27_5 hyp_1) B A g_1 f_2 s_3 x_4 x_4 hyp_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert x) s))) ((Data.Bool.\/ ((= x) x)) ((Set.member x) s))) ;)

(; dict ;)

def thm_966 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.or (hol.eq A x_2 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => thm_891 A s_1 y_2 x_3) A s_1 x_2 x_2.

(; Theorem: |- ((= Data.Bool.\/) Data.Bool.\/) ;)

(; dict ;)

def thm_967 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or hol.or) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or.

(; Theorem: |- ((= (Data.Bool.\/ ((= x) x))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_968 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq A x_1 x_1)) (hol.or hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq A x_1 x_1) hol.true thm_967 (thm_106 A x_1).

(; Theorem: |- ((= ((Set.member x) s)) ((Set.member x) s)) ;)

(; dict ;)

def thm_969 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x) x)) ((Set.member x) s))) ((Data.Bool.\/ Data.Bool.T) ((Set.member x) s))) ;)

(; dict ;)

def thm_970 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_2 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq A x_2 x_2)) (hol.or hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (thm_968 A x_2) (thm_969 A s_1 x_2).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) ((Set.member x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_971 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_906 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x) x)) ((Set.member x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_972 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_2 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.or (hol.eq A x_2 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true (thm_970 A s_1 x_2) (thm_971 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) ((Set.insert x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_973 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.or (hol.eq A x_2 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true (thm_966 A s_1 x_2) (thm_972 A s_1 x_2).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x) ((Set.insert x) s))) ;)

(; dict ;)

def thm_974 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) hol.true (thm_973 A s_1 x_2).

(; Theorem: |- ((Set.member x) ((Set.insert x) s)) ;)

(; dict ;)

def thm_975 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.EQ_MP hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (thm_974 A s_1 x_2) thm_1.

(; Theorem: |- ((= (f x)) (g x)) ;)

(; dict ;)

def thm_976 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_2 x_27_5)))) -> hol.proof (hol.eq (hol.arr B B) (f_4 x_3) (g_2 x_3)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A (hol.arr B B)) => x_3 : hol.term A => f_4 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_1)) (hol.eq (hol.arr B B) (f_4 x_27_5) (g_2 x_27_5)))) => thm_965 B A g_2 f_4 s_1 x_3 hyp_1 (thm_975 A s_1 x_3).

(; Theorem: |- ((= ((f x) (((Set.fold g) b) s))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_977 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_1)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_3 x_27_6)))) -> hol.proof (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1)) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_1)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_3 x_27_6)))) => hol.APP_THM B B (f_5 x_4) (g_3 x_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_1) (thm_976 A B s_1 g_3 x_4 f_5 hyp_1) (thm_836 A B s_1 b_2 g_3).

(; Theorem: |- ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_978 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) -> hol.proof (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) => hol.EQ_MP (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (thm_964 A B s_2 b_3 g_1 x_4 f_5 hyp_2) (thm_977 A B s_2 b_3 g_1 x_4 f_5 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_979 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_3)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_2 x_27_6)))) -> hol.proof (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) (hol.eq B (f_5 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3)) (g_2 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_3)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_2 x_27_6)))) => hyp_2 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_4 s_3)) => thm_978 A B g_2 s_3 b_4 x_1 f_5 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((Data.Bool.==> ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_980 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_5)) (hol.eq (hol.arr B B) (f_4 x_27_6) (g_3 x_27_6)))) -> hol.proof (hol.and (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_5)) (hol.eq (hol.arr B B) (f_4 x_27_6) (g_3 x_27_6)))) => hol.EQ_MP (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)))) (hol.and (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))))) (thm_951 A B x_1 g_3 s_5 b_2 f_4 hyp_1 hyp_2 hyp_3) (thm_979 A B x_1 g_3 s_5 b_2 f_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s)))) ;)

(; dict ;)

def thm_981 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_5)) (hol.eq (hol.arr B B) (f_4 x_27_6) (g_3 x_27_6)))) -> hol.proof (hol.imp (hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq (hol.arr B B) (f_4 x_6) (g_3 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5))) (hol.eq B (f_4 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_2 s_5)) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => f_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_3 x_6 (g_3 y_7 s_8)) (g_3 y_7 (g_3 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_5)) (hol.eq (hol.arr B B) (f_4 x_27_6) (g_3 x_27_6)))) => thm_878 B A x_1 b_2 g_3 f_4 s_5 (thm_980 B A x_1 b_2 g_3 f_4 s_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_982 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) -> hol.proof (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_3 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_3 x_5 (f_3 y_6 s_7)) (f_3 y_6 (f_3 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) => thm_783 A B g_2 f_3 s_4 hyp_1 b_1.

(; Theorem: |- ((= ((f x) (((Set.fold f) b) s))) ((g x) (((Set.fold g) b) s))) ;)

(; dict ;)

def thm_983 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hol.proof (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => thm_981 B A x_4 b_3 g_1 f_5 s_2 hyp_1 hyp_2 hyp_3 (thm_982 B A b_3 g_1 f_5 s_2 hyp_4).

(; Theorem: |- ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_984 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) -> hol.proof (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) => hol.EQ_MP (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (g_1 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_2))) (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) (thm_861 A B g_1 s_2 b_3 x_4 f_5 hyp_5) (thm_983 A B g_1 s_2 b_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((= (((Set.fold g) b) ((Set.insert x) s))) ((g x) (((Set.fold g) b) s)))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_985 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_1 x_6 (f_1 y_7 s_8)) (f_1 y_7 (f_1 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_1 x_27_6) (g_5 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_1 x_7) (g_5 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_1 x_7 (f_1 y_8 s_9)) (f_1 y_8 (f_1 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_5 x_7 (g_5 y_8 s_9)) (g_5 y_8 (g_5 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_6 s_2)))) -> hol.proof (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (g_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2))) (hol.eq B (f_1 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_1 x_6 (f_1 y_7 s_8)) (f_1 y_7 (f_1 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_1 x_27_6) (g_5 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_1 x_7) (g_5 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_1 x_7 (f_1 y_8 s_9)) (f_1 y_8 (f_1 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_5 x_7 (g_5 y_8 s_9)) (g_5 y_8 (g_5 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_6 s_2)))) => hyp_5 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (g_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_2))) => thm_984 A B g_5 s_2 b_4 x_3 f_1 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_986 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> b_3 : hol.term B -> g_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_1 x_6 (f_1 y_7 s_8)) (f_1 y_7 (f_1 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_4 x_6 (g_4 y_7 s_8)) (g_4 y_7 (g_4 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.eq (hol.arr B B) (f_1 x_27_6) (g_4 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_1 x_7) (g_4 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_1 x_7 (f_1 y_8 s_9)) (f_1 y_8 (f_1 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_4 x_7 (g_4 y_8 s_9)) (g_4 y_8 (g_4 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_6 s_5)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) -> hol.proof (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5))))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => b_3 : hol.term B => g_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_1 x_6 (f_1 y_7 s_8)) (f_1 y_7 (f_1 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_4 x_6 (g_4 y_7 s_8)) (g_4 y_7 (g_4 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.eq (hol.arr B B) (f_1 x_27_6) (g_4 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_1 x_7) (g_4 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_1 x_7 (f_1 y_8 s_9)) (f_1 y_8 (f_1 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_4 x_7 (g_4 y_8 s_9)) (g_4 y_8 (g_4 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_6 s_5)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) => hol.EQ_MP (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5) (g_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 s_5))))) (hol.eq B (f_1 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) (thm_848 A B f_1 s_5 x_2 b_3 g_4 hyp_5 hyp_6) (thm_985 A B f_1 s_5 x_2 b_3 g_4 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_987 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 p_1 q_2 hyp_1) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_988 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => hol.PROVE_HYP (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4))))))) (thm_745 A B b_1 g_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2E_7B_7D (Set_2Eset A))) b_1) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4) (g_2 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 s_4)))))))) => thm_987 B A b_1 g_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_989 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5) (g_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_5)))))))) => thm_988 B A b_2 g_3 hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_990 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> g_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_6) (g_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_6)))))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4) (g_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => g_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_6) (g_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_3 b_2 s_6)))))))) => thm_989 B A x_1 b_2 g_3 hyp_1 s_4.

(; Theorem: |- ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_991 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_7 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_7) (g_1 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_7)))))))) -> hol.proof (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_7 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A))) b_3) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_7) (g_1 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_7)))))))) => thm_986 B A f_5 x_4 b_3 g_1 s_2 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 (thm_990 B A x_4 b_3 g_1 s_2 hyp_7).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s))))))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_992 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_5 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (hol.eq (hol.arr B B) (f_3 x_7) (g_5 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_5 x_7 (g_5 y_8 s_9)) (g_5 y_8 (g_5 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_6 s_1)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A (hol.arr B B)) => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_5 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (hol.eq (hol.arr B B) (f_3 x_7) (g_5 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_5 x_7 (g_5 y_8 s_9)) (g_5 y_8 (g_5 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_6 s_1)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_7 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))) => thm_991 A B g_5 s_1 b_4 x_2 f_3 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 hyp_7.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))) ((Data.Bool./\ ((= (((Set.fold g) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold g) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold g) b) s)) ((g x) (((Set.fold g) b) s)))))))))) ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_993 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> b_4 : hol.term B -> g_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_5 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (hol.eq (hol.arr B B) (f_3 x_7) (g_5 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_5 x_7 (g_5 y_8 s_9)) (g_5 y_8 (g_5 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_6 s_1)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7))))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A (hol.arr B B)) => b_4 : hol.term B => g_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_5 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (hol.eq (hol.arr B B) (f_3 x_7) (g_5 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_5 x_7 (g_5 y_8 s_9)) (g_5 y_8 (g_5 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_1) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_6 s_1)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.EQ_MP (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7)))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_5 x_6 (g_5 y_7 s_8)) (g_5 y_7 (g_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7) (g_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 s_7))))))))) (hol.eq B (f_3 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_4 s_1)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_1)))) (thm_834 A B s_1 x_2 f_3 b_4 g_5 hyp_2) (thm_992 A B s_1 x_2 f_3 b_4 g_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((= ((f x) (((Set.fold f) b) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_994 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term B -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.eq B (f_5 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term B => x_4 : hol.term A => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_993 B A s_2 x_4 f_5 b_3 g_1 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 (thm_755 B A b_3 g_1).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_995 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_7 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_7 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) => hol.EQ_MP (hol.eq B (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_832 A B g_1 s_2 b_4 x_3 f_5 hyp_7) (thm_994 A B g_1 s_2 b_4 x_3 f_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((Data.Bool.==> ((= (((Set.fold f) b) ((Set.insert x) s))) ((f x) (((Set.fold f) b) s)))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_996 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_7 : hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (f_5 x_3 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_2))) => thm_995 A B g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 hyp_7.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_997 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> x_2 : hol.term A -> b_3 : hol.term B -> f_4 : hol.term (hol.arr A (hol.arr B B)) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.eq (hol.arr B B) (f_4 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) -> hol.proof (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => x_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A (hol.arr B B)) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_4 x_6 (f_4 y_7 s_8)) (f_4 y_7 (f_4 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.eq (hol.arr B B) (f_4 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq (hol.arr B B) (f_4 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_4 x_7 (f_4 y_8 s_9)) (f_4 y_8 (f_4 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_6 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_5)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) => hol.EQ_MP (hol.imp (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) (hol.imp (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5) (f_4 x_2 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 s_5))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_4 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 s_5)))) (thm_819 A B g_1 s_5 x_2 b_3 f_4 hyp_5 hyp_6) (thm_996 A B g_1 s_5 x_2 b_3 f_4 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))) ;)

(; dict ;)

def thm_998 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) -> hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_4 : hol.term A => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_5) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_5)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_5) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5) (f_3 x_4 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_5)))))))) => thm_83 B A b_2 f_3 hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))) ;)

(; dict ;)

def thm_999 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> b_2 : hol.term B -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6)))))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4) (f_3 x_1 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2E_7B_7D (Set_2Eset A))) b_2) (hol.forall A (x_5 : hol.term A => hol.forall (Set_2Eset A) (s_6 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_6) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_6)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_6) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6) (f_3 x_5 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_2 s_6)))))))) => thm_998 B A x_1 b_2 f_3 hyp_1 s_4.

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1000 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_7 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_7 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) => thm_997 B A g_1 x_3 b_4 f_5 s_2 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 (thm_999 B A x_3 b_4 f_5 s_2 hyp_7).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_1001 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_7 : hol.proof (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) => thm_1000 A B g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 hyp_7.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) ((Data.Bool./\ ((= (((Set.fold f) b) Set.{})) b)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (((Set.fold f) b) s)) ((f x) (((Set.fold f) b) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_1002 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hol.EQ_MP (hol.imp (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (hol.imp (hol.imp (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.and (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2E_7B_7D (Set_2Eset A))) b_4) (hol.forall A (x_6 : hol.term A => hol.forall (Set_2Eset A) (s_7 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_7) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_6 s_7)) (hol.cond B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_7) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7) (f_5 x_6 (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)))) (thm_800 A B g_1 s_2 x_3 b_4 f_5 hyp_1) (thm_1001 A B g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1003 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_1002 B A g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6 (thm_761 B A b_4 f_5).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1004 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_662 B A g_1 hyp_2) (hyp_7 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => thm_1003 A B g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_7 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1005 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) -> hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => hyp_3 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_4 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_6 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_533 B A f_5 hyp_1) (hyp_7 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => thm_1004 A B g_1 s_2 x_3 b_4 f_5 hyp_7 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1006 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) -> hyp_2 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_3 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_4 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_5 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_6 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => hyp_2 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_3 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_4 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_5 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_6 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_660 B A f_5 g_1 hyp_6) (hyp_7 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))) => thm_1005 A B g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_7 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1007 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_2 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_5 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_2 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_5 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_658 B A g_1 f_5 hyp_5) (hyp_6 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) => thm_1006 A B g_1 s_2 x_3 b_4 f_5 hyp_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1008 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_2 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_5 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_2 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_5 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) => hol.PROVE_HYP (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_797 B A g_1 f_5 s_2 x_3 hyp_1) (hyp_6 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => thm_1007 A B g_1 s_2 x_3 b_4 f_5 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1009 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) -> hyp_2 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_5 : hol.proof (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => hyp_2 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_5 : hol.proof (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_796 B A s_2 x_3 g_1 f_5 hyp_5) (hyp_6 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8)))))))) => thm_1008 A B g_1 s_2 x_3 b_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6).

(; Theorem: |- ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))) ;)

(; dict ;)

def thm_1010 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> b_4 : hol.term B -> f_5 : hol.term (hol.arr A (hol.arr B B)) -> hyp_1 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_4 : hol.proof (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) -> hol.proof (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A (hol.arr B B)) => hyp_1 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq (hol.arr B B) (f_5 x_7) (g_1 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_5 x_7 (f_5 y_8 s_9)) (f_5 y_8 (f_5 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_1 x_7 (g_1 y_8 s_9)) (g_1 y_8 (g_1 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_6 s_2) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_6 s_2)))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_4 : hol.proof (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_5 x_6 (f_5 y_7 s_8)) (f_5 y_7 (f_5 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) => hol.PROVE_HYP (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_5 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2))) (thm_794 B A g_1 f_5 s_2 x_3 hyp_4) (hyp_5 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_2)) (hol.eq (hol.arr B B) (f_5 x_27_6) (g_1 x_27_6)))) => thm_1009 A B g_1 s_2 x_3 b_4 f_5 hyp_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))) ;)

(; dict ;)

def thm_1011 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_4)))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) -> hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) -> hol.proof (hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_6 : hol.term B => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq (hol.arr B B) (f_3 x_7) (g_2 x_7)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (f_3 x_7 (f_3 y_8 s_9)) (f_3 y_8 (f_3 x_7 s_9))))))) (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.forall B (s_9 : hol.term B => hol.imp (hol.not (hol.eq A x_7 y_8)) (hol.eq B (g_2 x_7 (g_2 y_8 s_9)) (g_2 y_8 (g_2 x_7 s_9))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_6 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_6 s_4)))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) => hyp_4 : hol.proof (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_5 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) => thm_1010 A B g_2 s_4 x_5 b_1 f_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1012 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) => b_5 : hol.term B => thm_1011 B A b_5 g_1 f_2 s_3 x_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1013 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_485 A s_3 hyp_3) (hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) => hol.EQ_MP (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_791 A B g_1 f_2 s_3 x_4) (thm_1012 A B g_1 f_2 s_3 x_4 hyp_1 hyp_2 hyp_4)).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1014 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_185 A s_3 x_4 hyp_2) (hyp_4 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => thm_1013 A B g_1 f_2 s_3 x_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1015 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hyp_3 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hyp_3 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_788 A x_4 s_3 hyp_3) (hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) => thm_1014 A B g_1 f_2 s_3 x_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1016 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_786 A s_3 x_4 hyp_2) (hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => thm_1015 A B g_1 f_2 s_3 x_4 hyp_1 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1017 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) => hol.PROVE_HYP (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_783 A B g_1 f_2 s_3 hyp_1) (hyp_3 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => thm_1016 A B g_1 f_2 s_3 x_4 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1018 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) -> hyp_2 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => hyp_2 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) => hol.PROVE_HYP (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_782 B A g_1 f_2 s_3 x_4 hyp_2) (hyp_3 : hol.proof (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)) => thm_1017 A B g_1 f_2 s_3 x_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))) ;)

(; dict ;)

def thm_1019 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) -> hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3))) => hol.PROVE_HYP (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 s_3))))) (thm_780 A B x_4 g_1 f_2 s_3 hyp_1) (hyp_2 : hol.proof (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_3)))) => thm_1018 A B g_1 f_2 s_3 x_4 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))) ;)

(; dict ;)

def thm_1020 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) => thm_1019 A B g_2 f_3 s_4 x_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))) ;)

(; dict ;)

def thm_1021 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A (hol.arr B B)) -> f_3 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_3 x_6) (g_2 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (hol.eq (hol.arr B B) (f_3 x_27_6) (g_2 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_3 x_6 (f_3 y_7 s_8)) (f_3 y_7 (f_3 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_2 x_6 (g_2 y_7 s_8)) (g_2 y_7 (g_2 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_3 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_4))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A (hol.arr B B)) => f_3 : hol.term (hol.arr A (hol.arr B B)) => s_4 : hol.term (Set_2Eset A) => thm_1020 A B x_1 g_2 f_3 s_4.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s)))))))) ;)

(; dict ;)

def thm_1022 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => x_3 : hol.term A => hol.EQ_MP (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))) (thm_777 B A x_3 g_1 f_2) (thm_1021 B A x_3 g_1 f_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) Set.{})) (((Set.fold g) b) Set.{}))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) s))) ((= (f x')) (g x'))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) ((Set.insert x) s))) (((Set.fold g) b) ((Set.insert x) s))))))))) ;)

(; dict ;)

def thm_1023 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.imp (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (hol.arr B B) (f_2 x_4) (g_1 x_4)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (f_2 x_4 (f_2 y_5 s_6)) (f_2 y_5 (f_2 x_4 s_6))))))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall B (s_6 : hol.term B => hol.imp (hol.not (hol.eq A x_4 y_5)) (hol.eq B (g_1 x_4 (g_1 y_5 s_6)) (g_1 y_5 (g_1 x_4 s_6))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4))))))))) (thm_771 B A g_1 f_2) (hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (hol.forall A (x_3 : hol.term A => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq (hol.arr B B) (f_2 x_6) (g_1 x_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 s_4)))) (hol.and (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4))) (hol.forall B (b_5 : hol.term B => hol.imp (hol.and (hol.forall A (x_27_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (hol.eq (hol.arr B B) (f_2 x_27_6) (g_1 x_27_6)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (f_2 x_6 (f_2 y_7 s_8)) (f_2 y_7 (f_2 x_6 s_8))))))) (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.forall B (s_8 : hol.term B => hol.imp (hol.not (hol.eq A x_6 y_7)) (hol.eq B (g_1 x_6 (g_1 y_7 s_8)) (g_1 y_7 (g_1 x_6 s_8))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 s_4)))))))) (thm_774 B A g_1 f_2) (thm_1022 B A g_1 f_2)).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_1024 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => thm_650 A B g_1 f_2 (thm_1023 A B g_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> (Set.finite s)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s)))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_1025 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.forall B (b_4 : hol.term B => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (thm_620 B A g_1 f_2) (thm_1024 B A g_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_1026 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (thm_599 B A g_1 f_2) (thm_1025 B A g_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))) ;)

(; dict ;)

def thm_1027 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A (hol.arr B B)) -> f_2 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A (hol.arr B B)) => f_2 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall B (b_4 : hol.term B => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_4 s_3) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_4 s_3))))) (hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_2 x_5) (g_1 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_2 x_5 (f_2 y_6 s_7)) (f_2 y_6 (f_2 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_1 x_5 (g_1 y_6 s_7)) (g_1 y_6 (g_1 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_2 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_1 b_3 s_4))))) (thm_576 B A g_1 f_2) (thm_1026 B A g_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s)))))) ;)

(; dict ;)

def thm_1028 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B B)) -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => g_2 : hol.term (hol.arr A (hol.arr B B)) => thm_1027 A B g_2 f_1.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; dict ;)

def thm_1029 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.EQ_MP (hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4)))))) (thm_552 B A f_1) (thm_1028 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda b. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (f x)) (g x))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((f x) ((f y) s))) ((f y) ((f x) s)))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((g x) ((g y) s))) ((g y) ((g x) s))))))))))) ((= (((Set.fold f) b) s)) (((Set.fold g) b) s))))))) ;)

(; thm ;)

def thm_1030 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) (hol.forall (hol.arr A (hol.arr B B)) (f_1 : hol.term (hol.arr A (hol.arr B B)) => hol.forall (hol.arr A (hol.arr B B)) (g_2 : hol.term (hol.arr A (hol.arr B B)) => hol.forall B (b_3 : hol.term B => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq (hol.arr B B) (f_1 x_5) (g_2 x_5)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (f_1 x_5 (f_1 y_6 s_7)) (f_1 y_6 (f_1 x_5 s_7))))))) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.forall B (s_7 : hol.term B => hol.imp (hol.not (hol.eq A x_5 y_6)) (hol.eq B (g_2 x_5 (g_2 y_6 s_7)) (g_2 y_6 (g_2 x_5 s_7)))))))))) (hol.eq B (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) f_1 b_3 s_4) (Set_2Efold (hol.arr (hol.arr A (hol.arr B B)) (hol.arr B (hol.arr (Set_2Eset A) B))) g_2 b_3 s_4))))))) (thm_549 B A) (thm_1029 B A).
