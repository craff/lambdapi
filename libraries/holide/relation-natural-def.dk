
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME relation_2Dnatural_2Ddef.

Number_2ENatural_2Enatural : hol.type.

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

(; Constant Number.Natural.isSuc ;)

def Number_2ENatural_2EisSuc : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => __11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2.

(; Theorem: |- ((= Number.Natural.isSuc) \lambda _11314. \lambda _11315. ((= (Number.Natural.suc _11314)) _11315)) ;)

(; dict ;)

def thm_0 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) Number_2ENatural_2EisSuc (__11314_1 : hol.term Number_2ENatural_2Enatural => __11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) Number_2ENatural_2EisSuc.

(; Theorem: |- ((= _11314) _11314) ;)

(; dict ;)

def thm_1 : __11314_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __11314_1 __11314_1) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __11314_1.

(; Theorem: |- ((= (Number.Natural.isSuc _11314)) (\lambda _11314. \lambda _11315. ((= (Number.Natural.suc _11314)) _11315) _11314)) ;)

(; dict ;)

def thm_2 : __11314_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2EisSuc __11314_1) ((__11314_2 : hol.term Number_2ENatural_2Enatural => __11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11314_1)) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) Number_2ENatural_2EisSuc (__11314_2 : hol.term Number_2ENatural_2Enatural => __11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11314_1 __11314_1 thm_0 (thm_1 __11314_1).

(; Theorem: |- ((= (\lambda _11314. \lambda _11315. ((= (Number.Natural.suc _11314)) _11315) _11314)) \lambda _11315. ((= (Number.Natural.suc _11314)) _11315)) ;)

(; dict ;)

def thm_3 : __11314_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) ((__11314_2 : hol.term Number_2ENatural_2Enatural => __11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11314_1) (__11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2)) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (__11314_2 : hol.term Number_2ENatural_2Enatural => __11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11314_1.

(; Theorem: |- ((= (Number.Natural.isSuc _11314)) \lambda _11315. ((= (Number.Natural.suc _11314)) _11315)) ;)

(; dict ;)

def thm_4 : __11314_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2EisSuc __11314_1) (__11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2)) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2EisSuc __11314_1) ((__11314_2 : hol.term Number_2ENatural_2Enatural => __11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11314_1) (__11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2) (thm_2 __11314_1) (thm_3 __11314_1).

(; Theorem: |- ((= _11315) _11315) ;)

(; dict ;)

def thm_5 : __11315_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __11315_1 __11315_1) :=
  __11315_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __11315_1.

(; Theorem: |- ((= ((Number.Natural.isSuc _11314) _11315)) (\lambda _11315. ((= (Number.Natural.suc _11314)) _11315) _11315)) ;)

(; dict ;)

def thm_6 : __11315_1 : hol.term Number_2ENatural_2Enatural -> __11314_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2EisSuc __11314_2 __11315_1) ((__11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11315_1)) :=
  __11315_1 : hol.term Number_2ENatural_2Enatural => __11314_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Number_2ENatural_2EisSuc __11314_2) (__11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11315_1 __11315_1 (thm_4 __11314_2) (thm_5 __11315_1).

(; Theorem: |- ((= (\lambda _11315. ((= (Number.Natural.suc _11314)) _11315) _11315)) ((= (Number.Natural.suc _11314)) _11315)) ;)

(; dict ;)

def thm_7 : __11315_1 : hol.term Number_2ENatural_2Enatural -> __11314_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((__11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11315_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_1)) :=
  __11315_1 : hol.term Number_2ENatural_2Enatural => __11314_2 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (__11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11315_1.

(; Theorem: |- ((= ((Number.Natural.isSuc _11314) _11315)) ((= (Number.Natural.suc _11314)) _11315)) ;)

(; dict ;)

def thm_8 : __11315_1 : hol.term Number_2ENatural_2Enatural -> __11314_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2EisSuc __11314_2 __11315_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_1)) :=
  __11315_1 : hol.term Number_2ENatural_2Enatural => __11314_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (Number_2ENatural_2EisSuc __11314_2 __11315_1) ((__11315_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_3) __11315_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_2) __11315_1) (thm_6 __11315_1 __11314_2) (thm_7 __11315_1 __11314_2).

(; Theorem: |- (Data.Bool.! \lambda _11315. ((= ((Number.Natural.isSuc _11314) _11315)) ((= (Number.Natural.suc _11314)) _11315))) ;)

(; dict ;)

def thm_9 : __11314_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (__11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Number_2ENatural_2EisSuc __11314_1 __11315_2) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2))) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => __11315_2 : hol.term Number_2ENatural_2Enatural => thm_8 __11315_2 __11314_1.

(; Theorem: |- (Data.Bool.! \lambda _11314. (Data.Bool.! \lambda _11315. ((= ((Number.Natural.isSuc _11314) _11315)) ((= (Number.Natural.suc _11314)) _11315)))) ;)

(; dict ;)

def thm_10 : hol.proof (hol.forall Number_2ENatural_2Enatural (__11314_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (__11315_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Number_2ENatural_2EisSuc __11314_1 __11315_2) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) __11314_1) __11315_2)))) :=
  __11314_1 : hol.term Number_2ENatural_2Enatural => thm_9 __11314_1.

(; Theorem: |- ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n)) ;)

(; dict ;)

def thm_11 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2EisSuc m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (__11315_1 : hol.term Number_2ENatural_2Enatural => __11314_2 : hol.term Number_2ENatural_2Enatural => thm_10 __11314_2 __11315_1) n_1 m_2.

(; Theorem: |- ((= ((= (Number.Natural.suc m)) n)) ((= (Number.Natural.suc m)) n)) ;)

(; dict ;)

def thm_12 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1).

(; Theorem: |- ((= ((= (Number.Natural.suc m)) n)) ((= (Number.Natural.suc m)) n)) ;)

(; dict ;)

def thm_13 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1) (thm_12 n_1 m_2).

(; Theorem: |- ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n)) ;)

(; dict ;)

def thm_14 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2EisSuc m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (Number_2ENatural_2EisSuc m_2 n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_2) n_1) (thm_11 n_1 m_2) (thm_13 n_1 m_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n))) ;)

(; dict ;)

def thm_15 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Number_2ENatural_2EisSuc m_1 n_2) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_1) n_2))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => thm_14 n_2 m_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n)))) ;)

(; dict ;)

def thm_16 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Number_2ENatural_2EisSuc m_1 n_2) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_1) n_2)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => thm_15 m_1.
